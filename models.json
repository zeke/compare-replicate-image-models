[
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/779f3f58-c3db-4403-a01b-3ffed97a1449/out-0-1.jpg",
    "created_at": "2024-02-21T07:36:15.534380Z",
    "default_example": {
      "completed_at": "2024-09-16T18:46:27.608958Z",
      "created_at": "2024-09-16T18:46:26.656000Z",
      "data_removed": false,
      "error": null,
      "id": "p8y2bvajc1rj20chzgmbw5qvxw",
      "input": {
        "width": 1024,
        "height": 1024,
        "prompt": "self-portrait of a woman, lightning in the background",
        "scheduler": "K_EULER",
        "num_outputs": 1,
        "guidance_scale": 0,
        "negative_prompt": "worst quality, low quality",
        "num_inference_steps": 4
      },
      "logs": "Using seed: 139922051\nPrompt: self-portrait of a woman, lightning in the background\n  0%|          | 0/4 [00:00<?, ?it/s]\n 50%|█████     | 2/4 [00:00<00:00, 19.11it/s]\n100%|██████████| 4/4 [00:00<00:00, 18.37it/s]\n100%|██████████| 4/4 [00:00<00:00, 18.47it/s]",
      "metrics": {
        "predict_time": 0.944134354,
        "total_time": 0.952958
      },
      "model": "bytedance/sdxl-lightning-4step",
      "output": [
        "https://replicate.delivery/yhqm/VyD24fDyzM2nQSg0nQc58W2EIj16hGcWKrXJozjAMR1BeidTA/out-0.png"
      ],
      "started_at": "2024-09-16T18:46:26.664823Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/p8y2bvajc1rj20chzgmbw5qvxw",
        "cancel": "https://api.replicate.com/v1/predictions/p8y2bvajc1rj20chzgmbw5qvxw/cancel"
      },
      "version": "5599ed30703defd1d160a25a63321b4dec97101d98b4674bcc56e41f62f35637",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/version-prediction"
    },
    "description": "SDXL-Lightning by ByteDance: a fast text-to-image model that makes high-quality images in 4 steps",
    "github_url": "https://github.com/lucataco/cog-sdxl-lightning-4step",
    "latest_version": {
      "id": "5599ed30703defd1d160a25a63321b4dec97101d98b4674bcc56e41f62f35637",
      "created_at": "2024-09-16T18:44:45.812819Z",
      "cog_version": "0.9.23",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 8,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 1024,
                  "maximum": 1280,
                  "minimum": 256,
                  "x-order": 2,
                  "description": "Width of output image. Recommended 1024 or 1280"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 1024,
                  "maximum": 1280,
                  "minimum": 256,
                  "x-order": 3,
                  "description": "Height of output image. Recommended 1024 or 1280"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "self-portrait of a woman, lightning in the background",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "K_EULER",
                  "x-order": 5,
                  "description": "scheduler"
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 4,
                  "description": "Number of images to output."
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 0,
                  "maximum": 50,
                  "minimum": 0,
                  "x-order": 7,
                  "description": "Scale for classifier-free guidance"
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "worst quality, low quality",
                  "x-order": 1,
                  "description": "Negative Input prompt"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 4,
                  "maximum": 10,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of denoising steps. 4 for best results"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 9,
                  "description": "Disable safety checker for generated images"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM",
                "DPM++2MSDE"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/ByteDance/SDXL-Lightning/blob/main/LICENSE.md",
    "name": "sdxl-lightning-4step",
    "owner": "bytedance",
    "paper_url": "https://huggingface.co/ByteDance/SDXL-Lightning/resolve/main/sdxl_lightning_report.pdf",
    "run_count": 598624931,
    "url": "https://replicate.com/bytedance/sdxl-lightning-4step",
    "visibility": "public",
    "weights_url": "https://huggingface.co/ByteDance/SDXL-Lightning"
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/67c990ba-bb67-4355-822f-2bd8c42b2f0d/flux-schnell.webp",
    "created_at": "2024-07-30T00:32:11.473557Z",
    "default_example": {
      "completed_at": "2024-09-19T23:45:01.446202Z",
      "created_at": "2024-09-19T23:45:00.606000Z",
      "data_removed": false,
      "error": null,
      "id": "jd96x0dyqsrm00cj1jp90zeye0",
      "input": {
        "prompt": "black forest gateau cake spelling out the words \"FLUX SCHNELL\", tasty, food photography, dynamic shot",
        "go_fast": true,
        "num_outputs": 1,
        "aspect_ratio": "1:1",
        "output_format": "webp",
        "output_quality": 80
      },
      "logs": "running quantized prediction\ngenerating\nUsing seed: 68235\n  0%|          | 0/4 [00:00<?, ?it/s]\n 50%|█████     | 2/4 [00:00<00:00, 18.61it/s]\n100%|██████████| 4/4 [00:00<00:00, 13.49it/s]\n100%|██████████| 4/4 [00:00<00:00, 14.07it/s]\nTotal safe images: 1 out of 1",
      "metrics": {
        "image_count": 1,
        "predict_time": 0.829263399,
        "total_time": 0.840202
      },
      "model": "black-forest-labs/flux-schnell",
      "output": [
        "https://replicate.delivery/yhqm/hcDDSNf633zeDUz9sWkKfaftcfJLWIvuhn9vfCFWmufxelmemA/out-0.webp"
      ],
      "started_at": "2024-09-19T23:45:00.616939Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/jd96x0dyqsrm00cj1jp90zeye0",
        "cancel": "https://api.replicate.com/v1/predictions/jd96x0dyqsrm00cj1jp90zeye0/cancel"
      },
      "version": "2f1eb45e847c8630c66e55520e5f91103ec821353910028a30ad746f35978107",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/official-model-prediction"
    },
    "description": "The fastest image generation model tailored for local development and personal use",
    "github_url": "https://github.com/replicate/cog-flux",
    "latest_version": {
      "id": "bf53bdb93d739c9c915091cfa5f49ca662d11273a5eb30e7a2ec1939bcf27a00",
      "created_at": "2024-10-02T01:37:54.199755Z",
      "cog_version": "0.9.21",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "required": [
                "prompt"
              ],
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 3,
                  "description": "Random seed. Set for reproducible generation"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "x-order": 0,
                  "description": "Prompt for generated image"
                },
                "go_fast": {
                  "type": "boolean",
                  "title": "Go Fast",
                  "default": true,
                  "x-order": 7,
                  "description": "Run faster predictions with model optimized for speed (currently fp8 quantized); disable to run in original bf16"
                },
                "megapixels": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/megapixels"
                    }
                  ],
                  "default": "1",
                  "x-order": 8,
                  "description": "Approximate number of megapixels for generated image"
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 2,
                  "description": "Number of outputs to generate"
                },
                "aspect_ratio": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/aspect_ratio"
                    }
                  ],
                  "default": "1:1",
                  "x-order": 1,
                  "description": "Aspect ratio for the generated image"
                },
                "output_format": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/output_format"
                    }
                  ],
                  "default": "webp",
                  "x-order": 4,
                  "description": "Format of the output images"
                },
                "output_quality": {
                  "type": "integer",
                  "title": "Output Quality",
                  "default": 80,
                  "maximum": 100,
                  "minimum": 0,
                  "x-order": 5,
                  "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 6,
                  "description": "Disable safety checker for generated images."
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "megapixels": {
              "enum": [
                "1",
                "0.25"
              ],
              "type": "string",
              "title": "megapixels",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "aspect_ratio": {
              "enum": [
                "1:1",
                "16:9",
                "21:9",
                "3:2",
                "2:3",
                "4:5",
                "5:4",
                "3:4",
                "4:3",
                "9:16",
                "9:21"
              ],
              "type": "string",
              "title": "aspect_ratio",
              "description": "An enumeration."
            },
            "output_format": {
              "enum": [
                "webp",
                "jpg",
                "png"
              ],
              "type": "string",
              "title": "output_format",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://github.com/black-forest-labs/flux/blob/main/model_licenses/LICENSE-FLUX1-schnell",
    "name": "flux-schnell",
    "owner": "black-forest-labs",
    "paper_url": null,
    "run_count": 152152181,
    "url": "https://replicate.com/black-forest-labs/flux-schnell",
    "visibility": "public",
    "weights_url": "https://huggingface.co/black-forest-labs/FLUX.1-schnell"
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/710f5e9f-9561-4e4f-9d1e-614205f62597/stable-diffusion.webp",
    "created_at": "2022-08-22T21:37:08.396208Z",
    "default_example": {
      "completed_at": "2023-04-10T15:45:33.474978Z",
      "created_at": "2023-04-10T15:45:31.434998Z",
      "data_removed": false,
      "error": null,
      "id": "uvb7ynit4bhpjds3vn4bx7npeq",
      "input": {
        "prompt": "an astronaut riding a horse on mars, hd, dramatic lighting",
        "scheduler": "K_EULER",
        "num_outputs": 1,
        "guidance_scale": 7.5,
        "image_dimensions": "512x512",
        "num_inference_steps": 50
      },
      "logs": "Using seed: 52443\ninput_shape: torch.Size([1, 77])\n  0%|          | 0/50 [00:00<?, ?it/s]\n 10%|█         | 5/50 [00:00<00:01, 41.06it/s]\n 20%|██        | 10/50 [00:00<00:00, 41.32it/s]\n 30%|███       | 15/50 [00:00<00:00, 43.77it/s]\n 42%|████▏     | 21/50 [00:00<00:00, 46.80it/s]\n 54%|█████▍    | 27/50 [00:00<00:00, 48.53it/s]\n 66%|██████▌   | 33/50 [00:00<00:00, 49.63it/s]\n 78%|███████▊  | 39/50 [00:00<00:00, 50.45it/s]\n 90%|█████████ | 45/50 [00:00<00:00, 50.90it/s]\n100%|██████████| 50/50 [00:01<00:00, 48.51it/s]",
      "metrics": {
        "predict_time": 1.889956,
        "total_time": 2.03998
      },
      "model": "stability-ai/stable-diffusion",
      "output": [
        "https://replicate.delivery/pbxt/sWeZFZou6v3CPKuoJbqX46ugPaHT1DcsWYx0srPmGrMOCPYIA/out-0.png"
      ],
      "started_at": "2023-04-10T15:45:31.585022Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/uvb7ynit4bhpjds3vn4bx7npeq",
        "cancel": "https://api.replicate.com/v1/predictions/uvb7ynit4bhpjds3vn4bx7npeq/cancel"
      },
      "version": "db21e45d3f7023abc2a46ee38a23973f6dce16bb082a930b0c49861f96d1e5bf",
      "webhook": null
    },
    "description": "A latent text-to-image diffusion model capable of generating photo-realistic images given any text input",
    "github_url": "https://github.com/replicate/cog-stable-diffusion",
    "latest_version": {
      "id": "ac732df83cea7fff18b8472768c88ad041fa750ff7682a21affe81863cbe77e4",
      "created_at": "2023-07-10T06:50:41.613128Z",
      "cog_version": "0.7.2",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.1.0",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 8,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "width": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/width"
                    }
                  ],
                  "default": 768,
                  "x-order": 2,
                  "description": "Width of generated image in pixels. Needs to be a multiple of 64"
                },
                "height": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/height"
                    }
                  ],
                  "default": 768,
                  "x-order": 1,
                  "description": "Height of generated image in pixels. Needs to be a multiple of 64"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "a vision of paradise. unreal engine",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "DPMSolverMultistep",
                  "x-order": 7,
                  "description": "Choose a scheduler."
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 4,
                  "description": "Number of images to generate."
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 7.5,
                  "maximum": 20,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Scale for classifier-free guidance"
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "x-order": 3,
                  "description": "Specify things to not see in the output"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 50,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 5,
                  "description": "Number of denoising steps"
                }
              }
            },
            "width": {
              "enum": [
                64,
                128,
                192,
                256,
                320,
                384,
                448,
                512,
                576,
                640,
                704,
                768,
                832,
                896,
                960,
                1024
              ],
              "type": "integer",
              "title": "width",
              "description": "An enumeration."
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "height": {
              "enum": [
                64,
                128,
                192,
                256,
                320,
                384,
                448,
                512,
                576,
                640,
                704,
                768,
                832,
                896,
                960,
                1024
              ],
              "type": "integer",
              "title": "height",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "K_EULER",
                "DPMSolverMultistep",
                "K_EULER_ANCESTRAL",
                "PNDM",
                "KLMS"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "completed",
                    "logs",
                    "output",
                    "start"
                  ],
                  "uniqueItems": true
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/spaces/CompVis/stable-diffusion-license",
    "name": "stable-diffusion",
    "owner": "stability-ai",
    "paper_url": "https://arxiv.org/abs/2112.10752",
    "run_count": 109690092,
    "url": "https://replicate.com/stability-ai/stable-diffusion",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/9065f9e3-40da-4742-8cb8-adfa8e794c0d/sdxl_cover.jpg",
    "created_at": "2023-07-26T17:53:09.882651Z",
    "default_example": {
      "completed_at": "2023-10-12T17:10:12.909279Z",
      "created_at": "2023-10-12T17:10:07.956869Z",
      "data_removed": false,
      "error": null,
      "id": "dzsqmb3bg4lqpjkz2iptjqgccm",
      "input": {
        "width": 768,
        "height": 768,
        "prompt": "An astronaut riding a rainbow unicorn, cinematic, dramatic",
        "refine": "expert_ensemble_refiner",
        "scheduler": "K_EULER",
        "lora_scale": 0.6,
        "num_outputs": 1,
        "guidance_scale": 7.5,
        "apply_watermark": false,
        "high_noise_frac": 0.8,
        "negative_prompt": "",
        "prompt_strength": 0.8,
        "num_inference_steps": 25
      },
      "logs": "Using seed: 16010\nPrompt: An astronaut riding a rainbow unicorn, cinematic, dramatic\ntxt2img mode\n  0%|          | 0/16 [00:00<?, ?it/s]\n  6%|▋         | 1/16 [00:00<00:01,  7.96it/s]\n 12%|█▎        | 2/16 [00:00<00:01,  7.89it/s]\n 19%|█▉        | 3/16 [00:00<00:01,  7.86it/s]\n 25%|██▌       | 4/16 [00:00<00:01,  7.85it/s]\n 31%|███▏      | 5/16 [00:00<00:01,  7.83it/s]\n 38%|███▊      | 6/16 [00:00<00:01,  7.82it/s]\n 44%|████▍     | 7/16 [00:00<00:01,  7.81it/s]\n 50%|█████     | 8/16 [00:01<00:01,  7.80it/s]\n 56%|█████▋    | 9/16 [00:01<00:00,  7.80it/s]\n 62%|██████▎   | 10/16 [00:01<00:00,  7.78it/s]\n 69%|██████▉   | 11/16 [00:01<00:00,  7.79it/s]\n 75%|███████▌  | 12/16 [00:01<00:00,  7.79it/s]\n 81%|████████▏ | 13/16 [00:01<00:00,  7.78it/s]\n 88%|████████▊ | 14/16 [00:01<00:00,  7.79it/s]\n 94%|█████████▍| 15/16 [00:01<00:00,  7.79it/s]\n100%|██████████| 16/16 [00:02<00:00,  7.79it/s]\n100%|██████████| 16/16 [00:02<00:00,  7.81it/s]\n  0%|          | 0/5 [00:00<?, ?it/s]\n 20%|██        | 1/5 [00:00<00:00,  7.47it/s]\n 40%|████      | 2/5 [00:00<00:00,  7.42it/s]\n 60%|██████    | 3/5 [00:00<00:00,  7.40it/s]\n 80%|████████  | 4/5 [00:00<00:00,  7.39it/s]\n100%|██████████| 5/5 [00:00<00:00,  7.39it/s]\n100%|██████████| 5/5 [00:00<00:00,  7.40it/s]",
      "metrics": {
        "predict_time": 4.981337,
        "total_time": 4.95241
      },
      "model": "stability-ai/sdxl",
      "output": [
        "https://pbxt.replicate.delivery/YXbcLudoHBIYHV6L0HbcTx5iRzLFMwygLr3vhGpZI35caXbE/out-0.png"
      ],
      "started_at": "2023-10-12T17:10:07.927942Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/dzsqmb3bg4lqpjkz2iptjqgccm",
        "cancel": "https://api.replicate.com/v1/predictions/dzsqmb3bg4lqpjkz2iptjqgccm/cancel"
      },
      "version": "c221b2b8ef527988fb59bf24a8b97c4561f1c671f73bd389f866bfb27c061316",
      "webhook": null
    },
    "description": "A text-to-image generative AI model that creates beautiful images",
    "github_url": "https://github.com/replicate/cog-sdxl",
    "latest_version": {
      "id": "7762fd07cf82c948538e41f63f77d685e02b063e37e496e96eefd46c929f9bdc",
      "created_at": "2024-05-23T23:26:26.222931Z",
      "cog_version": "0.9.5",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/trainings": {
            "post": {
              "summary": "Train",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/TrainingResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "operationId": "train_trainings_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TrainingRequest"
                    }
                  }
                }
              }
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/trainings/{training_id}": {
            "put": {
              "summary": "Train Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "training_id",
                  "schema": {
                    "type": "string",
                    "title": "Training ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "operationId": "train_idempotent_trainings__training_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/TrainingRequest"
                        }
                      ],
                      "title": "Training Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/trainings/{training_id}/cancel": {
            "post": {
              "summary": "Cancel Training",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Training Trainings  Training Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "training_id",
                  "schema": {
                    "type": "string",
                    "title": "Training ID"
                  },
                  "required": true
                }
              ],
              "operationId": "cancel_training_trainings__training_id__cancel_post"
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 11,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 2,
                  "description": "Input image for img2img or inpaint mode"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 1024,
                  "x-order": 4,
                  "description": "Width of output image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 1024,
                  "x-order": 5,
                  "description": "Height of output image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "An astronaut riding a rainbow unicorn",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "refine": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/refine"
                    }
                  ],
                  "default": "no_refiner",
                  "x-order": 12,
                  "description": "Which refine style to use"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "K_EULER",
                  "x-order": 7,
                  "description": "scheduler"
                },
                "lora_scale": {
                  "type": "number",
                  "title": "Lora Scale",
                  "default": 0.6,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 16,
                  "description": "LoRA additive scale. Only applicable on trained models."
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of images to output."
                },
                "refine_steps": {
                  "type": "integer",
                  "title": "Refine Steps",
                  "x-order": 14,
                  "description": "For base_image_refiner, the number of steps to refine, defaults to num_inference_steps"
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 7.5,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 9,
                  "description": "Scale for classifier-free guidance"
                },
                "apply_watermark": {
                  "type": "boolean",
                  "title": "Apply Watermark",
                  "default": true,
                  "x-order": 15,
                  "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
                },
                "high_noise_frac": {
                  "type": "number",
                  "title": "High Noise Frac",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 13,
                  "description": "For expert_ensemble_refiner, the fraction of noise to use"
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "",
                  "x-order": 1,
                  "description": "Input Negative Prompt"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 10,
                  "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image"
                },
                "replicate_weights": {
                  "type": "string",
                  "title": "Replicate Weights",
                  "x-order": 17,
                  "description": "Replicate LoRA weights to use. Leave blank to use the default weights."
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 50,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Number of denoising steps"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 18,
                  "description": "Disable safety checker for generated images. This feature is only available through the API. See [https://replicate.com/docs/how-does-replicate-work#safety](https://replicate.com/docs/how-does-replicate-work#safety)"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "refine": {
              "enum": [
                "no_refiner",
                "expert_ensemble_refiner",
                "base_image_refiner"
              ],
              "type": "string",
              "title": "refine",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "lr_scheduler": {
              "enum": [
                "constant",
                "linear"
              ],
              "type": "string",
              "title": "lr_scheduler",
              "description": "An enumeration."
            },
            "TrainingInput": {
              "type": "object",
              "title": "TrainingInput",
              "required": [
                "input_images"
              ],
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 1,
                  "description": "Random seed for reproducible training. Leave empty to use a random seed"
                },
                "ti_lr": {
                  "type": "number",
                  "title": "Ti Lr",
                  "default": 0.0003,
                  "x-order": 8,
                  "description": "Scaling of learning rate for training textual inversion embeddings. Don't alter unless you know what you're doing."
                },
                "is_lora": {
                  "type": "boolean",
                  "title": "Is Lora",
                  "default": true,
                  "x-order": 6,
                  "description": "Whether to use LoRA training. If set to False, will use Full fine tuning"
                },
                "lora_lr": {
                  "type": "number",
                  "title": "Lora Lr",
                  "default": 0.0001,
                  "x-order": 9,
                  "description": "Scaling of learning rate for training LoRA embeddings. Don't alter unless you know what you're doing."
                },
                "verbose": {
                  "type": "boolean",
                  "title": "Verbose",
                  "default": true,
                  "x-order": 19,
                  "description": "verbose output"
                },
                "lora_rank": {
                  "type": "integer",
                  "title": "Lora Rank",
                  "default": 32,
                  "x-order": 10,
                  "description": "Rank of LoRA embeddings. Don't alter unless you know what you're doing."
                },
                "resolution": {
                  "type": "integer",
                  "title": "Resolution",
                  "default": 768,
                  "x-order": 2,
                  "description": "Square pixel resolution which your images will be resized to for training"
                },
                "input_images": {
                  "type": "string",
                  "title": "Input Images",
                  "format": "uri",
                  "x-order": 0,
                  "description": "A .zip or .tar file containing the image files that will be used for fine-tuning"
                },
                "lr_scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/lr_scheduler"
                    }
                  ],
                  "default": "constant",
                  "x-order": 11,
                  "description": "Learning rate scheduler to use for training"
                },
                "token_string": {
                  "type": "string",
                  "title": "Token String",
                  "default": "TOK",
                  "x-order": 13,
                  "description": "A unique string that will be trained to refer to the concept in the input images. Can be anything, but TOK works well"
                },
                "caption_prefix": {
                  "type": "string",
                  "title": "Caption Prefix",
                  "default": "a photo of TOK, ",
                  "x-order": 14,
                  "description": "Text which will be used as prefix during automatic captioning. Must contain the `token_string`. For example, if caption text is 'a photo of TOK', automatic captioning will expand to 'a photo of TOK under a bridge', 'a photo of TOK holding a cup', etc."
                },
                "lr_warmup_steps": {
                  "type": "integer",
                  "title": "Lr Warmup Steps",
                  "default": 100,
                  "x-order": 12,
                  "description": "Number of warmup steps for lr schedulers with warmups."
                },
                "max_train_steps": {
                  "type": "integer",
                  "title": "Max Train Steps",
                  "default": 1000,
                  "x-order": 5,
                  "description": "Number of individual training steps. Takes precedence over num_train_epochs"
                },
                "num_train_epochs": {
                  "type": "integer",
                  "title": "Num Train Epochs",
                  "default": 4000,
                  "x-order": 4,
                  "description": "Number of epochs to loop through your training dataset"
                },
                "train_batch_size": {
                  "type": "integer",
                  "title": "Train Batch Size",
                  "default": 4,
                  "x-order": 3,
                  "description": "Batch size (per device) for training"
                },
                "unet_learning_rate": {
                  "type": "number",
                  "title": "Unet Learning Rate",
                  "default": 0.000001,
                  "x-order": 7,
                  "description": "Learning rate for the U-Net. We recommend this value to be somewhere between `1e-6` to `1e-5`."
                },
                "checkpointing_steps": {
                  "type": "integer",
                  "title": "Checkpointing Steps",
                  "default": 999999,
                  "x-order": 20,
                  "description": "Number of steps between saving checkpoints. Set to very very high number to disable checkpointing, because you don't need one."
                },
                "clipseg_temperature": {
                  "type": "number",
                  "title": "Clipseg Temperature",
                  "default": 1,
                  "x-order": 18,
                  "description": "How blurry you want the CLIPSeg mask to be. We recommend this value be something between `0.5` to `1.0`. If you want to have more sharp mask (but thus more errorful), you can decrease this value."
                },
                "mask_target_prompts": {
                  "type": "string",
                  "title": "Mask Target Prompts",
                  "x-order": 15,
                  "description": "Prompt that describes part of the image that you will find important. For example, if you are fine-tuning your pet, `photo of a dog` will be a good prompt. Prompt-based masking is used to focus the fine-tuning process on the important/salient parts of the image"
                },
                "input_images_filetype": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/input_images_filetype"
                    }
                  ],
                  "default": "infer",
                  "x-order": 21,
                  "description": "Filetype of the input images. Can be either `zip` or `tar`. By default its `infer`, and it will be inferred from the ext of input file."
                },
                "crop_based_on_salience": {
                  "type": "boolean",
                  "title": "Crop Based On Salience",
                  "default": true,
                  "x-order": 16,
                  "description": "If you want to crop the image to `target_size` based on the important parts of the image, set this to True. If you want to crop the image based on face detection, set this to False"
                },
                "use_face_detection_instead": {
                  "type": "boolean",
                  "title": "Use Face Detection Instead",
                  "default": false,
                  "x-order": 17,
                  "description": "If you want to use face detection instead of CLIPSeg for masking. For face applications, we recommend using this option."
                }
              }
            },
            "TrainingOutput": {
              "type": "object",
              "title": "TrainingOutput",
              "required": [
                "weights"
              ],
              "properties": {
                "weights": {
                  "type": "string",
                  "title": "Weights",
                  "format": "uri"
                }
              }
            },
            "TrainingRequest": {
              "type": "object",
              "title": "TrainingRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/TrainingInput"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "TrainingResponse": {
              "type": "object",
              "title": "TrainingResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/TrainingInput"
                },
                "output": {
                  "$ref": "#/components/schemas/TrainingOutput"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            },
            "input_images_filetype": {
              "enum": [
                "zip",
                "tar",
                "infer"
              ],
              "type": "string",
              "title": "input_images_filetype",
              "description": "An enumeration."
            }
          }
        }
      }
    },
    "license_url": "https://github.com/Stability-AI/generative-models/blob/main/model_licenses/LICENSE-SDXL1.0",
    "name": "sdxl",
    "owner": "stability-ai",
    "paper_url": "https://arxiv.org/abs/2307.01952",
    "run_count": 71612315,
    "url": "https://replicate.com/stability-ai/sdxl",
    "visibility": "public",
    "weights_url": "https://huggingface.co/stabilityai/stable-diffusion-xl-base-1.0"
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/3dbPD8n9bqbDLBZ6PwLbB23NFnmSLV3vhe6XLWpGEcvUODPIA/output_1.png",
    "created_at": "2023-02-13T21:03:56.201162Z",
    "default_example": {
      "completed_at": "2023-02-13T22:09:46.520767Z",
      "created_at": "2023-02-13T22:06:58.326782Z",
      "data_removed": false,
      "error": null,
      "id": "yz7xq2yxgzgp3d3d7pgxkmcad4",
      "input": {
        "image": "https://replicate.delivery/pbxt/IJE6zP4jtdwxe7SffC7te9DPHWHW99dMXED5AWamlBNcvxn0/user_1.png",
        "scale": 9,
        "prompt": "a photo of a brightly colored turtle",
        "a_prompt": "best quality, extremely detailed",
        "n_prompt": "longbody, lowres, bad anatomy, bad hands, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality",
        "ddim_steps": 20,
        "num_samples": "1",
        "image_resolution": "512"
      },
      "logs": "Global seed set to 422584\nData shape for DDIM sampling is (1, 4, 64, 64), eta 0.0\nRunning DDIM Sampling with 20 timesteps\nDDIM Sampler:   0%|          | 0/20 [00:00<?, ?it/s]\nDDIM Sampler:   5%|▌         | 1/20 [00:02<00:52,  2.77s/it]\nDDIM Sampler:  10%|█         | 2/20 [00:03<00:28,  1.57s/it]\nDDIM Sampler:  15%|█▌        | 3/20 [00:04<00:20,  1.18s/it]\nDDIM Sampler:  20%|██        | 4/20 [00:04<00:15,  1.00it/s]\nDDIM Sampler:  25%|██▌       | 5/20 [00:05<00:13,  1.11it/s]\nDDIM Sampler:  30%|███       | 6/20 [00:06<00:11,  1.19it/s]\nDDIM Sampler:  35%|███▌      | 7/20 [00:07<00:10,  1.24it/s]\nDDIM Sampler:  40%|████      | 8/20 [00:07<00:09,  1.29it/s]\nDDIM Sampler:  45%|████▌     | 9/20 [00:08<00:08,  1.32it/s]\nDDIM Sampler:  50%|█████     | 10/20 [00:09<00:07,  1.34it/s]\nDDIM Sampler:  55%|█████▌    | 11/20 [00:10<00:06,  1.35it/s]\nDDIM Sampler:  60%|██████    | 12/20 [00:10<00:05,  1.36it/s]\nDDIM Sampler:  65%|██████▌   | 13/20 [00:11<00:05,  1.36it/s]\nDDIM Sampler:  70%|███████   | 14/20 [00:12<00:04,  1.36it/s]\nDDIM Sampler:  75%|███████▌  | 15/20 [00:12<00:03,  1.37it/s]\nDDIM Sampler:  80%|████████  | 16/20 [00:13<00:02,  1.37it/s]\nDDIM Sampler:  85%|████████▌ | 17/20 [00:14<00:02,  1.37it/s]\nDDIM Sampler:  90%|█████████ | 18/20 [00:15<00:01,  1.37it/s]\nDDIM Sampler:  95%|█████████▌| 19/20 [00:15<00:00,  1.37it/s]\nDDIM Sampler: 100%|██████████| 20/20 [00:16<00:00,  1.37it/s]\nDDIM Sampler: 100%|██████████| 20/20 [00:16<00:00,  1.21it/s]",
      "metrics": {
        "predict_time": 20.510561,
        "total_time": 168.193985
      },
      "model": "jagilley/controlnet-scribble",
      "output": [
        "https://replicate.delivery/pbxt/aNV6gZDqqiJiPddvDfV9jkATVcE6ckTl7hmweE7Z8DbpcGegA/output_0.png",
        "https://replicate.delivery/pbxt/3dbPD8n9bqbDLBZ6PwLbB23NFnmSLV3vhe6XLWpGEcvUODPIA/output_1.png"
      ],
      "started_at": "2023-02-13T22:09:26.010206Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/yz7xq2yxgzgp3d3d7pgxkmcad4",
        "cancel": "https://api.replicate.com/v1/predictions/yz7xq2yxgzgp3d3d7pgxkmcad4/cancel"
      },
      "version": "435061a1b5a4c1e26740464bf786efdfa9cb3a3ac488595a2de23e143fdb0117",
      "webhook": null
    },
    "description": "Generate detailed images from scribbled drawings",
    "github_url": "https://github.com/replicate/controlnet",
    "latest_version": {
      "id": "435061a1b5a4c1e26740464bf786efdfa9cb3a3ac488595a2de23e143fdb0117",
      "created_at": "2023-02-13T22:05:24.558955Z",
      "cog_version": "0.6.1",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "required": [
                "image",
                "prompt"
              ],
              "properties": {
                "eta": {
                  "type": "number",
                  "title": "Eta",
                  "default": 0,
                  "x-order": 7,
                  "description": "eta (DDIM)"
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 6,
                  "description": "Seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 0,
                  "description": "Input image"
                },
                "scale": {
                  "type": "number",
                  "title": "Scale",
                  "default": 9,
                  "maximum": 30,
                  "minimum": 0.1,
                  "x-order": 5,
                  "description": "Guidance Scale"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "x-order": 1,
                  "description": "Prompt for the model"
                },
                "a_prompt": {
                  "type": "string",
                  "title": "A Prompt",
                  "default": "best quality, extremely detailed",
                  "x-order": 8,
                  "description": "Added Prompt"
                },
                "n_prompt": {
                  "type": "string",
                  "title": "N Prompt",
                  "default": "longbody, lowres, bad anatomy, bad hands, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality",
                  "x-order": 9,
                  "description": "Negative Prompt"
                },
                "ddim_steps": {
                  "type": "integer",
                  "title": "Ddim Steps",
                  "default": 20,
                  "x-order": 4,
                  "description": "Steps"
                },
                "num_samples": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/num_samples"
                    }
                  ],
                  "default": "1",
                  "x-order": 2,
                  "description": "Number of samples (higher values may OOM)"
                },
                "image_resolution": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/image_resolution"
                    }
                  ],
                  "default": "512",
                  "x-order": 3,
                  "description": "Image resolution to be generated"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "num_samples": {
              "enum": [
                "1",
                "4"
              ],
              "type": "string",
              "title": "num_samples",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "image_resolution": {
              "enum": [
                "256",
                "512",
                "768"
              ],
              "type": "string",
              "title": "image_resolution",
              "description": "An enumeration."
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "completed",
                    "logs",
                    "start",
                    "output"
                  ],
                  "uniqueItems": true
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs"
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://github.com/replicate/controlnet/blob/main/LICENSE",
    "name": "controlnet-scribble",
    "owner": "jagilley",
    "paper_url": null,
    "run_count": 38139717,
    "url": "https://replicate.com/jagilley/controlnet-scribble",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/xs0pPOUM6HKmPlJJBXqKfE1YsiMzgNsCuGedlX0VqvPYifLgA/out-0.png",
    "created_at": "2022-12-02T17:40:01.152489Z",
    "default_example": {
      "completed_at": "2022-12-02T18:40:24.805380Z",
      "created_at": "2022-12-02T18:40:22.058556Z",
      "data_removed": false,
      "error": null,
      "id": "xkyxrm6j3jb3llitusuf4hycoa",
      "input": {
        "mask": "https://replicate.delivery/pbxt/HtGQBqO9MtVbPm0G0K43nsvvjBB0E0PaWOhuNRrRBBT4ttbf/mask.png",
        "image": "https://replicate.delivery/pbxt/HtGQBfA5TrqFYZBf0UL18NTqHrzt8UiSIsAkUuMHtjvFDO6p/overture-creations-5sI6fQgYIuo.png",
        "prompt": "Face of a yellow cat, high resolution, sitting on a park bench",
        "num_outputs": 1,
        "guidance_scale": 7.5,
        "prompt_strength": 0.8,
        "num_inference_steps": 25
      },
      "logs": "Using seed: 62372\n  0%|          | 0/26 [00:00<?, ?it/s]\n  8%|▊         | 2/26 [00:00<00:01, 14.22it/s]\n 15%|█▌        | 4/26 [00:00<00:01, 15.62it/s]\n 23%|██▎       | 6/26 [00:00<00:01, 15.98it/s]\n 31%|███       | 8/26 [00:00<00:01, 16.07it/s]\n 38%|███▊      | 10/26 [00:00<00:00, 16.14it/s]\n 46%|████▌     | 12/26 [00:00<00:00, 16.29it/s]\n 54%|█████▍    | 14/26 [00:00<00:00, 16.39it/s]\n 62%|██████▏   | 16/26 [00:00<00:00, 16.40it/s]\n 69%|██████▉   | 18/26 [00:01<00:00, 16.42it/s]\n 77%|███████▋  | 20/26 [00:01<00:00, 16.49it/s]\n 85%|████████▍ | 22/26 [00:01<00:00, 16.31it/s]\n 92%|█████████▏| 24/26 [00:01<00:00, 16.37it/s]\n100%|██████████| 26/26 [00:01<00:00, 16.47it/s]\n100%|██████████| 26/26 [00:01<00:00, 16.26it/s]",
      "metrics": {
        "predict_time": 2.711119,
        "total_time": 2.746824
      },
      "model": "stability-ai/stable-diffusion-inpainting",
      "output": [
        "https://replicate.delivery/pbxt/xs0pPOUM6HKmPlJJBXqKfE1YsiMzgNsCuGedlX0VqvPYifLgA/out-0.png"
      ],
      "started_at": "2022-12-02T18:40:22.094261Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/xkyxrm6j3jb3llitusuf4hycoa",
        "cancel": "https://api.replicate.com/v1/predictions/xkyxrm6j3jb3llitusuf4hycoa/cancel"
      },
      "version": "e5a34f913de0adc560d20e002c45ad43a80031b62caacc3d84010c6b6a64870c",
      "webhook": null
    },
    "description": "Fill in masked parts of images with Stable Diffusion",
    "github_url": "https://github.com/replicate/cog-stable-diffusion-inpainting",
    "latest_version": {
      "id": "95b7223104132402a9ae91cc677285bc5eb997834bd2349fa486f53910fd68b3",
      "created_at": "2024-02-14T16:55:15.877089Z",
      "cog_version": "0.9.4",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "required": [
                "image",
                "mask"
              ],
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 2,
                  "description": "Black and white image to use as mask for inpainting over the image provided. White pixels are inpainted and black pixels are preserved."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 10,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 1,
                  "description": "Initial image to generate variations of. Will be resized to height x width"
                },
                "width": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/width"
                    }
                  ],
                  "default": 512,
                  "x-order": 4,
                  "description": "Width of generated image in pixels. Needs to be a multiple of 64"
                },
                "height": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/height"
                    }
                  ],
                  "default": 512,
                  "x-order": 3,
                  "description": "Height of generated image in pixels. Needs to be a multiple of 64"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "a vision of paradise. unreal engine",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "DPMSolverMultistep",
                  "x-order": 9,
                  "description": "Choose a scheduler."
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of images to generate."
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 7.5,
                  "maximum": 20,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Scale for classifier-free guidance"
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "x-order": 5,
                  "description": "Specify things to not see in the output"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 50,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 7,
                  "description": "Number of denoising steps"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 11,
                  "description": "Disable safety checker for generated images. This feature is only available through the API. See [https://replicate.com/docs/how-does-replicate-work#safety](https://replicate.com/docs/how-does-replicate-work#safety)"
                }
              }
            },
            "width": {
              "enum": [
                64,
                128,
                192,
                256,
                320,
                384,
                448,
                512,
                576,
                640,
                704,
                768,
                832,
                896,
                960,
                1024
              ],
              "type": "integer",
              "title": "width",
              "description": "An enumeration."
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "height": {
              "enum": [
                64,
                128,
                192,
                256,
                320,
                384,
                448,
                512,
                576,
                640,
                704,
                768,
                832,
                896,
                960,
                1024
              ],
              "type": "integer",
              "title": "height",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "K_EULER",
                "DPMSolverMultistep",
                "K_EULER_ANCESTRAL",
                "PNDM",
                "KLMS"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/stabilityai/stable-diffusion-2/blob/main/LICENSE-MODEL",
    "name": "stable-diffusion-inpainting",
    "owner": "stability-ai",
    "paper_url": null,
    "run_count": 18716326,
    "url": "https://replicate.com/stability-ai/stable-diffusion-inpainting",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/618e68d3-fba3-4fd0-a060-cdd46b2ab7cf/out-0_2.jpg",
    "created_at": "2023-07-12T21:53:29.439515Z",
    "default_example": {
      "completed_at": "2023-07-12T22:23:00.041096Z",
      "created_at": "2023-07-12T22:22:51.044455Z",
      "data_removed": false,
      "error": null,
      "id": "3tsx2ijbtsa47m4mwbifyiglxm",
      "input": {
        "width": 1024,
        "height": 1024,
        "prompt": "A moss covered astronaut with a black background",
        "num_outputs": 1,
        "num_inference_steps": 75
      },
      "logs": "Using seed: 4697\n  0%|          | 0/25 [00:00<?, ?it/s]\n 20%|██        | 5/25 [00:00<00:00, 40.13it/s]\n 40%|████      | 10/25 [00:00<00:00, 40.19it/s]\n 60%|██████    | 15/25 [00:00<00:00, 40.05it/s]\n 80%|████████  | 20/25 [00:00<00:00, 39.66it/s]\n100%|██████████| 25/25 [00:00<00:00, 39.93it/s]\n100%|██████████| 25/25 [00:00<00:00, 39.90it/s]\nThe following part of your input was truncated because CLIP can only handle sequences up to 77 tokens: ['gross proportions, malformed limbs, missing arms, missing legs, extra arms, extra legs, fused fingers, too many fingers, long neck, username, watermark, signature']\n  0%|          | 0/25 [00:00<?, ?it/s]\n 16%|█▌        | 4/25 [00:00<00:00, 37.91it/s]\n 36%|███▌      | 9/25 [00:00<00:00, 39.60it/s]\n 56%|█████▌    | 14/25 [00:00<00:00, 39.87it/s]\n 76%|███████▌  | 19/25 [00:00<00:00, 40.26it/s]\n 96%|█████████▌| 24/25 [00:00<00:00, 40.42it/s]\n100%|██████████| 25/25 [00:00<00:00, 40.12it/s]\n  0%|          | 0/75 [00:00<?, ?it/s]\n  1%|▏         | 1/75 [00:00<00:14,  5.06it/s]\n  4%|▍         | 3/75 [00:00<00:08,  8.75it/s]\n  7%|▋         | 5/75 [00:00<00:06, 10.26it/s]\n  9%|▉         | 7/75 [00:00<00:06, 11.00it/s]\n 12%|█▏        | 9/75 [00:00<00:05, 11.45it/s]\n 15%|█▍        | 11/75 [00:01<00:05, 11.72it/s]\n 17%|█▋        | 13/75 [00:01<00:05, 11.89it/s]\n 20%|██        | 15/75 [00:01<00:04, 12.01it/s]\n 23%|██▎       | 17/75 [00:01<00:04, 12.09it/s]\n 25%|██▌       | 19/75 [00:01<00:04, 12.12it/s]\n 28%|██▊       | 21/75 [00:01<00:04, 12.16it/s]\n 31%|███       | 23/75 [00:02<00:04, 12.19it/s]\n 33%|███▎      | 25/75 [00:02<00:04, 12.21it/s]\n 36%|███▌      | 27/75 [00:02<00:03, 12.20it/s]\n 39%|███▊      | 29/75 [00:02<00:03, 12.21it/s]\n 41%|████▏     | 31/75 [00:02<00:03, 12.12it/s]\n 44%|████▍     | 33/75 [00:02<00:03, 12.11it/s]\n 47%|████▋     | 35/75 [00:02<00:03, 12.04it/s]\n 49%|████▉     | 37/75 [00:03<00:03, 11.90it/s]\n 52%|█████▏    | 39/75 [00:03<00:03, 11.98it/s]\n 55%|█████▍    | 41/75 [00:03<00:02, 12.04it/s]\n 57%|█████▋    | 43/75 [00:03<00:02, 12.08it/s]\n 60%|██████    | 45/75 [00:03<00:02, 12.12it/s]\n 63%|██████▎   | 47/75 [00:03<00:02, 12.09it/s]\n 65%|██████▌   | 49/75 [00:04<00:02, 12.06it/s]\n 68%|██████▊   | 51/75 [00:04<00:01, 12.10it/s]\n 71%|███████   | 53/75 [00:04<00:01, 12.14it/s]\n 73%|███████▎  | 55/75 [00:04<00:01, 12.14it/s]\n 76%|███████▌  | 57/75 [00:04<00:01, 12.16it/s]\n 79%|███████▊  | 59/75 [00:04<00:01, 12.18it/s]\n 81%|████████▏ | 61/75 [00:05<00:01, 12.11it/s]\n 84%|████████▍ | 63/75 [00:05<00:00, 12.15it/s]\n 87%|████████▋ | 65/75 [00:05<00:00, 12.14it/s]\n 89%|████████▉ | 67/75 [00:05<00:00, 12.14it/s]\n 92%|█████████▏| 69/75 [00:05<00:00, 12.16it/s]\n 95%|█████████▍| 71/75 [00:05<00:00, 12.19it/s]\n 97%|█████████▋| 73/75 [00:06<00:00, 12.17it/s]\n100%|██████████| 75/75 [00:06<00:00, 12.18it/s]\n100%|██████████| 75/75 [00:06<00:00, 11.92it/s]",
      "metrics": {
        "predict_time": 9.029294,
        "total_time": 8.996641
      },
      "model": "ai-forever/kandinsky-2.2",
      "output": [
        "https://replicate.delivery/pbxt/Lca3IEjcKoJBBVS6ajROkK37sDzPsmjYxIcFzxPZp65wZzTE/out-0.png"
      ],
      "started_at": "2023-07-12T22:22:51.011802Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/3tsx2ijbtsa47m4mwbifyiglxm",
        "cancel": "https://api.replicate.com/v1/predictions/3tsx2ijbtsa47m4mwbifyiglxm/cancel"
      },
      "version": "424befb1eae6af8363edb846ae98a11111a39740988baebd279d73fe3ecc92c2",
      "webhook": null
    },
    "description": "multilingual text2image latent diffusion model",
    "github_url": "https://github.com/chenxwh/Kandinsky-2/tree/v2.2",
    "latest_version": {
      "id": "ad9d7879fbffa2874e1d909d1d37d9bc682889cc65b31f7bb00d2362619f194a",
      "created_at": "2024-04-10T14:54:34.535852Z",
      "cog_version": "0.9.4",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 7,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "width": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/width"
                    }
                  ],
                  "default": 512,
                  "x-order": 2,
                  "description": "Width of output image. Lower the setting if hits memory limits."
                },
                "height": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/height"
                    }
                  ],
                  "default": 512,
                  "x-order": 3,
                  "description": "Height of output image. Lower the setting if hits memory limits."
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "A moss covered astronaut with a black background",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of images to output."
                },
                "output_format": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/output_format"
                    }
                  ],
                  "default": "webp",
                  "x-order": 8,
                  "description": "Output image format"
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "x-order": 1,
                  "description": "Specify things to not see in the output"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 75,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 4,
                  "description": "Number of denoising steps"
                },
                "num_inference_steps_prior": {
                  "type": "integer",
                  "title": "Num Inference Steps Prior",
                  "default": 25,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 5,
                  "description": "Number of denoising steps for priors"
                }
              }
            },
            "width": {
              "enum": [
                384,
                512,
                576,
                640,
                704,
                768,
                960,
                1024,
                1152,
                1280,
                1536,
                1792,
                2048
              ],
              "type": "integer",
              "title": "width",
              "description": "An enumeration."
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "height": {
              "enum": [
                384,
                512,
                576,
                640,
                704,
                768,
                960,
                1024,
                1152,
                1280,
                1536,
                1792,
                2048
              ],
              "type": "integer",
              "title": "height",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "output_format": {
              "enum": [
                "webp",
                "jpeg",
                "png"
              ],
              "type": "string",
              "title": "output_format",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://github.com/ai-forever/Kandinsky-2/blob/main/license",
    "name": "kandinsky-2.2",
    "owner": "ai-forever",
    "paper_url": null,
    "run_count": 10008934,
    "url": "https://replicate.com/ai-forever/kandinsky-2.2",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/1nrcrEszpsb0Kpv0qNBJrtQjoefjHJ3xSh3whVOJcklSFxPSA/out-0.png",
    "created_at": "2024-01-24T17:45:49.361192Z",
    "default_example": {
      "completed_at": "2024-01-24T19:04:51.055695Z",
      "created_at": "2024-01-24T19:04:45.609539Z",
      "data_removed": false,
      "error": null,
      "id": "ba4g7ptbfappfgry54h4pozt7m",
      "input": {
        "width": 1024,
        "height": 1024,
        "prompt": "cinematic film still of Kodak Motion Picture Film: (Sharp Detailed Image) An Oscar winning movie for Best Cinematography a woman in a kimono standing on a subway train in Japan Kodak Motion Picture Film Style, shallow depth of field, vignette, highly detailed, high budget, bokeh, cinemascope, moody, epic, gorgeous, film grain, grainy",
        "scheduler": "KarrasDPM",
        "num_outputs": 1,
        "guidance_scale": 7.5,
        "apply_watermark": true,
        "prompt_strength": 0.8,
        "num_inference_steps": 20
      },
      "logs": "Using seed: 2304021969\nPrompt: cinematic film still of Kodak Motion Picture Film: (Sharp Detailed Image) An Oscar winning movie for Best Cinematography a woman in a kimono standing on a subway train in Japan Kodak Motion Picture Film Style, shallow depth of field, vignette, highly detailed, high budget, bokeh, cinemascope, moody, epic, gorgeous, film grain, grainy\ntxt2img mode\n  0%|          | 0/20 [00:00<?, ?it/s]\n  5%|▌         | 1/20 [00:00<00:03,  5.04it/s]\n 15%|█▌        | 3/20 [00:00<00:02,  6.22it/s]\n 20%|██        | 4/20 [00:00<00:02,  5.74it/s]\n 25%|██▌       | 5/20 [00:00<00:02,  5.47it/s]\n 30%|███       | 6/20 [00:01<00:02,  5.31it/s]\n 35%|███▌      | 7/20 [00:01<00:02,  5.21it/s]\n 40%|████      | 8/20 [00:01<00:02,  5.14it/s]\n 45%|████▌     | 9/20 [00:01<00:02,  5.09it/s]\n 50%|█████     | 10/20 [00:01<00:01,  5.06it/s]\n 55%|█████▌    | 11/20 [00:02<00:01,  5.03it/s]\n 60%|██████    | 12/20 [00:02<00:01,  5.02it/s]\n 65%|██████▌   | 13/20 [00:02<00:01,  5.00it/s]\n 70%|███████   | 14/20 [00:02<00:01,  5.00it/s]\n 75%|███████▌  | 15/20 [00:02<00:01,  4.99it/s]\n 80%|████████  | 16/20 [00:03<00:00,  4.99it/s]\n 85%|████████▌ | 17/20 [00:03<00:00,  4.98it/s]\n 90%|█████████ | 18/20 [00:03<00:00,  4.98it/s]\n 95%|█████████▌| 19/20 [00:03<00:00,  4.98it/s]\n100%|██████████| 20/20 [00:03<00:00,  4.97it/s]\n100%|██████████| 20/20 [00:03<00:00,  5.12it/s]",
      "metrics": {
        "predict_time": 5.437921,
        "total_time": 5.446156
      },
      "model": "datacte/proteus-v0.2",
      "output": [
        "https://replicate.delivery/pbxt/1nrcrEszpsb0Kpv0qNBJrtQjoefjHJ3xSh3whVOJcklSFxPSA/out-0.png"
      ],
      "started_at": "2024-01-24T19:04:45.617774Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/ba4g7ptbfappfgry54h4pozt7m",
        "cancel": "https://api.replicate.com/v1/predictions/ba4g7ptbfappfgry54h4pozt7m/cancel"
      },
      "version": "06775cd262843edbde5abab958abdbb65a0a6b58ca301c9fd78fa55c775fc019",
      "webhook": null
    },
    "description": "Proteus v0.2 shows subtle yet significant improvements over Version 0.1. It demonstrates enhanced prompt understanding that surpasses MJ6, while also approaching its stylistic capabilities.",
    "github_url": "https://github.com/lucataco/cog-proteus-v0.2",
    "latest_version": {
      "id": "06775cd262843edbde5abab958abdbb65a0a6b58ca301c9fd78fa55c775fc019",
      "created_at": "2024-01-24T18:54:44.986691Z",
      "cog_version": "0.9.3",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 11,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 2,
                  "description": "Input image for img2img or inpaint mode"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 1024,
                  "x-order": 4,
                  "description": "Width of output image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 1024,
                  "x-order": 5,
                  "description": "Height of output image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "black fluffy gorgeous dangerous cat animal creature, large orange eyes, big fluffy ears, piercing gaze, full moon, dark ambiance, best quality, extremely detailed",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "KarrasDPM",
                  "x-order": 7,
                  "description": "scheduler"
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of images to output."
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 7.5,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 9,
                  "description": "Scale for classifier-free guidance. Recommended 7-8"
                },
                "apply_watermark": {
                  "type": "boolean",
                  "title": "Apply Watermark",
                  "default": true,
                  "x-order": 12,
                  "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "worst quality, low quality",
                  "x-order": 1,
                  "description": "Negative Input prompt"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 10,
                  "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 20,
                  "maximum": 100,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Number of denoising steps. 20 to 35 steps for more detail, 20 steps for faster results."
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 13,
                  "description": "Disable safety checker for generated images. This feature is only available through the API. See https://replicate.com/docs/how-does-replicate-work#safety"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/datasets/choosealicense/licenses/blob/main/markdown/gpl-3.0.md",
    "name": "proteus-v0.2",
    "owner": "datacte",
    "paper_url": null,
    "run_count": 8323926,
    "url": "https://replicate.com/datacte/proteus-v0.2",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/8629c6ba-b94c-4cbd-93aa-bda2b8ebecd9/F5Mg2KeXgAAkfre.jpg",
    "created_at": "2023-09-04T09:18:11.028708Z",
    "default_example": {
      "completed_at": "2023-09-04T09:35:43.334363Z",
      "created_at": "2023-09-04T09:35:28.157906Z",
      "data_removed": false,
      "error": null,
      "id": "25w6pkdbzqbfnvj35qzkyljmce",
      "input": {
        "width": 1024,
        "height": 1024,
        "prompt": "A TOK emoji of a man",
        "refine": "no_refiner",
        "scheduler": "K_EULER",
        "lora_scale": 0.6,
        "num_outputs": 1,
        "guidance_scale": 7.5,
        "apply_watermark": false,
        "high_noise_frac": 0.8,
        "negative_prompt": "",
        "prompt_strength": 0.8,
        "num_inference_steps": 50
      },
      "logs": "Using seed: 57727\nPrompt: A <s0><s1> emoji of a man\ntxt2img mode\n  0%|          | 0/50 [00:00<?, ?it/s]\n  2%|▏         | 1/50 [00:00<00:13,  3.69it/s]\n  4%|▍         | 2/50 [00:00<00:13,  3.67it/s]\n  6%|▌         | 3/50 [00:00<00:12,  3.67it/s]\n  8%|▊         | 4/50 [00:01<00:12,  3.66it/s]\n 10%|█         | 5/50 [00:01<00:12,  3.66it/s]\n 12%|█▏        | 6/50 [00:01<00:12,  3.66it/s]\n 14%|█▍        | 7/50 [00:01<00:11,  3.66it/s]\n 16%|█▌        | 8/50 [00:02<00:11,  3.66it/s]\n 18%|█▊        | 9/50 [00:02<00:11,  3.66it/s]\n 20%|██        | 10/50 [00:02<00:10,  3.67it/s]\n 22%|██▏       | 11/50 [00:03<00:10,  3.67it/s]\n 24%|██▍       | 12/50 [00:03<00:10,  3.67it/s]\n 26%|██▌       | 13/50 [00:03<00:10,  3.67it/s]\n 28%|██▊       | 14/50 [00:03<00:09,  3.68it/s]\n 30%|███       | 15/50 [00:04<00:09,  3.68it/s]\n 32%|███▏      | 16/50 [00:04<00:09,  3.67it/s]\n 34%|███▍      | 17/50 [00:04<00:08,  3.67it/s]\n 36%|███▌      | 18/50 [00:04<00:08,  3.67it/s]\n 38%|███▊      | 19/50 [00:05<00:08,  3.67it/s]\n 40%|████      | 20/50 [00:05<00:08,  3.67it/s]\n 42%|████▏     | 21/50 [00:05<00:07,  3.67it/s]\n 44%|████▍     | 22/50 [00:05<00:07,  3.67it/s]\n 46%|████▌     | 23/50 [00:06<00:07,  3.67it/s]\n 48%|████▊     | 24/50 [00:06<00:07,  3.67it/s]\n 50%|█████     | 25/50 [00:06<00:06,  3.67it/s]\n 52%|█████▏    | 26/50 [00:07<00:06,  3.67it/s]\n 54%|█████▍    | 27/50 [00:07<00:06,  3.67it/s]\n 56%|█████▌    | 28/50 [00:07<00:05,  3.67it/s]\n 58%|█████▊    | 29/50 [00:07<00:05,  3.67it/s]\n 60%|██████    | 30/50 [00:08<00:05,  3.67it/s]\n 62%|██████▏   | 31/50 [00:08<00:05,  3.67it/s]\n 64%|██████▍   | 32/50 [00:08<00:04,  3.67it/s]\n 66%|██████▌   | 33/50 [00:08<00:04,  3.67it/s]\n 68%|██████▊   | 34/50 [00:09<00:04,  3.67it/s]\n 70%|███████   | 35/50 [00:09<00:04,  3.66it/s]\n 72%|███████▏  | 36/50 [00:09<00:03,  3.67it/s]\n 74%|███████▍  | 37/50 [00:10<00:03,  3.67it/s]\n 76%|███████▌  | 38/50 [00:10<00:03,  3.67it/s]\n 78%|███████▊  | 39/50 [00:10<00:03,  3.67it/s]\n 80%|████████  | 40/50 [00:10<00:02,  3.67it/s]\n 82%|████████▏ | 41/50 [00:11<00:02,  3.66it/s]\n 84%|████████▍ | 42/50 [00:11<00:02,  3.66it/s]\n 86%|████████▌ | 43/50 [00:11<00:01,  3.66it/s]\n 88%|████████▊ | 44/50 [00:11<00:01,  3.67it/s]\n 90%|█████████ | 45/50 [00:12<00:01,  3.66it/s]\n 92%|█████████▏| 46/50 [00:12<00:01,  3.66it/s]\n 94%|█████████▍| 47/50 [00:12<00:00,  3.67it/s]\n 96%|█████████▌| 48/50 [00:13<00:00,  3.66it/s]\n 98%|█████████▊| 49/50 [00:13<00:00,  3.64it/s]\n100%|██████████| 50/50 [00:13<00:00,  3.62it/s]\n100%|██████████| 50/50 [00:13<00:00,  3.66it/s]",
      "metrics": {
        "predict_time": 15.177713,
        "total_time": 15.176457
      },
      "model": "fofr/sdxl-emoji",
      "output": [
        "https://replicate.delivery/pbxt/a3z81v5vwlKfLq1H5uBqpVmkHalOVup0jSLma9E2UaF3tawIA/out-0.png"
      ],
      "started_at": "2023-09-04T09:35:28.156650Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/25w6pkdbzqbfnvj35qzkyljmce",
        "cancel": "https://api.replicate.com/v1/predictions/25w6pkdbzqbfnvj35qzkyljmce/cancel"
      },
      "version": "e6484351b3c943cbd507d938df8abc598cb05c44f4e67ee82be0beea5f495f31",
      "webhook": null
    },
    "description": "An SDXL fine-tune based on Apple Emojis",
    "github_url": null,
    "latest_version": {
      "id": "dee76b5afde21b0f01ed7925f0665b7e879c50ee718c5f78a9d38e04d523cc5e",
      "created_at": "2023-09-08T21:43:57.473271Z",
      "cog_version": "v0.8.1+dev",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 11,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 2,
                  "description": "Input image for img2img or inpaint mode"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 1024,
                  "x-order": 4,
                  "description": "Width of output image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 1024,
                  "x-order": 5,
                  "description": "Height of output image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "An astronaut riding a rainbow unicorn",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "refine": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/refine"
                    }
                  ],
                  "default": "no_refiner",
                  "x-order": 12,
                  "description": "Which refine style to use"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "K_EULER",
                  "x-order": 7,
                  "description": "scheduler"
                },
                "lora_scale": {
                  "type": "number",
                  "title": "Lora Scale",
                  "default": 0.6,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 16,
                  "description": "LoRA additive scale. Only applicable on trained models."
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of images to output."
                },
                "refine_steps": {
                  "type": "integer",
                  "title": "Refine Steps",
                  "x-order": 14,
                  "description": "For base_image_refiner, the number of steps to refine, defaults to num_inference_steps"
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 7.5,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 9,
                  "description": "Scale for classifier-free guidance"
                },
                "apply_watermark": {
                  "type": "boolean",
                  "title": "Apply Watermark",
                  "default": true,
                  "x-order": 15,
                  "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
                },
                "high_noise_frac": {
                  "type": "number",
                  "title": "High Noise Frac",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 13,
                  "description": "For expert_ensemble_refiner, the fraction of noise to use"
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "",
                  "x-order": 1,
                  "description": "Input Negative Prompt"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 10,
                  "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image"
                },
                "replicate_weights": {
                  "type": "string",
                  "title": "Replicate Weights",
                  "x-order": 17,
                  "description": "Replicate LoRA weights to use. Leave blank to use the default weights."
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 50,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Number of denoising steps"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 18,
                  "description": "Disable safety checker for generated images. This feature is only available through the API. See https://replicate.com/docs/how-does-replicate-work#safety"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "refine": {
              "enum": [
                "no_refiner",
                "expert_ensemble_refiner",
                "base_image_refiner"
              ],
              "type": "string",
              "title": "refine",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": null,
    "name": "sdxl-emoji",
    "owner": "fofr",
    "paper_url": null,
    "run_count": 7624526,
    "url": "https://replicate.com/fofr/sdxl-emoji",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/a36275e2-34d4-4b3d-83cd-f9aaf73c9386/https___replicate.delive_o40qpZl.webp",
    "created_at": "2024-08-01T09:32:10.863297Z",
    "default_example": {
      "completed_at": "2024-08-01T14:39:09.456014Z",
      "created_at": "2024-08-01T14:38:55.354000Z",
      "data_removed": false,
      "error": null,
      "id": "kg1krwsdf9rg80ch1sgsrgq7h8",
      "input": {
        "steps": 25,
        "width": 1024,
        "height": 1024,
        "prompt": "The world's largest black forest cake, the size of a building, surrounded by trees of the black forest",
        "guidance": 3,
        "interval": 2,
        "safety_tolerance": 2
      },
      "logs": null,
      "metrics": {
        "image_count": 1,
        "predict_time": 14.093671466,
        "total_time": 14.102014
      },
      "model": "black-forest-labs/flux-pro",
      "output": "https://bflapistorage.blob.core.windows.net/public/c8145aa6e5894cbd815d6ce708fea9f2/sample.jpg",
      "started_at": "2024-08-01T14:38:55.362343Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/kg1krwsdf9rg80ch1sgsrgq7h8",
        "cancel": "https://api.replicate.com/v1/predictions/kg1krwsdf9rg80ch1sgsrgq7h8/cancel"
      },
      "version": "7722fec61a47408ca7445651e87bdb9b875e4c11d4f2f07c79ad5c2c8554d165",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/official-model-prediction"
    },
    "description": "State-of-the-art image generation with top of the line prompt following, visual quality, image detail and output diversity.",
    "github_url": null,
    "latest_version": {
      "id": "a57823497a8beebcd222c20dd78af15a90c0415c36a5bfc88ee763c67155310e",
      "created_at": "2024-11-25T15:31:46.512229Z",
      "cog_version": "0.10.0-alpha25",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/ready": {
            "get": {
              "summary": "Ready",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Ready Ready Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "ready_ready_get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "required": [
                "prompt"
              ],
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 10,
                  "description": "Random seed. Set for reproducible generation"
                },
                "steps": {
                  "type": "integer",
                  "title": "Steps",
                  "default": 25,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 5,
                  "description": "Number of diffusion steps"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "maximum": 1440,
                  "minimum": 256,
                  "x-order": 3,
                  "description": "Width of the generated image in text-to-image mode. Only used when aspect_ratio=custom. Must be a multiple of 32 (if it's not, it will be rounded to nearest multiple of 32). Note: Ignored in img2img and inpainting modes."
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "maximum": 1440,
                  "minimum": 256,
                  "x-order": 4,
                  "description": "Height of the generated image in text-to-image mode. Only used when aspect_ratio=custom. Must be a multiple of 32 (if it's not, it will be rounded to nearest multiple of 32). Note: Ignored in img2img and inpainting modes."
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "x-order": 0,
                  "description": "Text prompt for image generation"
                },
                "guidance": {
                  "type": "number",
                  "title": "Guidance",
                  "default": 3,
                  "maximum": 5,
                  "minimum": 2,
                  "x-order": 6,
                  "description": "Controls the balance between adherence to the text prompt and image quality/diversity. Higher values make the output more closely match the prompt but may reduce overall image quality. Lower values allow for more creative freedom but might produce results less relevant to the prompt."
                },
                "interval": {
                  "type": "number",
                  "title": "Interval",
                  "default": 2,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 7,
                  "description": "Interval is a setting that increases the variance in possible outputs letting the model be a tad more dynamic in what outputs it may produce in terms of composition, color, detail, and prompt interpretation. Setting this value low will ensure strong prompt following with more consistent outputs, setting it higher will produce more dynamic or varied outputs."
                },
                "aspect_ratio": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/aspect_ratio"
                    }
                  ],
                  "default": "1:1",
                  "x-order": 2,
                  "description": "Aspect ratio for the generated image"
                },
                "image_prompt": {
                  "type": "string",
                  "title": "Image Prompt",
                  "format": "uri",
                  "x-order": 1,
                  "description": "Image to use with Flux Redux. This is used together with the text prompt to guide the generation towards the composition of the image_prompt. Must be jpeg, png, gif, or webp."
                },
                "output_format": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/output_format"
                    }
                  ],
                  "default": "webp",
                  "x-order": 11,
                  "description": "Format of the output images."
                },
                "output_quality": {
                  "type": "integer",
                  "title": "Output Quality",
                  "default": 80,
                  "maximum": 100,
                  "minimum": 0,
                  "x-order": 12,
                  "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs"
                },
                "safety_tolerance": {
                  "type": "integer",
                  "title": "Safety Tolerance",
                  "default": 2,
                  "maximum": 6,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Safety tolerance, 1 is most strict and 6 is most permissive"
                },
                "prompt_upsampling": {
                  "type": "boolean",
                  "title": "Prompt Upsampling",
                  "default": false,
                  "x-order": 9,
                  "description": "Automatically modify the prompt for more creative generation"
                }
              }
            },
            "Output": {
              "type": "string",
              "title": "Output",
              "format": "uri"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "aspect_ratio": {
              "enum": [
                "custom",
                "1:1",
                "16:9",
                "3:2",
                "2:3",
                "4:5",
                "5:4",
                "9:16",
                "3:4",
                "4:3"
              ],
              "type": "string",
              "title": "aspect_ratio",
              "description": "An enumeration."
            },
            "output_format": {
              "enum": [
                "webp",
                "jpg",
                "png"
              ],
              "type": "string",
              "title": "output_format",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://replicate.com/black-forest-labs/flux-pro#license",
    "name": "flux-pro",
    "owner": "black-forest-labs",
    "paper_url": null,
    "run_count": 7493265,
    "url": "https://replicate.com/black-forest-labs/flux-pro",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/bd872eff-363a-4e10-8cc1-84057afa9f57/flux-1.1-cover.webp",
    "created_at": "2024-10-01T17:40:24.295660Z",
    "default_example": {
      "completed_at": "2024-11-25T20:53:51.370600Z",
      "created_at": "2024-11-25T20:53:47.556000Z",
      "data_removed": false,
      "error": null,
      "id": "hxvjgf8hmhrge0ckcmdbr6k0km",
      "input": {
        "prompt": "black forest gateau cake spelling out the words \"FLUX 1 . 1 Pro\", tasty, food photography",
        "aspect_ratio": "1:1",
        "output_format": "webp",
        "output_quality": 80,
        "safety_tolerance": 2,
        "prompt_upsampling": true
      },
      "logs": "Running prediction... \nUsing seed: 47744\nGenerating image...\nGenerated image in 3.6sec\nDownloaded image in 0.15sec",
      "metrics": {
        "image_count": 1,
        "predict_time": 3.805898917,
        "total_time": 3.8146
      },
      "model": "black-forest-labs/flux-1.1-pro",
      "output": "https://replicate.delivery/czjl/XetPfMnnBtnyLUNiNcnl2Hneyeo8AsfsOl2AG5Znql5f3VK9E/tmpuv7lgrx7.jpg",
      "started_at": "2024-11-25T20:53:47.564701Z",
      "status": "succeeded",
      "urls": {
        "stream": "https://stream.replicate.com/v1/files/fddq-rdnmuouasiaorsbl2b5xarywbmuu4222kby6hmoz55vdnnbwtqbq",
        "get": "https://api.replicate.com/v1/predictions/hxvjgf8hmhrge0ckcmdbr6k0km",
        "cancel": "https://api.replicate.com/v1/predictions/hxvjgf8hmhrge0ckcmdbr6k0km/cancel"
      },
      "version": "74d4bcf33a064fad68f96aeb9365cc08a1b2926363186b86b37dc1cb3d8a5df4",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/official-model-prediction"
    },
    "description": "Faster, better FLUX Pro. Text-to-image model with excellent image quality, prompt adherence, and output diversity.",
    "github_url": null,
    "latest_version": {
      "id": "badb73d13c01c716f59b538fae81023a6c0a4f3aaedd00d477602c204c9e1232",
      "created_at": "2024-11-25T18:19:16.328690Z",
      "cog_version": "0.10.0-alpha25",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/ready": {
            "get": {
              "summary": "Ready",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Ready Ready Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "ready_ready_get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "required": [
                "prompt"
              ],
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 6,
                  "description": "Random seed. Set for reproducible generation"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "maximum": 1440,
                  "minimum": 256,
                  "x-order": 3,
                  "description": "Width of the generated image in text-to-image mode. Only used when aspect_ratio=custom. Must be a multiple of 32 (if it's not, it will be rounded to nearest multiple of 32). Note: Ignored in img2img and inpainting modes."
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "maximum": 1440,
                  "minimum": 256,
                  "x-order": 4,
                  "description": "Height of the generated image in text-to-image mode. Only used when aspect_ratio=custom. Must be a multiple of 32 (if it's not, it will be rounded to nearest multiple of 32). Note: Ignored in img2img and inpainting modes."
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "x-order": 0,
                  "description": "Text prompt for image generation"
                },
                "aspect_ratio": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/aspect_ratio"
                    }
                  ],
                  "default": "1:1",
                  "x-order": 2,
                  "description": "Aspect ratio for the generated image"
                },
                "image_prompt": {
                  "type": "string",
                  "title": "Image Prompt",
                  "format": "uri",
                  "x-order": 1,
                  "description": "Image to use with Flux Redux. This is used together with the text prompt to guide the generation towards the composition of the image_prompt. Must be jpeg, png, gif, or webp."
                },
                "output_format": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/output_format"
                    }
                  ],
                  "default": "webp",
                  "x-order": 8,
                  "description": "Format of the output images."
                },
                "output_quality": {
                  "type": "integer",
                  "title": "Output Quality",
                  "default": 80,
                  "maximum": 100,
                  "minimum": 0,
                  "x-order": 9,
                  "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs"
                },
                "safety_tolerance": {
                  "type": "integer",
                  "title": "Safety Tolerance",
                  "default": 2,
                  "maximum": 6,
                  "minimum": 1,
                  "x-order": 5,
                  "description": "Safety tolerance, 1 is most strict and 6 is most permissive"
                },
                "prompt_upsampling": {
                  "type": "boolean",
                  "title": "Prompt Upsampling",
                  "default": false,
                  "x-order": 7,
                  "description": "Automatically modify the prompt for more creative generation"
                }
              }
            },
            "Output": {
              "type": "string",
              "title": "Output",
              "format": "uri"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "aspect_ratio": {
              "enum": [
                "custom",
                "1:1",
                "16:9",
                "3:2",
                "2:3",
                "4:5",
                "5:4",
                "9:16",
                "3:4",
                "4:3"
              ],
              "type": "string",
              "title": "aspect_ratio",
              "description": "An enumeration."
            },
            "output_format": {
              "enum": [
                "webp",
                "jpg",
                "png"
              ],
              "type": "string",
              "title": "output_format",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://replicate.com/black-forest-labs/flux-pro#license",
    "name": "flux-1.1-pro",
    "owner": "black-forest-labs",
    "paper_url": null,
    "run_count": 6487486,
    "url": "https://replicate.com/black-forest-labs/flux-1.1-pro",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/e58cec51-6215-4d30-8c03-80f3ea0994d0/einstein.png",
    "created_at": "2023-04-05T14:05:16.533542Z",
    "default_example": {
      "completed_at": "2023-04-05T14:18:17.379573Z",
      "created_at": "2023-04-05T14:17:05.824020Z",
      "data_removed": false,
      "error": null,
      "id": "wixq75uo65glnjcdgrqtngdz4q",
      "input": {
        "prompt": "red cat, 4k photo",
        "scheduler": "p_sampler",
        "prior_steps": "5",
        "guidance_scale": 4,
        "prior_cf_scale": 4,
        "num_inference_steps": 100
      },
      "logs": "0%|          | 0/100 [00:00<?, ?it/s]\n  1%|          | 1/100 [00:00<01:21,  1.21it/s]\n  2%|▏         | 2/100 [00:01<01:08,  1.42it/s]\n  3%|▎         | 3/100 [00:02<01:04,  1.51it/s]\n  4%|▍         | 4/100 [00:02<01:02,  1.54it/s]\n  5%|▌         | 5/100 [00:03<01:00,  1.56it/s]\n  6%|▌         | 6/100 [00:03<01:00,  1.57it/s]\n  7%|▋         | 7/100 [00:04<00:59,  1.57it/s]\n  8%|▊         | 8/100 [00:05<00:58,  1.58it/s]\n  9%|▉         | 9/100 [00:05<00:57,  1.58it/s]\n 10%|█         | 10/100 [00:06<00:56,  1.58it/s]\n 11%|█         | 11/100 [00:07<00:56,  1.58it/s]\n 12%|█▏        | 12/100 [00:07<00:55,  1.58it/s]\n 13%|█▎        | 13/100 [00:08<00:54,  1.59it/s]\n 14%|█▍        | 14/100 [00:08<00:54,  1.58it/s]\n 15%|█▌        | 15/100 [00:09<00:53,  1.58it/s]\n 16%|█▌        | 16/100 [00:10<00:53,  1.58it/s]\n 17%|█▋        | 17/100 [00:10<00:52,  1.59it/s]\n 18%|█▊        | 18/100 [00:11<00:51,  1.59it/s]\n 19%|█▉        | 19/100 [00:12<00:51,  1.59it/s]\n 20%|██        | 20/100 [00:12<00:50,  1.58it/s]\n 21%|██        | 21/100 [00:13<00:50,  1.58it/s]\n 22%|██▏       | 22/100 [00:14<00:49,  1.58it/s]\n 23%|██▎       | 23/100 [00:14<00:48,  1.58it/s]\n 24%|██▍       | 24/100 [00:15<00:48,  1.58it/s]\n 25%|██▌       | 25/100 [00:15<00:47,  1.57it/s]\n 26%|██▌       | 26/100 [00:16<00:46,  1.58it/s]\n 27%|██▋       | 27/100 [00:17<00:46,  1.57it/s]\n 28%|██▊       | 28/100 [00:17<00:45,  1.58it/s]\n 29%|██▉       | 29/100 [00:18<00:45,  1.57it/s]\n 30%|███       | 30/100 [00:19<00:44,  1.57it/s]\n 31%|███       | 31/100 [00:19<00:44,  1.57it/s]\n 32%|███▏      | 32/100 [00:20<00:43,  1.57it/s]\n 33%|███▎      | 33/100 [00:21<00:42,  1.57it/s]\n 34%|███▍      | 34/100 [00:21<00:42,  1.57it/s]\n 35%|███▌      | 35/100 [00:22<00:41,  1.56it/s]\n 36%|███▌      | 36/100 [00:22<00:40,  1.56it/s]\n 37%|███▋      | 37/100 [00:23<00:40,  1.56it/s]\n 38%|███▊      | 38/100 [00:24<00:39,  1.56it/s]\n 39%|███▉      | 39/100 [00:24<00:39,  1.56it/s]\n 40%|████      | 40/100 [00:25<00:38,  1.56it/s]\n 41%|████      | 41/100 [00:26<00:37,  1.56it/s]\n 42%|████▏     | 42/100 [00:26<00:37,  1.55it/s]\n 43%|████▎     | 43/100 [00:27<00:36,  1.56it/s]\n 44%|████▍     | 44/100 [00:28<00:35,  1.56it/s]\n 45%|████▌     | 45/100 [00:28<00:35,  1.56it/s]\n 46%|████▌     | 46/100 [00:29<00:34,  1.56it/s]\n 47%|████▋     | 47/100 [00:30<00:33,  1.56it/s]\n 48%|████▊     | 48/100 [00:30<00:33,  1.56it/s]\n 49%|████▉     | 49/100 [00:31<00:32,  1.56it/s]\n 50%|█████     | 50/100 [00:31<00:32,  1.56it/s]\n 51%|█████     | 51/100 [00:32<00:31,  1.56it/s]\n 52%|█████▏    | 52/100 [00:33<00:30,  1.55it/s]\n 53%|█████▎    | 53/100 [00:33<00:30,  1.55it/s]\n 54%|█████▍    | 54/100 [00:34<00:29,  1.55it/s]\n 55%|█████▌    | 55/100 [00:35<00:28,  1.55it/s]\n 56%|█████▌    | 56/100 [00:35<00:28,  1.55it/s]\n 57%|█████▋    | 57/100 [00:36<00:27,  1.55it/s]\n 58%|█████▊    | 58/100 [00:37<00:27,  1.54it/s]\n 59%|█████▉    | 59/100 [00:37<00:26,  1.54it/s]\n 60%|██████    | 60/100 [00:38<00:25,  1.54it/s]\n 61%|██████    | 61/100 [00:39<00:25,  1.54it/s]\n 62%|██████▏   | 62/100 [00:39<00:24,  1.54it/s]\n 63%|██████▎   | 63/100 [00:40<00:24,  1.54it/s]\n 64%|██████▍   | 64/100 [00:41<00:23,  1.54it/s]\n 65%|██████▌   | 65/100 [00:41<00:22,  1.54it/s]\n 66%|██████▌   | 66/100 [00:42<00:22,  1.54it/s]\n 67%|██████▋   | 67/100 [00:42<00:21,  1.54it/s]\n 68%|██████▊   | 68/100 [00:43<00:20,  1.54it/s]\n 69%|██████▉   | 69/100 [00:44<00:20,  1.54it/s]\n 70%|███████   | 70/100 [00:44<00:19,  1.54it/s]\n 71%|███████   | 71/100 [00:45<00:18,  1.54it/s]\n 72%|███████▏  | 72/100 [00:46<00:18,  1.54it/s]\n 73%|███████▎  | 73/100 [00:46<00:17,  1.53it/s]\n 74%|███████▍  | 74/100 [00:47<00:16,  1.54it/s]\n 75%|███████▌  | 75/100 [00:48<00:16,  1.53it/s]\n 76%|███████▌  | 76/100 [00:48<00:15,  1.54it/s]\n 77%|███████▋  | 77/100 [00:49<00:14,  1.54it/s]\n 78%|███████▊  | 78/100 [00:50<00:14,  1.54it/s]\n 79%|███████▉  | 79/100 [00:50<00:13,  1.54it/s]\n 80%|████████  | 80/100 [00:51<00:13,  1.54it/s]\n 81%|████████  | 81/100 [00:52<00:12,  1.54it/s]\n 82%|████████▏ | 82/100 [00:52<00:11,  1.54it/s]\n 83%|████████▎ | 83/100 [00:53<00:11,  1.54it/s]\n 84%|████████▍ | 84/100 [00:54<00:10,  1.54it/s]\n 85%|████████▌ | 85/100 [00:54<00:09,  1.54it/s]\n 86%|████████▌ | 86/100 [00:55<00:09,  1.54it/s]\n 87%|████████▋ | 87/100 [00:55<00:08,  1.54it/s]\n 88%|████████▊ | 88/100 [00:56<00:07,  1.54it/s]\n 89%|████████▉ | 89/100 [00:57<00:07,  1.54it/s]\n 90%|█████████ | 90/100 [00:57<00:06,  1.54it/s]\n 91%|█████████ | 91/100 [00:58<00:05,  1.54it/s]\n 92%|█████████▏| 92/100 [00:59<00:05,  1.54it/s]\n 93%|█████████▎| 93/100 [00:59<00:04,  1.54it/s]\n 94%|█████████▍| 94/100 [01:00<00:03,  1.54it/s]\n 95%|█████████▌| 95/100 [01:01<00:03,  1.53it/s]\n 96%|█████████▌| 96/100 [01:01<00:02,  1.53it/s]\n 97%|█████████▋| 97/100 [01:02<00:01,  1.53it/s]\n 98%|█████████▊| 98/100 [01:03<00:01,  1.53it/s]\n 99%|█████████▉| 99/100 [01:03<00:00,  1.52it/s]\n100%|██████████| 100/100 [01:04<00:00,  1.52it/s]\n100%|██████████| 100/100 [01:04<00:00,  1.55it/s]",
      "metrics": {
        "predict_time": 71.261476,
        "total_time": 71.555553
      },
      "model": "ai-forever/kandinsky-2",
      "output": "https://replicate.delivery/pbxt/NsOpfQRos43e40IzSq4SY7NTtxGodmSWo1m74K17SVpoUzuQA/out.png",
      "started_at": "2023-04-05T14:17:06.118097Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/wixq75uo65glnjcdgrqtngdz4q",
        "cancel": "https://api.replicate.com/v1/predictions/wixq75uo65glnjcdgrqtngdz4q/cancel"
      },
      "version": "9c0bf7d5cf2ed934c5921faf61882657c03c4def9d9cb88330c15bd795edb098",
      "webhook": null
    },
    "description": "text2img model trained on LAION HighRes and fine-tuned on internal datasets",
    "github_url": "https://github.com/chenxwh/Kandinsky-2",
    "latest_version": {
      "id": "3c6374e7a9a17e01afe306a5218cc67de55b19ea536466d6ea2602cfecea40a9",
      "created_at": "2024-04-19T17:37:12.036077Z",
      "cog_version": "v0.9.5+dev",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 9,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "width": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/width"
                    }
                  ],
                  "default": 512,
                  "x-order": 6,
                  "description": "Choose width. Lower the setting if out of memory."
                },
                "height": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/height"
                    }
                  ],
                  "default": 512,
                  "x-order": 7,
                  "description": "Choose height. Lower the setting if out of memory."
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "red cat, 4k photo",
                  "x-order": 0,
                  "description": "Input Prompt"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "p_sampler",
                  "x-order": 3,
                  "description": "Choose a scheduler"
                },
                "batch_size": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/batch_size"
                    }
                  ],
                  "default": 1,
                  "x-order": 8,
                  "description": "Choose batch size. Lower the setting if out of memory."
                },
                "prior_steps": {
                  "type": "string",
                  "title": "Prior Steps",
                  "default": "5",
                  "x-order": 5
                },
                "output_format": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/output_format"
                    }
                  ],
                  "default": "webp",
                  "x-order": 10,
                  "description": "Format of the output images"
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 4,
                  "maximum": 20,
                  "minimum": 1,
                  "x-order": 2,
                  "description": "Scale for classifier-free guidance"
                },
                "output_quality": {
                  "type": "integer",
                  "title": "Output Quality",
                  "default": 80,
                  "maximum": 100,
                  "minimum": 0,
                  "x-order": 11,
                  "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality."
                },
                "prior_cf_scale": {
                  "type": "integer",
                  "title": "Prior Cf Scale",
                  "default": 4,
                  "x-order": 4
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 50,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 1,
                  "description": "Number of denoising steps"
                }
              }
            },
            "width": {
              "enum": [
                256,
                288,
                432,
                512,
                576,
                768,
                1024
              ],
              "type": "integer",
              "title": "width",
              "description": "An enumeration."
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "height": {
              "enum": [
                256,
                288,
                432,
                512,
                576,
                768,
                1024
              ],
              "type": "integer",
              "title": "height",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "ddim_sampler",
                "p_sampler",
                "plms_sampler"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "batch_size": {
              "enum": [
                1,
                2,
                3,
                4
              ],
              "type": "integer",
              "title": "batch_size",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "output_format": {
              "enum": [
                "webp",
                "jpg",
                "png"
              ],
              "type": "string",
              "title": "output_format",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://github.com/ai-forever/Kandinsky-2/blob/main/license",
    "name": "kandinsky-2",
    "owner": "ai-forever",
    "paper_url": null,
    "run_count": 6170688,
    "url": "https://replicate.com/ai-forever/kandinsky-2",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/cb4203e5-9ece-42e7-b326-98ff3fa35c3a/Replicate_Prediction_15.webp",
    "created_at": "2024-07-29T23:25:06.100855Z",
    "default_example": {
      "completed_at": "2024-09-19T18:29:22.496556Z",
      "created_at": "2024-09-19T18:29:19.288000Z",
      "data_removed": false,
      "error": null,
      "id": "jbwzpaxs71rm40cj1e5rqq33c0",
      "input": {
        "prompt": "black forest gateau cake spelling out the words \"FLUX DEV\", tasty, food photography, dynamic shot",
        "go_fast": true,
        "guidance": 3.5,
        "num_outputs": 1,
        "aspect_ratio": "1:1",
        "output_format": "webp",
        "output_quality": 80,
        "prompt_strength": 0.8,
        "num_inference_steps": 28
      },
      "logs": "running quantized prediction\ngenerating\nUsing seed: 9337\n  0%|          | 0/28 [00:00<?, ?it/s]\n  7%|▋         | 2/28 [00:00<00:01, 17.38it/s]\n 14%|█▍        | 4/28 [00:00<00:01, 12.53it/s]\n 21%|██▏       | 6/28 [00:00<00:01, 11.49it/s]\n 29%|██▊       | 8/28 [00:00<00:01, 11.06it/s]\n 36%|███▌      | 10/28 [00:00<00:01, 10.76it/s]\n 43%|████▎     | 12/28 [00:01<00:01, 10.50it/s]\n 50%|█████     | 14/28 [00:01<00:01, 10.46it/s]\n 57%|█████▋    | 16/28 [00:01<00:01, 10.46it/s]\n 64%|██████▍   | 18/28 [00:01<00:00, 10.44it/s]\n 71%|███████▏  | 20/28 [00:01<00:00, 10.40it/s]\n 79%|███████▊  | 22/28 [00:02<00:00, 10.26it/s]\n 86%|████████▌ | 24/28 [00:02<00:00, 10.29it/s]\n 93%|█████████▎| 26/28 [00:02<00:00, 10.34it/s]\n100%|██████████| 28/28 [00:02<00:00, 10.37it/s]\n100%|██████████| 28/28 [00:02<00:00, 10.65it/s]\nTotal safe images: 1 out of 1",
      "metrics": {
        "image_count": 1,
        "predict_time": 3.200260047,
        "total_time": 3.208556
      },
      "model": "black-forest-labs/flux-dev",
      "output": [
        "https://replicate.delivery/yhqm/xU3wLlAQcGpZLVQipTVxaZMaL4omk9n7d1suU0byMnngfQvJA/out-0.webp"
      ],
      "started_at": "2024-09-19T18:29:19.296296Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/jbwzpaxs71rm40cj1e5rqq33c0",
        "cancel": "https://api.replicate.com/v1/predictions/jbwzpaxs71rm40cj1e5rqq33c0/cancel"
      },
      "version": "2081ff3a5490ce6b6a2040d3d280a6beb2efbcf63851aabce421fbed8be6e9a2",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/official-model-prediction"
    },
    "description": "A 12 billion parameter rectified flow transformer capable of generating images from text descriptions",
    "github_url": "https://github.com/replicate/cog-flux",
    "latest_version": {
      "id": "0cce3d40843963ebc7b6d976778e977c8f3ae3d0980a37cb5204f8fa0289e3d2",
      "created_at": "2024-10-02T01:36:05.962718Z",
      "cog_version": "0.9.21",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "required": [
                "prompt"
              ],
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 7,
                  "description": "Random seed. Set for reproducible generation"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 2,
                  "description": "Input image for image to image mode. The aspect ratio of your output will match this image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "x-order": 0,
                  "description": "Prompt for generated image"
                },
                "go_fast": {
                  "type": "boolean",
                  "title": "Go Fast",
                  "default": true,
                  "x-order": 11,
                  "description": "Run faster predictions with model optimized for speed (currently fp8 quantized); disable to run in original bf16"
                },
                "guidance": {
                  "type": "number",
                  "title": "Guidance",
                  "default": 3,
                  "maximum": 10,
                  "minimum": 0,
                  "x-order": 6,
                  "description": "Guidance for generated image"
                },
                "megapixels": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/megapixels"
                    }
                  ],
                  "default": "1",
                  "x-order": 12,
                  "description": "Approximate number of megapixels for generated image"
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 4,
                  "description": "Number of outputs to generate"
                },
                "aspect_ratio": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/aspect_ratio"
                    }
                  ],
                  "default": "1:1",
                  "x-order": 1,
                  "description": "Aspect ratio for the generated image"
                },
                "output_format": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/output_format"
                    }
                  ],
                  "default": "webp",
                  "x-order": 8,
                  "description": "Format of the output images"
                },
                "output_quality": {
                  "type": "integer",
                  "title": "Output Quality",
                  "default": 80,
                  "maximum": 100,
                  "minimum": 0,
                  "x-order": 9,
                  "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 3,
                  "description": "Prompt strength when using img2img. 1.0 corresponds to full destruction of information in image"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 28,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 5,
                  "description": "Number of denoising steps. Recommended range is 28-50"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 10,
                  "description": "Disable safety checker for generated images."
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "megapixels": {
              "enum": [
                "1",
                "0.25"
              ],
              "type": "string",
              "title": "megapixels",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "aspect_ratio": {
              "enum": [
                "1:1",
                "16:9",
                "21:9",
                "3:2",
                "2:3",
                "4:5",
                "5:4",
                "3:4",
                "4:3",
                "9:16",
                "9:21"
              ],
              "type": "string",
              "title": "aspect_ratio",
              "description": "An enumeration."
            },
            "output_format": {
              "enum": [
                "webp",
                "jpg",
                "png"
              ],
              "type": "string",
              "title": "output_format",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://github.com/black-forest-labs/flux/blob/main/model_licenses/LICENSE-FLUX1-dev",
    "name": "flux-dev",
    "owner": "black-forest-labs",
    "paper_url": null,
    "run_count": 5869743,
    "url": "https://replicate.com/black-forest-labs/flux-dev",
    "visibility": "public",
    "weights_url": "https://huggingface.co/black-forest-labs/FLUX.1-dev"
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/C3LYYa30997dKRdeNDSXNjIK01CH5q8CSto12eWundnPPtWSA/out-0.png",
    "created_at": "2024-02-14T20:02:04.901849Z",
    "default_example": {
      "completed_at": "2024-02-14T20:25:53.267290Z",
      "created_at": "2024-02-14T20:24:47.803025Z",
      "data_removed": false,
      "error": null,
      "id": "pwcksmtb6g6un4xjjn6repaxt4",
      "input": {
        "width": 1024,
        "height": 1024,
        "prompt": "Anime mugshot of a tough woman. She is holding a prison sign that reads \"Proteus\". Her face is censored. Anime key visual (best quality, HD, ~+~aesthetic~+~:1.2)",
        "scheduler": "DPM++2MSDE",
        "num_outputs": 1,
        "guidance_scale": 7.5,
        "apply_watermark": true,
        "negative_prompt": "nsfw, bad quality, bad anatomy, worst quality, low quality, low resolutions, extra fingers, blur, blurry, ugly, wrongs proportions, watermark, image artifacts, lowres, ugly, jpeg artifacts, deformed, noisy image",
        "prompt_strength": 0.8,
        "num_inference_steps": 30
      },
      "logs": "Using seed: 1185096284\nPrompt: Anime mugshot of a tough woman. She is holding a prison sign that reads \"Proteus\". Her face is censored. Anime key visual (best quality, HD, ~+~aesthetic~+~:1.2)\ntxt2img mode\n  0%|          | 0/30 [00:00<?, ?it/s]\n  3%|▎         | 1/30 [00:00<00:15,  1.82it/s]\n  7%|▋         | 2/30 [00:00<00:12,  2.16it/s]\n 10%|█         | 3/30 [00:01<00:11,  2.30it/s]\n 13%|█▎        | 4/30 [00:01<00:10,  2.38it/s]\n 17%|█▋        | 5/30 [00:02<00:10,  2.41it/s]\n 20%|██        | 6/30 [00:02<00:09,  2.44it/s]\n 23%|██▎       | 7/30 [00:02<00:09,  2.45it/s]\n 27%|██▋       | 8/30 [00:03<00:08,  2.46it/s]\n 30%|███       | 9/30 [00:03<00:08,  2.47it/s]\n 33%|███▎      | 10/30 [00:04<00:08,  2.47it/s]\n 37%|███▋      | 11/30 [00:04<00:07,  2.47it/s]\n 40%|████      | 12/30 [00:04<00:07,  2.47it/s]\n 43%|████▎     | 13/30 [00:05<00:06,  2.47it/s]\n 47%|████▋     | 14/30 [00:05<00:06,  2.47it/s]\n 50%|█████     | 15/30 [00:06<00:06,  2.47it/s]\n 53%|█████▎    | 16/30 [00:06<00:05,  2.47it/s]\n 57%|█████▋    | 17/30 [00:06<00:05,  2.47it/s]\n 60%|██████    | 18/30 [00:07<00:04,  2.47it/s]\n 63%|██████▎   | 19/30 [00:07<00:04,  2.47it/s]\n 67%|██████▋   | 20/30 [00:08<00:04,  2.47it/s]\n 70%|███████   | 21/30 [00:08<00:03,  2.47it/s]\n 73%|███████▎  | 22/30 [00:09<00:03,  2.47it/s]\n 77%|███████▋  | 23/30 [00:09<00:02,  2.47it/s]\n 80%|████████  | 24/30 [00:09<00:02,  2.47it/s]\n 83%|████████▎ | 25/30 [00:10<00:02,  2.47it/s]\n 87%|████████▋ | 26/30 [00:10<00:01,  2.47it/s]\n 90%|█████████ | 27/30 [00:11<00:01,  2.47it/s]\n 93%|█████████▎| 28/30 [00:11<00:00,  2.46it/s]\n 97%|█████████▋| 29/30 [00:11<00:00,  2.47it/s]\n100%|██████████| 30/30 [00:12<00:00,  2.91it/s]\n100%|██████████| 30/30 [00:12<00:00,  2.49it/s]",
      "metrics": {
        "predict_time": 15.53602,
        "total_time": 65.464265
      },
      "model": "datacte/proteus-v0.3",
      "output": [
        "https://replicate.delivery/pbxt/C3LYYa30997dKRdeNDSXNjIK01CH5q8CSto12eWundnPPtWSA/out-0.png"
      ],
      "started_at": "2024-02-14T20:25:37.731270Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/pwcksmtb6g6un4xjjn6repaxt4",
        "cancel": "https://api.replicate.com/v1/predictions/pwcksmtb6g6un4xjjn6repaxt4/cancel"
      },
      "version": "b28b79d725c8548b173b6a19ff9bffd16b9b80df5b18b8dc5cb9e1ee471bfa48",
      "webhook": null
    },
    "description": "ProteusV0.3: The Anime Update",
    "github_url": "https://github.com/lucataco/cog-proteus-v0.3",
    "latest_version": {
      "id": "b28b79d725c8548b173b6a19ff9bffd16b9b80df5b18b8dc5cb9e1ee471bfa48",
      "created_at": "2024-02-14T20:03:21.116123Z",
      "cog_version": "0.9.3",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 11,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 2,
                  "description": "Input image for img2img or inpaint mode"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 1024,
                  "x-order": 4,
                  "description": "Width of output image. Recommended 1024 or 1280"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 1024,
                  "x-order": 5,
                  "description": "Height of output image. Recommended 1024 or 1280"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "Anime full body portrait of a swordsman holding his weapon in front of him. He is facing the camera with a fierce look on his face. Anime key visual (best quality, HD, ~+~aesthetic~+~:1.2)",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "DPM++2MSDE",
                  "x-order": 7,
                  "description": "scheduler"
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of images to output."
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 7.5,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 9,
                  "description": "Scale for classifier-free guidance. Recommended 7-8"
                },
                "apply_watermark": {
                  "type": "boolean",
                  "title": "Apply Watermark",
                  "default": true,
                  "x-order": 12,
                  "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "worst quality, low quality",
                  "x-order": 1,
                  "description": "Negative Input prompt"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 10,
                  "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 20,
                  "maximum": 100,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Number of denoising steps. 20 to 60 steps for more detail, 20 steps for faster results."
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 13,
                  "description": "Disable safety checker for generated images. This feature is only available through the API. See https://replicate.com/docs/how-does-replicate-work#safety"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM",
                "DPM++2MSDE"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/models?license=license:gpl-3.0",
    "name": "proteus-v0.3",
    "owner": "datacte",
    "paper_url": null,
    "run_count": 2411419,
    "url": "https://replicate.com/datacte/proteus-v0.3",
    "visibility": "public",
    "weights_url": "https://huggingface.co/dataautogpt3/ProteusV0.3"
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/XcklpSF1o7Z1I91xQQQHFvJfltWEa3HuQpoeVVTvN7GVJhffA/out-0.png",
    "created_at": "2022-11-13T02:10:08.620550Z",
    "default_example": {
      "completed_at": "2022-11-13T03:11:17.948447Z",
      "created_at": "2022-11-13T03:07:03.790192Z",
      "data_removed": false,
      "error": null,
      "id": "itzymcxcyrddxelbfae6jkpb7i",
      "input": {
        "width": 512,
        "height": 512,
        "prompt": "Mossy Runic Bricks seamless texture, trending on artstation, stone, moss, base color, albedo, 4k",
        "scheduler": "K-LMS",
        "num_outputs": 1,
        "guidance_scale": 7.5,
        "prompt_strength": 0.8,
        "num_inference_steps": 50
      },
      "logs": "Using seed: 52336\n  0%|          | 0/50 [00:00<?, ?it/s]\n  2%|▏         | 1/50 [00:03<02:57,  3.63s/it]\n  6%|▌         | 3/50 [00:03<00:47,  1.00s/it]\n 10%|█         | 5/50 [00:03<00:23,  1.90it/s]\n 14%|█▍        | 7/50 [00:04<00:14,  2.98it/s]\n 18%|█▊        | 9/50 [00:04<00:09,  4.22it/s]\n 22%|██▏       | 11/50 [00:04<00:07,  5.54it/s]\n 26%|██▌       | 13/50 [00:04<00:05,  6.88it/s]\n 30%|███       | 15/50 [00:04<00:04,  8.07it/s]\n 34%|███▍      | 17/50 [00:04<00:03,  9.02it/s]\n 38%|███▊      | 19/50 [00:05<00:03, 10.04it/s]\n 42%|████▏     | 21/50 [00:05<00:02, 10.78it/s]\n 46%|████▌     | 23/50 [00:05<00:02, 11.48it/s]\n 50%|█████     | 25/50 [00:05<00:02, 12.04it/s]\n 54%|█████▍    | 27/50 [00:05<00:01, 12.43it/s]\n 58%|█████▊    | 29/50 [00:05<00:01, 12.67it/s]\n 62%|██████▏   | 31/50 [00:05<00:01, 12.72it/s]\n 66%|██████▌   | 33/50 [00:06<00:01, 12.94it/s]\n 70%|███████   | 35/50 [00:06<00:01, 13.11it/s]\n 74%|███████▍  | 37/50 [00:06<00:00, 13.23it/s]\n 78%|███████▊  | 39/50 [00:06<00:00, 13.30it/s]\n 82%|████████▏ | 41/50 [00:06<00:00, 13.38it/s]\n 86%|████████▌ | 43/50 [00:06<00:00, 13.29it/s]\n 90%|█████████ | 45/50 [00:06<00:00, 13.07it/s]\n 94%|█████████▍| 47/50 [00:07<00:00, 13.14it/s]\n 98%|█████████▊| 49/50 [00:07<00:00, 13.14it/s]\n100%|██████████| 50/50 [00:07<00:00,  6.79it/s]",
      "metrics": {
        "predict_time": 9.265848,
        "total_time": 254.158255
      },
      "model": "tstramer/material-diffusion",
      "output": [
        "https://replicate.delivery/pbxt/XcklpSF1o7Z1I91xQQQHFvJfltWEa3HuQpoeVVTvN7GVJhffA/out-0.png"
      ],
      "started_at": "2022-11-13T03:11:08.682599Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/itzymcxcyrddxelbfae6jkpb7i",
        "cancel": "https://api.replicate.com/v1/predictions/itzymcxcyrddxelbfae6jkpb7i/cancel"
      },
      "version": "a42692c54c0f407f803a0a8a9066160976baedb77c91171a01730f9b0d7beeff",
      "webhook": null
    },
    "description": "Stable diffusion fork for generating tileable outputs using v1.5 model",
    "github_url": null,
    "latest_version": {
      "id": "a42692c54c0f407f803a0a8a9066160976baedb77c91171a01730f9b0d7beeff",
      "created_at": "2022-11-13T03:04:18.885453Z",
      "cog_version": "0.4.4",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Response"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Request"
                    }
                  }
                }
              }
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 4,
                  "description": "Black and white image to use as mask for inpainting over init_image. Black pixels are inpainted and white pixels are preserved. Tends to work better with prompt strength of 0.5-0.7. Consider using https://replicate.com/andreasjansson/stable-diffusion-inpainting instead."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 10,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "width": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/width"
                    }
                  ],
                  "default": 512,
                  "x-order": 1,
                  "description": "Width of output image. Maximum size is 1024x768 or 768x1024 because of memory limits"
                },
                "height": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/height"
                    }
                  ],
                  "default": 512,
                  "x-order": 2,
                  "description": "Height of output image. Maximum size is 1024x768 or 768x1024 because of memory limits"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "K-LMS",
                  "x-order": 9,
                  "description": "Choose a scheduler. If you use an init image, PNDM will be used"
                },
                "init_image": {
                  "type": "string",
                  "title": "Init Image",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Inital image to generate variations of. Will be resized to the specified width and height"
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 10,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of images to output. If the NSFW filter is triggered, you may get fewer outputs than this."
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 7.5,
                  "maximum": 20,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Scale for classifier-free guidance"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "x-order": 5,
                  "description": "Prompt strength when using init image. 1.0 corresponds to full destruction of information in init image"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 50,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 7,
                  "description": "Number of denoising steps"
                }
              }
            },
            "width": {
              "enum": [
                128,
                256,
                384,
                448,
                512,
                576,
                640,
                704,
                768,
                832,
                896,
                960,
                1024
              ],
              "type": "integer",
              "title": "width",
              "description": "An enumeration."
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "processing",
                "succeeded",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "height": {
              "enum": [
                128,
                256,
                384,
                448,
                512,
                576,
                640,
                704,
                768,
                832,
                896,
                960,
                1024
              ],
              "type": "integer",
              "title": "height",
              "description": "An enumeration."
            },
            "Request": {
              "type": "object",
              "title": "Request",
              "properties": {
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                }
              },
              "description": "The request body for a prediction"
            },
            "Response": {
              "type": "object",
              "title": "Response",
              "required": [
                "status"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                }
              },
              "description": "The response body for a prediction"
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "K-LMS",
                "PNDM"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": null,
    "name": "material-diffusion",
    "owner": "tstramer",
    "paper_url": null,
    "run_count": 2187805,
    "url": "https://replicate.com/tstramer/material-diffusion",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/b849582a-8699-4965-8016-3a51dc1da3d4/playground.jpeg",
    "created_at": "2024-02-27T22:20:16.107222Z",
    "default_example": {
      "completed_at": "2024-03-15T21:00:51.212675Z",
      "created_at": "2024-03-15T20:59:27.831539Z",
      "data_removed": false,
      "error": null,
      "id": "hhow2slbfyrxyaxtbucbhzwcti",
      "input": {
        "width": 1024,
        "height": 1024,
        "prompt": "Astronaut in a jungle, cold color palette, muted colors, detailed, 8k",
        "scheduler": "DPMSolver++",
        "num_outputs": 1,
        "guidance_scale": 3,
        "apply_watermark": true,
        "negative_prompt": "ugly, deformed, noisy, blurry, distorted",
        "prompt_strength": 0.8,
        "num_inference_steps": 25
      },
      "logs": "Using seed: 2478151516\nPrompt: Astronaut in a jungle, cold color palette, muted colors, detailed, 8k\ntxt2img mode\n  0%|          | 0/25 [00:00<?, ?it/s]\n  4%|▍         | 1/25 [00:00<00:07,  3.06it/s]\n 12%|█▏        | 3/25 [00:00<00:04,  5.13it/s]\n 16%|█▌        | 4/25 [00:00<00:04,  5.08it/s]\n 20%|██        | 5/25 [00:01<00:03,  5.05it/s]\n 24%|██▍       | 6/25 [00:01<00:03,  5.03it/s]\n 28%|██▊       | 7/25 [00:01<00:03,  5.00it/s]\n 32%|███▏      | 8/25 [00:01<00:03,  4.99it/s]\n 36%|███▌      | 9/25 [00:01<00:03,  4.98it/s]\n 40%|████      | 10/25 [00:02<00:03,  4.98it/s]\n 44%|████▍     | 11/25 [00:02<00:02,  4.98it/s]\n 48%|████▊     | 12/25 [00:02<00:02,  4.97it/s]\n 52%|█████▏    | 13/25 [00:02<00:02,  4.96it/s]\n 56%|█████▌    | 14/25 [00:02<00:02,  4.96it/s]\n 60%|██████    | 15/25 [00:03<00:02,  4.97it/s]\n 64%|██████▍   | 16/25 [00:03<00:01,  4.97it/s]\n 68%|██████▊   | 17/25 [00:03<00:01,  4.96it/s]\n 72%|███████▏  | 18/25 [00:03<00:01,  4.96it/s]\n 76%|███████▌  | 19/25 [00:03<00:01,  4.96it/s]\n 80%|████████  | 20/25 [00:04<00:01,  4.96it/s]\n 84%|████████▍ | 21/25 [00:04<00:00,  4.96it/s]\n 88%|████████▊ | 22/25 [00:04<00:00,  4.95it/s]\n 92%|█████████▏| 23/25 [00:04<00:00,  4.95it/s]\n 96%|█████████▌| 24/25 [00:04<00:00,  4.95it/s]\n100%|██████████| 25/25 [00:05<00:00,  4.95it/s]\n100%|██████████| 25/25 [00:05<00:00,  4.94it/s]",
      "metrics": {
        "predict_time": 8.01971,
        "total_time": 83.381136
      },
      "model": "playgroundai/playground-v2.5-1024px-aesthetic",
      "output": [
        "https://replicate.delivery/pbxt/XAK4XRgpjYaCGRrm9yxzO2bacj4XTE1Nl6bwaXKOHKYApJoE/out-0.png"
      ],
      "started_at": "2024-03-15T21:00:43.192965Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/hhow2slbfyrxyaxtbucbhzwcti",
        "cancel": "https://api.replicate.com/v1/predictions/hhow2slbfyrxyaxtbucbhzwcti/cancel"
      },
      "version": "a45f82a1382bed5c7aeb861dac7c7d191b0fdf74d8d57c4a0e6ed7d4d0bf7d24",
      "webhook": null
    },
    "description": "Playground v2.5 is the state-of-the-art open-source model in aesthetic quality",
    "github_url": "https://github.com/lucataco/cog-playground-v2.5-1024px-aesthetic",
    "latest_version": {
      "id": "a45f82a1382bed5c7aeb861dac7c7d191b0fdf74d8d57c4a0e6ed7d4d0bf7d24",
      "created_at": "2024-03-15T20:59:05.244271Z",
      "cog_version": "0.9.4",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 11,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 2,
                  "description": "Input image for img2img or inpaint mode"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 1024,
                  "maximum": 1536,
                  "minimum": 256,
                  "x-order": 4,
                  "description": "Width of output image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 1024,
                  "maximum": 1536,
                  "minimum": 256,
                  "x-order": 5,
                  "description": "Height of output image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "Astronaut in a jungle, cold color palette, muted colors, detailed, 8k",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "DPMSolver++",
                  "x-order": 7,
                  "description": "Scheduler. DPMSolver++ or DPM++2MKarras is recommended for most cases"
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of images to output."
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 3,
                  "maximum": 20,
                  "minimum": 0.1,
                  "x-order": 9,
                  "description": "Scale for classifier-free guidance"
                },
                "apply_watermark": {
                  "type": "boolean",
                  "title": "Apply Watermark",
                  "default": true,
                  "x-order": 12,
                  "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "ugly, deformed, noisy, blurry, distorted",
                  "x-order": 1,
                  "description": "Negative Input prompt"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 10,
                  "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 25,
                  "maximum": 60,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Number of denoising steps"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 13,
                  "description": "Disable safety checker for generated images. This feature is only available through the API. See https://replicate.com/docs/how-does-replicate-work#safety"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM",
                "DPM++2MKarras",
                "DPMSolver++"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/playgroundai/playground-v2.5-1024px-aesthetic/blob/main/LICENSE.md",
    "name": "playground-v2.5-1024px-aesthetic",
    "owner": "playgroundai",
    "paper_url": "https://arxiv.org/abs/2206.00364",
    "run_count": 1951577,
    "url": "https://replicate.com/playgroundai/playground-v2.5-1024px-aesthetic",
    "visibility": "public",
    "weights_url": "https://huggingface.co/playgroundai/playground-v2.5-1024px-aesthetic"
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/8121c76b-fbff-41d9-834d-c70dea9d2191/flux-ultra-cover.jpg",
    "created_at": "2024-11-06T19:13:05.091037Z",
    "default_example": {
      "completed_at": "2024-11-25T20:51:39.559538Z",
      "created_at": "2024-11-25T20:51:31.418000Z",
      "data_removed": false,
      "error": null,
      "id": "dyq83qfxv9rg80ckcmbvpwv91r",
      "input": {
        "raw": false,
        "prompt": "a majestic snow-capped mountain peak bathed in a warm glow of the setting sun",
        "aspect_ratio": "3:2",
        "output_format": "jpg",
        "safety_tolerance": 2,
        "image_prompt_strength": 0.1
      },
      "logs": "Running prediction... \nUsing seed: 14351\nGenerating image...\nGenerated image in 8.0sec\nDownloaded image in 0.13sec",
      "metrics": {
        "image_count": 1,
        "predict_time": 8.132732037,
        "total_time": 8.141538
      },
      "model": "black-forest-labs/flux-1.1-pro-ultra",
      "output": "https://replicate.delivery/czjl/jqtNvxYHcnLELpszvkVf0APhMkBnwzrdo205RaVB7MttqU6JA/tmppokfymld.jpg",
      "started_at": "2024-11-25T20:51:31.426806Z",
      "status": "succeeded",
      "urls": {
        "stream": "https://stream.replicate.com/v1/files/fddq-iy2aaylhwyx75okovamhaia3wfv644cf2vkghgpwqqzls6246tzq",
        "get": "https://api.replicate.com/v1/predictions/dyq83qfxv9rg80ckcmbvpwv91r",
        "cancel": "https://api.replicate.com/v1/predictions/dyq83qfxv9rg80ckcmbvpwv91r/cancel"
      },
      "version": "58584562f1fc7970e98776198de1216b9902bc066995dd38b9f0b064046899bd",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/official-model-prediction"
    },
    "description": "FLUX1.1 [pro] in ultra and raw modes. Images are up to 4 megapixels. Use raw mode for realism.",
    "github_url": null,
    "latest_version": {
      "id": "352185dbc99e9dd708b78b4e6870e3ca49d00dc6451a32fc6dd57968194fae5a",
      "created_at": "2024-11-25T15:37:54.415976Z",
      "cog_version": "0.10.0-alpha25",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/ready": {
            "get": {
              "summary": "Ready",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Ready Ready Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "ready_ready_get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "required": [
                "prompt"
              ],
              "properties": {
                "raw": {
                  "type": "boolean",
                  "title": "Raw",
                  "default": false,
                  "x-order": 6,
                  "description": "Generate less processed, more natural-looking images"
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 5,
                  "description": "Random seed. Set for reproducible generation"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "x-order": 0,
                  "description": "Text prompt for image generation"
                },
                "aspect_ratio": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/aspect_ratio"
                    }
                  ],
                  "default": "1:1",
                  "x-order": 3,
                  "description": "Aspect ratio for the generated image"
                },
                "image_prompt": {
                  "type": "string",
                  "title": "Image Prompt",
                  "format": "uri",
                  "x-order": 1,
                  "description": "Image to use with Flux Redux. This is used together with the text prompt to guide the generation towards the composition of the image_prompt. Must be jpeg, png, gif, or webp."
                },
                "output_format": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/output_format"
                    }
                  ],
                  "default": "jpg",
                  "x-order": 7,
                  "description": "Format of the output images."
                },
                "safety_tolerance": {
                  "type": "integer",
                  "title": "Safety Tolerance",
                  "default": 2,
                  "maximum": 6,
                  "minimum": 1,
                  "x-order": 4,
                  "description": "Safety tolerance, 1 is most strict and 6 is most permissive"
                },
                "image_prompt_strength": {
                  "type": "number",
                  "title": "Image Prompt Strength",
                  "default": 0.1,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 2,
                  "description": "Blend between the prompt and the image prompt."
                }
              }
            },
            "Output": {
              "type": "string",
              "title": "Output",
              "format": "uri"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "aspect_ratio": {
              "enum": [
                "21:9",
                "16:9",
                "3:2",
                "4:3",
                "5:4",
                "1:1",
                "4:5",
                "3:4",
                "2:3",
                "9:16",
                "9:21"
              ],
              "type": "string",
              "title": "aspect_ratio",
              "description": "An enumeration."
            },
            "output_format": {
              "enum": [
                "jpg",
                "png"
              ],
              "type": "string",
              "title": "output_format",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://replicate.com/black-forest-labs/flux-pro#license",
    "name": "flux-1.1-pro-ultra",
    "owner": "black-forest-labs",
    "paper_url": "https://blackforestlabs.ai/flux-1-1-ultra/",
    "run_count": 1684080,
    "url": "https://replicate.com/black-forest-labs/flux-1.1-pro-ultra",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/859c8ec6-4046-4d4e-9826-b7b575e5b79f/cover.webp",
    "created_at": "2023-10-25T13:18:51.901032Z",
    "default_example": {
      "completed_at": "2023-11-17T12:01:14.214049Z",
      "created_at": "2023-11-17T12:01:12.926959Z",
      "data_removed": false,
      "error": null,
      "id": "uzzsxzjb2sus5xl5jqnxpjlyoq",
      "input": {
        "image": "https://replicate.delivery/pbxt/JlG0Efd2ubBp9yGnlOi7I9Se2rXnJSrPFogLf0YieKgjnWN6/download-6.png",
        "width": 768,
        "height": 768,
        "prompt": "Self-portrait oil painting, a beautiful cyborg with golden hair, 8k",
        "num_images": 1,
        "guidance_scale": 8,
        "archive_outputs": false,
        "prompt_strength": 0.45,
        "sizing_strategy": "width/height",
        "lcm_origin_steps": 50,
        "canny_low_threshold": 100,
        "num_inference_steps": 4,
        "canny_high_threshold": 200,
        "control_guidance_end": 1,
        "control_guidance_start": 0,
        "controlnet_conditioning_scale": 2
      },
      "logs": "Using seed: 38477\nFound 1 prompt:\n- Self-portrait oil painting, a beautiful cyborg with golden hair, 8k\nMaking 1 image\nUsing given dimensions\nimg2img mode\n  0%|          | 0/4 [00:00<?, ?it/s]\n 50%|█████     | 2/4 [00:00<00:00, 17.91it/s]\n100%|██████████| 4/4 [00:00<00:00, 17.82it/s]\n100%|██████████| 4/4 [00:00<00:00, 17.81it/s]",
      "metrics": {
        "predict_time": 0.845919,
        "total_time": 1.28709
      },
      "model": "fofr/latent-consistency-model",
      "output": [
        "https://replicate.delivery/pbxt/LF23xWrMie2vMCmbiswetET2BLperpEtNodZSN4yNfDkAClHB/out-0.jpg"
      ],
      "started_at": "2023-11-17T12:01:13.368130Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/uzzsxzjb2sus5xl5jqnxpjlyoq",
        "cancel": "https://api.replicate.com/v1/predictions/uzzsxzjb2sus5xl5jqnxpjlyoq/cancel"
      },
      "version": "fd0f02756ae5c3244cfb45c0603296e7418c07d1501bc6e9463ea2d215d5e38f",
      "webhook": null
    },
    "description": "Super-fast, 0.6s per image. LCM with img2img, large batching and canny controlnet",
    "github_url": "https://github.com/fofr/cog-lcm",
    "latest_version": {
      "id": "683d19dc312f7a9f0428b04429a9ccefd28dbf7785fef083ad5cf991b65f406f",
      "created_at": "2024-01-10T10:02:04.312938Z",
      "cog_version": "0.8.6",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 10,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 4,
                  "description": "Input image for img2img"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 768,
                  "x-order": 1,
                  "description": "Width of output image. Lower if out of memory"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 768,
                  "x-order": 2,
                  "description": "Height of output image. Lower if out of memory"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "Self-portrait oil painting, a beautiful cyborg with golden hair, 8k",
                  "x-order": 0,
                  "description": "For multiple prompts, enter each on a new line."
                },
                "num_images": {
                  "type": "integer",
                  "title": "Num Images",
                  "default": 1,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of images per prompt"
                },
                "control_image": {
                  "type": "string",
                  "title": "Control Image",
                  "format": "uri",
                  "x-order": 11,
                  "description": "Image for controlnet conditioning"
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 8,
                  "maximum": 20,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Scale for classifier-free guidance"
                },
                "archive_outputs": {
                  "type": "boolean",
                  "title": "Archive Outputs",
                  "default": false,
                  "x-order": 17,
                  "description": "Option to archive the output images"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 5,
                  "description": "Prompt strength when using img2img. 1.0 corresponds to full destruction of information in image"
                },
                "sizing_strategy": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/sizing_strategy"
                    }
                  ],
                  "default": "width/height",
                  "x-order": 3,
                  "description": "Decide how to resize images – use width/height, resize based on input image or control image"
                },
                "lcm_origin_steps": {
                  "type": "integer",
                  "title": "Lcm Origin Steps",
                  "default": 50,
                  "minimum": 1,
                  "x-order": 9
                },
                "canny_low_threshold": {
                  "type": "number",
                  "title": "Canny Low Threshold",
                  "default": 100,
                  "maximum": 255,
                  "minimum": 1,
                  "x-order": 15,
                  "description": "Canny low threshold"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 8,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 7,
                  "description": "Number of denoising steps. Recommend 1 to 8 steps."
                },
                "canny_high_threshold": {
                  "type": "number",
                  "title": "Canny High Threshold",
                  "default": 200,
                  "maximum": 255,
                  "minimum": 1,
                  "x-order": 16,
                  "description": "Canny high threshold"
                },
                "control_guidance_end": {
                  "type": "number",
                  "title": "Control Guidance End",
                  "default": 1,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 14,
                  "description": "Controlnet end"
                },
                "control_guidance_start": {
                  "type": "number",
                  "title": "Control Guidance Start",
                  "default": 0,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 13,
                  "description": "Controlnet start"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 18,
                  "description": "Disable safety checker for generated images. This feature is only available through the API"
                },
                "controlnet_conditioning_scale": {
                  "type": "number",
                  "title": "Controlnet Conditioning Scale",
                  "default": 2,
                  "maximum": 4,
                  "minimum": 0.1,
                  "x-order": 12,
                  "description": "Controlnet conditioning scale"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "sizing_strategy": {
              "enum": [
                "width/height",
                "input_image",
                "control_image"
              ],
              "type": "string",
              "title": "sizing_strategy",
              "description": "An enumeration."
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://github.com/fofr/cog-lcm/blob/main/LICENSE",
    "name": "latent-consistency-model",
    "owner": "fofr",
    "paper_url": null,
    "run_count": 1216727,
    "url": "https://replicate.com/fofr/latent-consistency-model",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/mUtp8mKk8yI0EJ5olzsnpkeTbAcmy2OTEqnXXc8EFGLhhuEJA/out-0.png",
    "created_at": "2024-01-05T14:05:27.681939Z",
    "default_example": {
      "completed_at": "2024-01-05T15:22:42.927298Z",
      "created_at": "2024-01-05T15:22:33.560461Z",
      "data_removed": false,
      "error": null,
      "id": "66toqj3bmu6zvqr4bj2hlmbsmu",
      "input": {
        "width": 768,
        "height": 768,
        "prompt": "A detailed photo of an astronaut riding a unicorn through a field of flowers",
        "refine": "no_refiner",
        "scheduler": "K_EULER",
        "lora_scale": 0.8,
        "num_outputs": 1,
        "controlnet_1": "soft_edge_hed",
        "controlnet_2": "none",
        "controlnet_3": "none",
        "guidance_scale": 7.5,
        "apply_watermark": false,
        "negative_prompt": "",
        "prompt_strength": 0.8,
        "sizing_strategy": "width_height",
        "controlnet_1_end": 1,
        "controlnet_2_end": 1,
        "controlnet_3_end": 1,
        "controlnet_1_image": "https://replicate.delivery/pbxt/JsfCQE8k1lsCinW1yo76yKMQe6R5MRt9WLL3H5T5Ypc5wasq/020e656d-0c71-45c3-a7f5-1facf7d52d4f.png",
        "controlnet_1_start": 0,
        "controlnet_2_start": 0,
        "controlnet_3_start": 0,
        "num_inference_steps": 30,
        "controlnet_1_conditioning_scale": 0.8,
        "controlnet_2_conditioning_scale": 0.8,
        "controlnet_3_conditioning_scale": 0.75
      },
      "logs": "Using seed: 19498\nUsing given dimensions\nresize took: 0.02s\nPrompt: A detailed photo of an astronaut riding a unicorn through a field of flowers\nProcessing image with soft_edge_hed\ncontrolnet preprocess took: 0.43s\nUsing txt2img + controlnet pipeline\nLoading pipeline components...:   0%|          | 0/7 [00:00<?, ?it/s]\nLoading pipeline components...: 100%|██████████| 7/7 [00:00<00:00, 15485.30it/s]\nYou have 1 ControlNets and you have passed 1 prompts. The conditionings will be fixed across the prompts.\n  0%|          | 0/30 [00:00<?, ?it/s]\n  3%|▎         | 1/30 [00:00<00:06,  4.63it/s]\n  7%|▋         | 2/30 [00:00<00:06,  4.62it/s]\n 10%|█         | 3/30 [00:00<00:05,  4.62it/s]\n 13%|█▎        | 4/30 [00:00<00:05,  4.62it/s]\n 17%|█▋        | 5/30 [00:01<00:05,  4.63it/s]\n 20%|██        | 6/30 [00:01<00:05,  4.63it/s]\n 23%|██▎       | 7/30 [00:01<00:04,  4.62it/s]\n 27%|██▋       | 8/30 [00:01<00:04,  4.62it/s]\n 30%|███       | 9/30 [00:01<00:04,  4.63it/s]\n 33%|███▎      | 10/30 [00:02<00:04,  4.63it/s]\n 37%|███▋      | 11/30 [00:02<00:04,  4.62it/s]\n 40%|████      | 12/30 [00:02<00:03,  4.62it/s]\n 43%|████▎     | 13/30 [00:02<00:03,  4.62it/s]\n 47%|████▋     | 14/30 [00:03<00:03,  4.62it/s]\n 50%|█████     | 15/30 [00:03<00:03,  4.62it/s]\n 53%|█████▎    | 16/30 [00:03<00:03,  4.62it/s]\n 57%|█████▋    | 17/30 [00:03<00:02,  4.62it/s]\n 60%|██████    | 18/30 [00:03<00:02,  4.62it/s]\n 63%|██████▎   | 19/30 [00:04<00:02,  4.62it/s]\n 67%|██████▋   | 20/30 [00:04<00:02,  4.62it/s]\n 70%|███████   | 21/30 [00:04<00:01,  4.62it/s]\n 73%|███████▎  | 22/30 [00:04<00:01,  4.61it/s]\n 77%|███████▋  | 23/30 [00:04<00:01,  4.62it/s]\n 80%|████████  | 24/30 [00:05<00:01,  4.62it/s]\n 83%|████████▎ | 25/30 [00:05<00:01,  4.62it/s]\n 87%|████████▋ | 26/30 [00:05<00:00,  4.62it/s]\n 90%|█████████ | 27/30 [00:05<00:00,  4.61it/s]\n 93%|█████████▎| 28/30 [00:06<00:00,  4.61it/s]\n 97%|█████████▋| 29/30 [00:06<00:00,  4.61it/s]\n100%|██████████| 30/30 [00:06<00:00,  4.61it/s]\n100%|██████████| 30/30 [00:06<00:00,  4.62it/s]\ninference took: 6.76s\nprediction took: 7.43s",
      "metrics": {
        "predict_time": 9.328726,
        "total_time": 9.366837
      },
      "model": "fofr/realvisxl-v3-multi-controlnet-lora",
      "output": [
        "https://replicate.delivery/pbxt/2hRD2xil2dq5IxJz0wC403uh1ckANw7srVhHxbPfn52ghuEJA/control-0.png",
        "https://replicate.delivery/pbxt/mUtp8mKk8yI0EJ5olzsnpkeTbAcmy2OTEqnXXc8EFGLhhuEJA/out-0.png"
      ],
      "started_at": "2024-01-05T15:22:33.598572Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/66toqj3bmu6zvqr4bj2hlmbsmu",
        "cancel": "https://api.replicate.com/v1/predictions/66toqj3bmu6zvqr4bj2hlmbsmu/cancel"
      },
      "version": "90a4a3604cd637cb9f1a2bdae1cfa9ed869362ca028814cdce310a78e27daade",
      "webhook": null
    },
    "description": "RealVisXl V3 with multi-controlnet, lora loading, img2img, inpainting",
    "github_url": "https://github.com/fofr/cog-realvisxl-3-multi-controlnet-lora",
    "latest_version": {
      "id": "90a4a3604cd637cb9f1a2bdae1cfa9ed869362ca028814cdce310a78e27daade",
      "created_at": "2024-01-05T14:50:15.780835Z",
      "cog_version": "0.8.6",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 12,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 2,
                  "description": "Input image for img2img or inpaint mode"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 768,
                  "x-order": 4,
                  "description": "Width of output image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 768,
                  "x-order": 5,
                  "description": "Height of output image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "An astronaut riding a rainbow unicorn",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "refine": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/refine"
                    }
                  ],
                  "default": "no_refiner",
                  "x-order": 13,
                  "description": "Which refine style to use"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "K_EULER",
                  "x-order": 8,
                  "description": "scheduler"
                },
                "lora_scale": {
                  "type": "number",
                  "title": "Lora Scale",
                  "default": 0.6,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 16,
                  "description": "LoRA additive scale. Only applicable on trained models."
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 7,
                  "description": "Number of images to output"
                },
                "controlnet_1": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/controlnet_1"
                    }
                  ],
                  "default": "none",
                  "x-order": 19,
                  "description": "Controlnet"
                },
                "controlnet_2": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/controlnet_2"
                    }
                  ],
                  "default": "none",
                  "x-order": 24,
                  "description": "Controlnet"
                },
                "controlnet_3": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/controlnet_3"
                    }
                  ],
                  "default": "none",
                  "x-order": 29,
                  "description": "Controlnet"
                },
                "lora_weights": {
                  "type": "string",
                  "title": "Lora Weights",
                  "x-order": 17,
                  "description": "Replicate LoRA weights to use. Leave blank to use the default weights."
                },
                "refine_steps": {
                  "type": "integer",
                  "title": "Refine Steps",
                  "x-order": 14,
                  "description": "For base_image_refiner, the number of steps to refine, defaults to num_inference_steps"
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 7.5,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 10,
                  "description": "Scale for classifier-free guidance"
                },
                "apply_watermark": {
                  "type": "boolean",
                  "title": "Apply Watermark",
                  "default": false,
                  "x-order": 15,
                  "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "",
                  "x-order": 1,
                  "description": "Negative Prompt"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 11,
                  "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image"
                },
                "sizing_strategy": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/sizing_strategy"
                    }
                  ],
                  "default": "width_height",
                  "x-order": 6,
                  "description": "Decide how to resize images – use width/height, resize based on input image or control image"
                },
                "controlnet_1_end": {
                  "type": "number",
                  "title": "Controlnet 1 End",
                  "default": 1,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 23,
                  "description": "When controlnet conditioning ends"
                },
                "controlnet_2_end": {
                  "type": "number",
                  "title": "Controlnet 2 End",
                  "default": 1,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 28,
                  "description": "When controlnet conditioning ends"
                },
                "controlnet_3_end": {
                  "type": "number",
                  "title": "Controlnet 3 End",
                  "default": 1,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 33,
                  "description": "When controlnet conditioning ends"
                },
                "controlnet_1_image": {
                  "type": "string",
                  "title": "Controlnet 1 Image",
                  "format": "uri",
                  "x-order": 20,
                  "description": "Input image for first controlnet"
                },
                "controlnet_1_start": {
                  "type": "number",
                  "title": "Controlnet 1 Start",
                  "default": 0,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 22,
                  "description": "When controlnet conditioning starts"
                },
                "controlnet_2_image": {
                  "type": "string",
                  "title": "Controlnet 2 Image",
                  "format": "uri",
                  "x-order": 25,
                  "description": "Input image for second controlnet"
                },
                "controlnet_2_start": {
                  "type": "number",
                  "title": "Controlnet 2 Start",
                  "default": 0,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 27,
                  "description": "When controlnet conditioning starts"
                },
                "controlnet_3_image": {
                  "type": "string",
                  "title": "Controlnet 3 Image",
                  "format": "uri",
                  "x-order": 30,
                  "description": "Input image for third controlnet"
                },
                "controlnet_3_start": {
                  "type": "number",
                  "title": "Controlnet 3 Start",
                  "default": 0,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 32,
                  "description": "When controlnet conditioning starts"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 30,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 9,
                  "description": "Number of denoising steps"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 18,
                  "description": "Disable safety checker for generated images. This feature is only available through the API."
                },
                "controlnet_1_conditioning_scale": {
                  "type": "number",
                  "title": "Controlnet 1 Conditioning Scale",
                  "default": 0.75,
                  "maximum": 4,
                  "minimum": 0,
                  "x-order": 21,
                  "description": "How strong the controlnet conditioning is"
                },
                "controlnet_2_conditioning_scale": {
                  "type": "number",
                  "title": "Controlnet 2 Conditioning Scale",
                  "default": 0.75,
                  "maximum": 4,
                  "minimum": 0,
                  "x-order": 26,
                  "description": "How strong the controlnet conditioning is"
                },
                "controlnet_3_conditioning_scale": {
                  "type": "number",
                  "title": "Controlnet 3 Conditioning Scale",
                  "default": 0.75,
                  "maximum": 4,
                  "minimum": 0,
                  "x-order": 31,
                  "description": "How strong the controlnet conditioning is"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "refine": {
              "enum": [
                "no_refiner",
                "base_image_refiner"
              ],
              "type": "string",
              "title": "refine",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "controlnet_1": {
              "enum": [
                "none",
                "edge_canny",
                "illusion",
                "depth_leres",
                "depth_midas",
                "soft_edge_pidi",
                "soft_edge_hed",
                "lineart",
                "lineart_anime",
                "openpose"
              ],
              "type": "string",
              "title": "controlnet_1",
              "description": "An enumeration."
            },
            "controlnet_2": {
              "enum": [
                "none",
                "edge_canny",
                "illusion",
                "depth_leres",
                "depth_midas",
                "soft_edge_pidi",
                "soft_edge_hed",
                "lineart",
                "lineart_anime",
                "openpose"
              ],
              "type": "string",
              "title": "controlnet_2",
              "description": "An enumeration."
            },
            "controlnet_3": {
              "enum": [
                "none",
                "edge_canny",
                "illusion",
                "depth_leres",
                "depth_midas",
                "soft_edge_pidi",
                "soft_edge_hed",
                "lineart",
                "lineart_anime",
                "openpose"
              ],
              "type": "string",
              "title": "controlnet_3",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "sizing_strategy": {
              "enum": [
                "width_height",
                "input_image",
                "controlnet_1_image",
                "controlnet_2_image",
                "controlnet_3_image",
                "mask_image"
              ],
              "type": "string",
              "title": "sizing_strategy",
              "description": "An enumeration."
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/stabilityai/stable-diffusion-xl-base-1.0/blob/main/LICENSE.md",
    "name": "realvisxl-v3-multi-controlnet-lora",
    "owner": "fofr",
    "paper_url": "https://huggingface.co/SG161222/RealVisXL_V3.0",
    "run_count": 1007440,
    "url": "https://replicate.com/fofr/realvisxl-v3-multi-controlnet-lora",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/82a7b2d0-d2bf-4ccd-bbe7-6a9ddbd44774/out-0-33.webp",
    "created_at": "2023-10-25T01:00:47.117782Z",
    "default_example": {
      "completed_at": "2024-12-06T21:08:18.042372Z",
      "created_at": "2024-12-06T21:08:16.635000Z",
      "data_removed": false,
      "error": null,
      "id": "7n0h7128fdrma0ckkq6rphkkn4",
      "input": {
        "seed": 36446545872,
        "width": 768,
        "height": 768,
        "prompt": "with smoke, half ice and half fire and ultra realistic in detail.wolf, typography, dark fantasy, wildlife photography, vibrant, cinematic and on a black background",
        "scheduler": "K_EULER",
        "lora_scale": 0.6,
        "num_outputs": 1,
        "batched_prompt": false,
        "guidance_scale": 9,
        "apply_watermark": true,
        "negative_prompt": "scary, cartoon, painting",
        "prompt_strength": 0.8,
        "num_inference_steps": 25
      },
      "logs": "Using seed: 36446545872\nPrompt: with smoke, half ice and half fire and ultra realistic in detail.wolf, typography, dark fantasy, wildlife photography, vibrant, cinematic and on a black background\ntxt2img mode\n  0%|          | 0/25 [00:00<?, ?it/s]\n  8%|▊         | 2/25 [00:00<00:01, 17.04it/s]\n 20%|██        | 5/25 [00:00<00:00, 22.00it/s]\n 32%|███▏      | 8/25 [00:00<00:00, 23.40it/s]\n 44%|████▍     | 11/25 [00:00<00:00, 24.11it/s]\n 56%|█████▌    | 14/25 [00:00<00:00, 24.51it/s]\n 68%|██████▊   | 17/25 [00:00<00:00, 24.73it/s]\n 80%|████████  | 20/25 [00:00<00:00, 24.86it/s]\n 92%|█████████▏| 23/25 [00:00<00:00, 24.92it/s]\n100%|██████████| 25/25 [00:01<00:00, 24.23it/s]",
      "metrics": {
        "predict_time": 1.398281685,
        "total_time": 1.407372
      },
      "model": "lucataco/ssd-1b",
      "output": [
        "https://replicate.delivery/xezq/22omflc90SUAI6J8R2tioVJYeDq1oYO8XrDYrUYzeF8FOjwnA/out-0.png"
      ],
      "started_at": "2024-12-06T21:08:16.644090Z",
      "status": "succeeded",
      "urls": {
        "stream": "https://stream.replicate.com/v1/files/bcwr-ap226x5vfp2teztlqgnawxm5e3nhg5breye7rkwsfxb7aoflzhta",
        "get": "https://api.replicate.com/v1/predictions/7n0h7128fdrma0ckkq6rphkkn4",
        "cancel": "https://api.replicate.com/v1/predictions/7n0h7128fdrma0ckkq6rphkkn4/cancel"
      },
      "version": "b19e3639452c59ce8295b82aba70a231404cb062f2eb580ea894b31e8ce5bbb6",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/version-prediction"
    },
    "description": "Segmind Stable Diffusion Model (SSD-1B) is a distilled 50% smaller version of SDXL, offering a 60% speedup while maintaining high-quality text-to-image generation capabilities",
    "github_url": "https://github.com/lucataco/cog-ssd-1b",
    "latest_version": {
      "id": "b19e3639452c59ce8295b82aba70a231404cb062f2eb580ea894b31e8ce5bbb6",
      "created_at": "2023-11-08T20:23:26.572587Z",
      "cog_version": "0.8.5",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 4,
                  "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 12,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input image for img2img or inpaint mode"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 768,
                  "x-order": 5,
                  "description": "Width of output image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 768,
                  "x-order": 6,
                  "description": "Height of output image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "with smoke, half ice and half fire and ultra realistic in detail.wolf, typography, dark fantasy, wildlife photography, vibrant, cinematic and on a black background",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "K_EULER",
                  "x-order": 8,
                  "description": "scheduler"
                },
                "lora_scale": {
                  "type": "number",
                  "title": "Lora Scale",
                  "default": 0.6,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 14,
                  "description": "LoRA additive scale. Only applicable on trained models."
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 7,
                  "description": "Number of images to output."
                },
                "batched_prompt": {
                  "type": "boolean",
                  "title": "Batched Prompt",
                  "default": false,
                  "x-order": 2,
                  "description": "When active, your prompt will be split by newlines and images will be generated for each individual line"
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 7.5,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 10,
                  "description": "Scale for classifier-free guidance"
                },
                "apply_watermark": {
                  "type": "boolean",
                  "title": "Apply Watermark",
                  "default": true,
                  "x-order": 13,
                  "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "scary, cartoon, painting",
                  "x-order": 1,
                  "description": "Negative Input prompt"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 11,
                  "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image"
                },
                "replicate_weights": {
                  "type": "string",
                  "title": "Replicate Weights",
                  "x-order": 15,
                  "description": "Replicate LoRA weights to use. Leave blank to use the default weights."
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 25,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 9,
                  "description": "Number of denoising steps"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 16,
                  "description": "Disable safety checker for generated images. This feature is only available through the API. See https://replicate.com/docs/how-does-replicate-work#safety"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "completed",
                    "logs",
                    "start",
                    "output"
                  ],
                  "uniqueItems": true
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://github.com/segmind/distill-sd/blob/master/LICENSE",
    "name": "ssd-1b",
    "owner": "lucataco",
    "paper_url": "https://arxiv.org/abs/2305.15798",
    "run_count": 990340,
    "url": "https://replicate.com/lucataco/ssd-1b",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/b7f3dda4-03ee-4dc0-b854-d8f740c153d6/cover.a1ee0b3e.jpg",
    "created_at": "2024-01-19T13:00:41.995787Z",
    "default_example": {
      "completed_at": "2024-05-27T23:02:41.095285Z",
      "created_at": "2024-05-27T23:02:36.939000Z",
      "data_removed": false,
      "error": null,
      "id": "ps4f5zcthdrgm0cfqh586zed7r",
      "input": {
        "output_format": "webp",
        "workflow_json": "{\n  \"3\": {\n    \"inputs\": {\n      \"seed\": 156680208700286,\n      \"steps\": 10,\n      \"cfg\": 2.5,\n      \"sampler_name\": \"dpmpp_2m_sde\",\n      \"scheduler\": \"karras\",\n      \"denoise\": 1,\n      \"model\": [\n        \"4\",\n        0\n      ],\n      \"positive\": [\n        \"6\",\n        0\n      ],\n      \"negative\": [\n        \"7\",\n        0\n      ],\n      \"latent_image\": [\n        \"5\",\n        0\n      ]\n    },\n    \"class_type\": \"KSampler\",\n    \"_meta\": {\n      \"title\": \"KSampler\"\n    }\n  },\n  \"4\": {\n    \"inputs\": {\n      \"ckpt_name\": \"SDXL-Flash.safetensors\"\n    },\n    \"class_type\": \"CheckpointLoaderSimple\",\n    \"_meta\": {\n      \"title\": \"Load Checkpoint\"\n    }\n  },\n  \"5\": {\n    \"inputs\": {\n      \"width\": 1024,\n      \"height\": 1024,\n      \"batch_size\": 1\n    },\n    \"class_type\": \"EmptyLatentImage\",\n    \"_meta\": {\n      \"title\": \"Empty Latent Image\"\n    }\n  },\n  \"6\": {\n    \"inputs\": {\n      \"text\": \"beautiful scenery nature glass bottle landscape, purple galaxy bottle,\",\n      \"clip\": [\n        \"4\",\n        1\n      ]\n    },\n    \"class_type\": \"CLIPTextEncode\",\n    \"_meta\": {\n      \"title\": \"CLIP Text Encode (Prompt)\"\n    }\n  },\n  \"7\": {\n    \"inputs\": {\n      \"text\": \"text, watermark\",\n      \"clip\": [\n        \"4\",\n        1\n      ]\n    },\n    \"class_type\": \"CLIPTextEncode\",\n    \"_meta\": {\n      \"title\": \"CLIP Text Encode (Prompt)\"\n    }\n  },\n  \"8\": {\n    \"inputs\": {\n      \"samples\": [\n        \"3\",\n        0\n      ],\n      \"vae\": [\n        \"4\",\n        2\n      ]\n    },\n    \"class_type\": \"VAEDecode\",\n    \"_meta\": {\n      \"title\": \"VAE Decode\"\n    }\n  },\n  \"9\": {\n    \"inputs\": {\n      \"filename_prefix\": \"ComfyUI\",\n      \"images\": [\n        \"8\",\n        0\n      ]\n    },\n    \"class_type\": \"SaveImage\",\n    \"_meta\": {\n      \"title\": \"Save Image\"\n    }\n  }\n}\n",
        "output_quality": 80,
        "randomise_seeds": true,
        "force_reset_cache": false,
        "return_temp_files": false
      },
      "logs": "Checking inputs\n====================================\nChecking weights\n✅ SDXL-Flash.safetensors\n====================================\nRandomising seed to 1177809266\nRunning workflow\ngot prompt\nExecuting node 3, title: KSampler, class type: KSampler\n  0%|          | 0/10 [00:00<?, ?it/s]\n 10%|█         | 1/10 [00:00<00:01,  4.91it/s]\n 20%|██        | 2/10 [00:00<00:01,  4.71it/s]\n 30%|███       | 3/10 [00:00<00:01,  4.64it/s]\n 40%|████      | 4/10 [00:00<00:01,  4.61it/s]\n 50%|█████     | 5/10 [00:01<00:01,  4.58it/s]\n 60%|██████    | 6/10 [00:01<00:00,  4.59it/s]\n 70%|███████   | 7/10 [00:01<00:00,  4.61it/s]\n 80%|████████  | 8/10 [00:01<00:00,  4.64it/s]\n 90%|█████████ | 9/10 [00:01<00:00,  4.78it/s]\n100%|██████████| 10/10 [00:02<00:00,  4.93it/s]\n100%|██████████| 10/10 [00:02<00:00,  4.74it/s]\nExecuting node 8, title: VAE Decode, class type: VAEDecode\nExecuting node 9, title: Save Image, class type: SaveImage\nPrompt executed in 2.49 seconds\noutputs:  {'9': {'images': [{'filename': 'ComfyUI_00001_.png', 'subfolder': '', 'type': 'output'}]}}\n====================================\nContents of /tmp/outputs:\nComfyUI_00001_.png",
      "metrics": {
        "predict_time": 4.042497,
        "total_time": 4.156285
      },
      "model": "fofr/any-comfyui-workflow",
      "output": [
        "https://replicate.delivery/pbxt/EUgMsgBDey19GacT8LSL45TCQgpmrazN5oN6LhhyLuRIGWcJA/ComfyUI_00001_.webp"
      ],
      "started_at": "2024-05-27T23:02:37.052788Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/ps4f5zcthdrgm0cfqh586zed7r",
        "cancel": "https://api.replicate.com/v1/predictions/ps4f5zcthdrgm0cfqh586zed7r/cancel"
      },
      "version": "74f12621dc9f9b7cdca50d03941b8ddb3a368d7f5a1bb16fb7e1b87f05d96bf5",
      "webhook": "https://api.svc.internal.us.c.replicate.net/_internal/webhook/version-prediction"
    },
    "description": "Run any ComfyUI workflow. Guide: https://github.com/fofr/cog-comfyui",
    "github_url": "https://github.com/fofr/cog-comfyui",
    "latest_version": {
      "id": "cca7b1d526a916b7a8fa12d9c20839a172254cea34b265871b889e9d84aec9de",
      "created_at": "2024-11-28T16:48:15.147629Z",
      "cog_version": "0.13.0",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/trainings": {
            "post": {
              "summary": "Train",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/TrainingResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "operationId": "train_trainings_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TrainingRequest"
                    }
                  }
                }
              }
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/trainings/{training_id}": {
            "put": {
              "summary": "Train Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/TrainingResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "training_id",
                  "schema": {
                    "type": "string",
                    "title": "Training ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "operationId": "train_idempotent_trainings__training_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/TrainingRequest"
                        }
                      ],
                      "title": "Training Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/trainings/{training_id}/cancel": {
            "post": {
              "summary": "Cancel Training",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Training Trainings  Training Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "training_id",
                  "schema": {
                    "type": "string",
                    "title": "Training ID"
                  },
                  "required": true
                }
              ],
              "operationId": "cancel_training_trainings__training_id__cancel_post"
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "input_file": {
                  "type": "string",
                  "title": "Input File",
                  "format": "uri",
                  "x-order": 1,
                  "description": "Input image, tar or zip file. Read guidance on workflows and input files here: https://github.com/fofr/cog-comfyui. Alternatively, you can replace inputs with URLs in your JSON workflow and the model will download them."
                },
                "output_format": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/output_format"
                    }
                  ],
                  "default": "webp",
                  "x-order": 3,
                  "description": "Format of the output images"
                },
                "workflow_json": {
                  "type": "string",
                  "title": "Workflow Json",
                  "default": "",
                  "x-order": 0,
                  "description": "Your ComfyUI workflow as JSON. You must use the API version of your workflow. Get it from ComfyUI using ‘Save (API format)’. Instructions here: https://github.com/fofr/cog-comfyui"
                },
                "output_quality": {
                  "type": "integer",
                  "title": "Output Quality",
                  "default": 95,
                  "maximum": 100,
                  "minimum": 0,
                  "x-order": 4,
                  "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality."
                },
                "randomise_seeds": {
                  "type": "boolean",
                  "title": "Randomise Seeds",
                  "default": true,
                  "x-order": 5,
                  "description": "Automatically randomise seeds (seed, noise_seed, rand_seed)"
                },
                "force_reset_cache": {
                  "type": "boolean",
                  "title": "Force Reset Cache",
                  "default": false,
                  "x-order": 6,
                  "description": "Force reset the ComfyUI cache before running the workflow. Useful for debugging."
                },
                "return_temp_files": {
                  "type": "boolean",
                  "title": "Return Temp Files",
                  "default": false,
                  "x-order": 2,
                  "description": "Return any temporary files, such as preprocessed controlnet images. Useful for debugging."
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "TrainingInput": {
              "type": "object",
              "title": "TrainingInput",
              "properties": {
                "loras": {
                  "type": "string",
                  "title": "Loras",
                  "x-order": 1,
                  "description": "A list of HuggingFace or CivitAI download URLs (use line breaks to upload multiples)"
                },
                "checkpoints": {
                  "type": "string",
                  "title": "Checkpoints",
                  "x-order": 0,
                  "description": "A list of HuggingFace or CivitAI download URLs (use line breaks to upload multiples)"
                },
                "controlnets": {
                  "type": "string",
                  "title": "Controlnets",
                  "x-order": 4,
                  "description": "A list of HuggingFace or CivitAI download URLs (use line breaks to upload multiples)"
                },
                "upscale_models": {
                  "type": "string",
                  "title": "Upscale Models",
                  "x-order": 2,
                  "description": "A list of HuggingFace or CivitAI download URLs (use line breaks to upload multiples)"
                },
                "embedding_models": {
                  "type": "string",
                  "title": "Embedding Models",
                  "x-order": 3,
                  "description": "A list of HuggingFace or CivitAI download URLs (use line breaks to upload multiples)"
                },
                "animatediff_loras": {
                  "type": "string",
                  "title": "Animatediff Loras",
                  "x-order": 6,
                  "description": "A list of HuggingFace or CivitAI download URLs (use line breaks to upload multiples)"
                },
                "civitai_api_token": {
                  "type": "string",
                  "title": "Civitai Api Token",
                  "format": "password",
                  "x-order": 8,
                  "description": "Optional: Your CivitAI API token. Only needed if you are trying to download CivitAI weights that require authentication. You can create an API key from the bottom of https://civitai.com/user/account",
                  "x-cog-secret": true
                },
                "animatediff_models": {
                  "type": "string",
                  "title": "Animatediff Models",
                  "x-order": 5,
                  "description": "A list of HuggingFace or CivitAI download URLs (use line breaks to upload multiples)"
                },
                "huggingface_read_token": {
                  "type": "string",
                  "title": "Huggingface Read Token",
                  "format": "password",
                  "x-order": 7,
                  "description": "Optional: Your HuggingFace read token. Only needed if you are trying to download HuggingFace weights that require authentication. You can create or get a read token from https://huggingface.co/settings/tokens",
                  "x-cog-secret": true
                }
              }
            },
            "output_format": {
              "enum": [
                "webp",
                "jpg",
                "png"
              ],
              "type": "string",
              "title": "output_format",
              "description": "An enumeration."
            },
            "TrainingOutput": {
              "type": "object",
              "title": "TrainingOutput",
              "required": [
                "weights"
              ],
              "properties": {
                "weights": {
                  "type": "string",
                  "title": "Weights",
                  "format": "uri"
                }
              }
            },
            "TrainingRequest": {
              "type": "object",
              "title": "TrainingRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/TrainingInput"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "TrainingResponse": {
              "type": "object",
              "title": "TrainingResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/TrainingInput"
                },
                "output": {
                  "$ref": "#/components/schemas/TrainingOutput"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://github.com/fofr/cog-comfyui/blob/main/weights_licenses.md",
    "name": "any-comfyui-workflow",
    "owner": "fofr",
    "paper_url": "https://github.com/fofr/cog-comfyui",
    "run_count": 980270,
    "url": "https://replicate.com/fofr/any-comfyui-workflow",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/oDtYIK2lDoaKMtdE4E5ozQSa61BU3gc4aRvGF3xmFpdwCxbE/out-0.png",
    "created_at": "2023-10-17T09:48:34.761187Z",
    "default_example": {
      "completed_at": "2023-10-17T13:48:50.759475Z",
      "created_at": "2023-10-17T13:48:30.378425Z",
      "data_removed": false,
      "error": null,
      "id": "ruzsnmtb7idrwecy2ue5ig6gli",
      "input": {
        "seed": null,
        "image": "https://replicate.delivery/pbxt/JiOTMCHj4oGrTTf8Pg2r7vyI8YdXc5jL2IDyC2SfhuggjYe6/out-0%20(1).png",
        "prompt": "shot in the style of sksfer, a woman in alaska",
        "refine": "base_image_refiner",
        "scheduler": "K_EULER",
        "lora_scale": 0.95,
        "num_outputs": 1,
        "lora_weights": "https://pbxt.replicate.delivery/mwN3AFyYZyouOB03Uhw8ubKW9rpqMgdtL9zYV9GF2WGDiwbE/trained_model.tar",
        "refine_steps": 20,
        "guidance_scale": 7.5,
        "apply_watermark": true,
        "condition_scale": 0.5,
        "negative_prompt": "",
        "num_inference_steps": 40
      },
      "logs": "Using seed: 44186\nloading custom weights\nweights already in cache\nLoading fine-tuned model\nDoes not have Unet. assume we are using LoRA\nLoading Unet LoRA\nPrompt: shot in the style of <s0><s1>, a woman in alaska\nOriginal width:1024, height:1024\nAspect Ratio: 1.00\nnew_width:1024, new_height:1024\ntxt2img mode\n  0%|          | 0/40 [00:00<?, ?it/s]\n  2%|▎         | 1/40 [00:00<00:14,  2.72it/s]\n  5%|▌         | 2/40 [00:00<00:13,  2.73it/s]\n  8%|▊         | 3/40 [00:01<00:13,  2.73it/s]\n 10%|█         | 4/40 [00:01<00:13,  2.73it/s]\n 12%|█▎        | 5/40 [00:01<00:12,  2.73it/s]\n 15%|█▌        | 6/40 [00:02<00:12,  2.73it/s]\n 18%|█▊        | 7/40 [00:02<00:12,  2.73it/s]\n 20%|██        | 8/40 [00:02<00:11,  2.73it/s]\n 22%|██▎       | 9/40 [00:03<00:11,  2.73it/s]\n 25%|██▌       | 10/40 [00:03<00:11,  2.72it/s]\n 28%|██▊       | 11/40 [00:04<00:10,  2.72it/s]\n 30%|███       | 12/40 [00:04<00:10,  2.72it/s]\n 32%|███▎      | 13/40 [00:04<00:09,  2.72it/s]\n 35%|███▌      | 14/40 [00:05<00:09,  2.72it/s]\n 38%|███▊      | 15/40 [00:05<00:09,  2.72it/s]\n 40%|████      | 16/40 [00:05<00:08,  2.72it/s]\n 42%|████▎     | 17/40 [00:06<00:08,  2.71it/s]\n 45%|████▌     | 18/40 [00:06<00:08,  2.71it/s]\n 48%|████▊     | 19/40 [00:06<00:07,  2.71it/s]\n 50%|█████     | 20/40 [00:07<00:07,  2.71it/s]\n 52%|█████▎    | 21/40 [00:07<00:06,  2.71it/s]\n 55%|█████▌    | 22/40 [00:08<00:06,  2.72it/s]\n 57%|█████▊    | 23/40 [00:08<00:06,  2.71it/s]\n 60%|██████    | 24/40 [00:08<00:05,  2.71it/s]\n 62%|██████▎   | 25/40 [00:09<00:05,  2.71it/s]\n 65%|██████▌   | 26/40 [00:09<00:05,  2.71it/s]\n 68%|██████▊   | 27/40 [00:09<00:04,  2.71it/s]\n 70%|███████   | 28/40 [00:10<00:04,  2.72it/s]\n 72%|███████▎  | 29/40 [00:10<00:04,  2.71it/s]\n 75%|███████▌  | 30/40 [00:11<00:03,  2.71it/s]\n 78%|███████▊  | 31/40 [00:11<00:03,  2.71it/s]\n 80%|████████  | 32/40 [00:11<00:02,  2.71it/s]\n 82%|████████▎ | 33/40 [00:12<00:02,  2.71it/s]\n 85%|████████▌ | 34/40 [00:12<00:02,  2.71it/s]\n 88%|████████▊ | 35/40 [00:12<00:01,  2.71it/s]\n 90%|█████████ | 36/40 [00:13<00:01,  2.71it/s]\n 92%|█████████▎| 37/40 [00:13<00:01,  2.71it/s]\n 95%|█████████▌| 38/40 [00:13<00:00,  2.71it/s]\n 98%|█████████▊| 39/40 [00:14<00:00,  2.71it/s]\n100%|██████████| 40/40 [00:14<00:00,  2.71it/s]\n100%|██████████| 40/40 [00:14<00:00,  2.72it/s]\n  0%|          | 0/6 [00:00<?, ?it/s]\n 17%|█▋        | 1/6 [00:00<00:01,  4.32it/s]\n 33%|███▎      | 2/6 [00:00<00:00,  4.30it/s]\n 50%|█████     | 3/6 [00:00<00:00,  4.30it/s]\n 67%|██████▋   | 4/6 [00:00<00:00,  4.28it/s]\n 83%|████████▎ | 5/6 [00:01<00:00,  4.28it/s]\n100%|██████████| 6/6 [00:01<00:00,  4.28it/s]\n100%|██████████| 6/6 [00:01<00:00,  4.29it/s]",
      "metrics": {
        "predict_time": 20.411215,
        "total_time": 20.38105
      },
      "model": "batouresearch/sdxl-controlnet-lora",
      "output": [
        "https://replicate.delivery/pbxt/oDtYIK2lDoaKMtdE4E5ozQSa61BU3gc4aRvGF3xmFpdwCxbE/out-0.png"
      ],
      "started_at": "2023-10-17T13:48:30.348260Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/ruzsnmtb7idrwecy2ue5ig6gli",
        "cancel": "https://api.replicate.com/v1/predictions/ruzsnmtb7idrwecy2ue5ig6gli/cancel"
      },
      "version": "a4fb84022361602a2401d74435229e90da63ea4a2aab40ebf79afd7af5a081d4",
      "webhook": null
    },
    "description": "'''Last update: Now supports img2img.''' SDXL Canny controlnet with LoRA support.",
    "github_url": "https://github.com/BatouResearch/Cog-SDXL-ControlNet-LoRA",
    "latest_version": {
      "id": "3bb13fe1c33c35987b33792b01b71ed6529d03f165d1c2416375859f09ca9fef",
      "created_at": "2024-01-31T10:49:23.008978Z",
      "cog_version": "0.8.6",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 10,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 1,
                  "description": "Input image for img2img or inpaint mode"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "An astronaut riding a rainbow unicorn",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "refine": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/refine"
                    }
                  ],
                  "default": "base_image_refiner",
                  "x-order": 11,
                  "description": "Whether to use refinement steps or not"
                },
                "img2img": {
                  "type": "boolean",
                  "title": "Img2Img",
                  "x-order": 2,
                  "description": "Use img2img pipeline, it will use the image input both as the control image and the base image."
                },
                "strength": {
                  "type": "number",
                  "title": "Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 4,
                  "description": "When img2img is active, the denoising strength. 1 means total destruction of the input image."
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "K_EULER",
                  "x-order": 8,
                  "description": "scheduler"
                },
                "lora_scale": {
                  "type": "number",
                  "title": "Lora Scale",
                  "default": 0.95,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 14,
                  "description": "LoRA additive scale. Only applicable on trained models."
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 7,
                  "description": "Number of images to output"
                },
                "lora_weights": {
                  "type": "string",
                  "title": "Lora Weights",
                  "x-order": 15,
                  "description": "Replicate LoRA weights to use. Leave blank to use the default weights."
                },
                "refine_steps": {
                  "type": "integer",
                  "title": "Refine Steps",
                  "default": 10,
                  "x-order": 12,
                  "description": "For base_image_refiner, the number of steps to refine"
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 7.5,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 9,
                  "description": "Scale for classifier-free guidance"
                },
                "apply_watermark": {
                  "type": "boolean",
                  "title": "Apply Watermark",
                  "default": true,
                  "x-order": 13,
                  "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
                },
                "condition_scale": {
                  "type": "number",
                  "title": "Condition Scale",
                  "default": 1.1,
                  "maximum": 2,
                  "minimum": 0,
                  "x-order": 3,
                  "description": "The bigger this number is, the more ControlNet interferes"
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "",
                  "x-order": 5,
                  "description": "Input Negative Prompt"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 30,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of denoising steps"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "refine": {
              "enum": [
                "no_refiner",
                "base_image_refiner"
              ],
              "type": "string",
              "title": "refine",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": null,
    "name": "sdxl-controlnet-lora",
    "owner": "batouresearch",
    "paper_url": null,
    "run_count": 751450,
    "url": "https://replicate.com/batouresearch/sdxl-controlnet-lora",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/fb7cf2ea-aacd-458d-9d19-76dda21f9748/sticker-maker.webp",
    "created_at": "2024-02-23T11:59:22.452180Z",
    "default_example": {
      "completed_at": "2024-11-28T11:14:33.380853Z",
      "created_at": "2024-11-28T11:14:28.750000Z",
      "data_removed": false,
      "error": null,
      "id": "emmfw2e51srma0cke9x8a31zxm",
      "input": {
        "steps": 17,
        "width": 1152,
        "height": 1152,
        "prompt": "a cute cat",
        "output_format": "webp",
        "output_quality": 100,
        "negative_prompt": "",
        "number_of_images": 1
      },
      "logs": "Random seed set to: 4001634075\nChecking inputs\n====================================\nChecking weights\n✅ albedobaseXL_v13.safetensors\n✅ layer_xl_transparent_attn.safetensors\n✅ artificialguybr/StickersRedmond.safetensors\n✅ vae_transparent_decoder.safetensors\n====================================\nRunning workflow\ngot prompt\nRequested to load SDXLClipModel\nLoading 1 new model\nExecuting node 6, title: CLIP Text Encode (Prompt), class type: CLIPTextEncode\nExecuting node 5, title: Empty Latent Image, class type: EmptyLatentImage\nExecuting node 3, title: KSampler, class type: KSampler\n  0%|          | 0/17 [00:00<?, ?it/s]\n  6%|▌         | 1/17 [00:00<00:02,  6.59it/s]\n 12%|█▏        | 2/17 [00:00<00:02,  6.81it/s]\n 18%|█▊        | 3/17 [00:00<00:02,  6.89it/s]\n 24%|██▎       | 4/17 [00:00<00:01,  6.93it/s]\n 29%|██▉       | 5/17 [00:00<00:01,  6.93it/s]\n 35%|███▌      | 6/17 [00:00<00:01,  6.95it/s]\n 41%|████      | 7/17 [00:01<00:01,  6.96it/s]\n 47%|████▋     | 8/17 [00:01<00:01,  6.97it/s]\n 53%|█████▎    | 9/17 [00:01<00:01,  6.97it/s]\n 59%|█████▉    | 10/17 [00:01<00:01,  6.97it/s]\n 65%|██████▍   | 11/17 [00:01<00:00,  6.98it/s]\n 71%|███████   | 12/17 [00:01<00:00,  6.99it/s]\n 76%|███████▋  | 13/17 [00:01<00:00,  6.99it/s]\n 82%|████████▏ | 14/17 [00:02<00:00,  6.99it/s]\n 88%|████████▊ | 15/17 [00:02<00:00,  7.00it/s]\n 94%|█████████▍| 16/17 [00:02<00:00,  7.03it/s]\n100%|██████████| 17/17 [00:02<00:00,  7.04it/s]\n100%|██████████| 17/17 [00:02<00:00,  6.97it/s]\nExecuting node 14, title: VAE Decode, class type: VAEDecode\nExecuting node 20, title: Preview Image, class type: PreviewImage\nExecuting node 36, title: Layer Diffuse Decode (RGBA), class type: LayeredDiffusionDecodeRGBA\n  0%|          | 0/8 [00:00<?, ?it/s]\n 12%|█▎        | 1/8 [00:00<00:01,  6.03it/s]\n 38%|███▊      | 3/8 [00:00<00:00,  7.85it/s]\n 50%|█████     | 4/8 [00:00<00:00,  7.69it/s]\n 62%|██████▎   | 5/8 [00:00<00:00,  7.60it/s]\n 75%|███████▌  | 6/8 [00:00<00:00,  7.54it/s]\n 88%|████████▊ | 7/8 [00:00<00:00,  7.50it/s]\n100%|██████████| 8/8 [00:01<00:00,  7.48it/s]\n100%|██████████| 8/8 [00:01<00:00,  7.49it/s]\nExecuting node 48, title: Save Image, class type: SaveImage\nPrompt executed in 4.10 seconds\noutputs:  {'20': {'images': [{'filename': 'ComfyUI_temp_kmlpk_00001_.png', 'subfolder': '', 'type': 'temp'}]}, '48': {'images': [{'filename': 'ComfyUI_00001_.png', 'subfolder': '', 'type': 'output'}]}}\n====================================\nComfyUI_00001_.png",
      "metrics": {
        "predict_time": 4.622765286,
        "total_time": 4.630853
      },
      "model": "fofr/sticker-maker",
      "output": [
        "https://replicate.delivery/xezq/ed6kMmOhNz2YfEaGJwmUeSAmzKDFeCPQP8buewJzffMrMFw6JA/ComfyUI_00001_.webp"
      ],
      "started_at": "2024-11-28T11:14:28.758087Z",
      "status": "succeeded",
      "urls": {
        "stream": "https://stream.replicate.com/v1/files/bcwr-or2ov7sc7dnal2sp3p53rrtqxnwc2yehb6v2b6zrxtzy6igu3w4q",
        "get": "https://api.replicate.com/v1/predictions/emmfw2e51srma0cke9x8a31zxm",
        "cancel": "https://api.replicate.com/v1/predictions/emmfw2e51srma0cke9x8a31zxm/cancel"
      },
      "version": "4acb778eb059772225ec213948f0660867b2e03f277448f18cf1800b96a65a1a",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/version-prediction"
    },
    "description": "Make stickers with AI. Generates graphics with transparent backgrounds.",
    "github_url": "https://github.com/fofr/cog-stickers",
    "latest_version": {
      "id": "4acb778eb059772225ec213948f0660867b2e03f277448f18cf1800b96a65a1a",
      "created_at": "2024-04-23T10:12:18.597822Z",
      "cog_version": "0.9.5",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 8,
                  "description": "Fix the random seed for reproducibility"
                },
                "steps": {
                  "type": "integer",
                  "title": "Steps",
                  "default": 17,
                  "x-order": 4
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 1152,
                  "x-order": 2
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 1152,
                  "x-order": 3
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "a cute cat",
                  "x-order": 0
                },
                "output_format": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/output_format"
                    }
                  ],
                  "default": "webp",
                  "x-order": 6,
                  "description": "Format of the output images"
                },
                "output_quality": {
                  "type": "integer",
                  "title": "Output Quality",
                  "default": 90,
                  "maximum": 100,
                  "minimum": 0,
                  "x-order": 7,
                  "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality."
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "",
                  "x-order": 1,
                  "description": "Things you do not want in the image"
                },
                "number_of_images": {
                  "type": "integer",
                  "title": "Number Of Images",
                  "default": 1,
                  "maximum": 10,
                  "minimum": 1,
                  "x-order": 5,
                  "description": "Number of images to generate"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "output_format": {
              "enum": [
                "webp",
                "jpg",
                "png"
              ],
              "type": "string",
              "title": "output_format",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://github.com/fofr/cog-stickers/blob/main/LICENSE",
    "name": "sticker-maker",
    "owner": "fofr",
    "paper_url": null,
    "run_count": 571599,
    "url": "https://replicate.com/fofr/sticker-maker",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/afce5fa4-5f8a-45db-95c0-bf62ec6958e7/output-59.webp",
    "created_at": "2024-10-30T12:41:06.099624Z",
    "default_example": {
      "completed_at": "2024-10-30T19:16:16.959910Z",
      "created_at": "2024-10-30T19:16:08.128000Z",
      "data_removed": false,
      "error": null,
      "id": "0j1q9mjh81rga0cjvvdv5b3jdr",
      "input": {
        "size": "1365x1024",
        "style": "any",
        "prompt": "a wildlife photography photo of a red panda using a laptop in a snowy forest"
      },
      "logs": "Running prediction... \nStarting image generation...\nGenerated image in 8.53sec",
      "metrics": {
        "image_count": 1,
        "predict_time": 8.824670026,
        "total_time": 8.83191
      },
      "model": "recraft-ai/recraft-v3",
      "output": "https://replicate.delivery/czjl/eTxDZunLeFulD0734CMCIuhP6llmZbgtbxfjzyfi4hxAAOwOB/output.webp",
      "started_at": "2024-10-30T19:16:08.135240Z",
      "status": "succeeded",
      "urls": {
        "stream": "https://stream.replicate.com/v1/files/fddq-7326dxea6ozw4hqyed6qj6xjgzl3jfvkfswh4a3otrx3h5f2wrgq",
        "get": "https://api.replicate.com/v1/predictions/0j1q9mjh81rga0cjvvdv5b3jdr",
        "cancel": "https://api.replicate.com/v1/predictions/0j1q9mjh81rga0cjvvdv5b3jdr/cancel"
      },
      "version": "d2e1f655ab989457e73fdeaddc34e3bd8fee79c318aba6ed312571442a7da78c",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/official-model-prediction"
    },
    "description": "Recraft V3 (code-named red_panda) is a text-to-image model with the ability to generate long texts, and images in a wide list of styles. As of today, it is SOTA in image generation, proven by the Text-to-Image Benchmark by Artificial Analysis",
    "github_url": null,
    "latest_version": {
      "id": "e06217725b21e2c059a09b3f44b4aef56574173aee9976c9726bdc0f474d7f46",
      "created_at": "2024-11-04T13:41:30.416489Z",
      "cog_version": "0.10.0-alpha25",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/ready": {
            "get": {
              "summary": "Ready",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Ready Ready Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "ready_ready_get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "size": {
              "enum": [
                "1024x1024",
                "1365x1024",
                "1024x1365",
                "1536x1024",
                "1024x1536",
                "1820x1024",
                "1024x1820",
                "1024x2048",
                "2048x1024",
                "1434x1024",
                "1024x1434",
                "1024x1280",
                "1280x1024",
                "1024x1707",
                "1707x1024"
              ],
              "type": "string",
              "title": "size",
              "description": "An enumeration."
            },
            "Input": {
              "type": "object",
              "title": "Input",
              "required": [
                "prompt"
              ],
              "properties": {
                "size": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/size"
                    }
                  ],
                  "default": "1024x1024",
                  "x-order": 1,
                  "description": "Width and height of the generated image"
                },
                "style": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/style"
                    }
                  ],
                  "default": "any",
                  "x-order": 2,
                  "description": "Style of the generated image."
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "x-order": 0,
                  "description": "Text prompt for image generation"
                }
              }
            },
            "style": {
              "enum": [
                "any",
                "realistic_image",
                "digital_illustration",
                "digital_illustration/pixel_art",
                "digital_illustration/hand_drawn",
                "digital_illustration/grain",
                "digital_illustration/infantile_sketch",
                "digital_illustration/2d_art_poster",
                "digital_illustration/handmade_3d",
                "digital_illustration/hand_drawn_outline",
                "digital_illustration/engraving_color",
                "digital_illustration/2d_art_poster_2",
                "realistic_image/b_and_w",
                "realistic_image/hard_flash",
                "realistic_image/hdr",
                "realistic_image/natural_light",
                "realistic_image/studio_portrait",
                "realistic_image/enterprise",
                "realistic_image/motion_blur"
              ],
              "type": "string",
              "title": "style",
              "description": "An enumeration."
            },
            "Output": {
              "type": "string",
              "title": "Output",
              "format": "uri"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://www.recraft.ai/terms",
    "name": "recraft-v3",
    "owner": "recraft-ai",
    "paper_url": "https://recraft.ai",
    "run_count": 372208,
    "url": "https://replicate.com/recraft-ai/recraft-v3",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/ILTzFdAenk1JLKVb7jZbEDUOUJGz7hSFFSArhCnxin7ICY8IA/out-0.png",
    "created_at": "2023-11-15T22:52:44.885044Z",
    "default_example": {
      "completed_at": "2023-11-15T23:06:59.108210Z",
      "created_at": "2023-11-15T23:06:56.321159Z",
      "data_removed": false,
      "error": null,
      "id": "xbpexxtb6uqgh77hbusyq34tca",
      "input": {
        "seed": 34694,
        "width": 1024,
        "height": 1024,
        "prompt": "dark shot, front shot, photo of a 25 y.o latino man, perfect eyes, natural skin, skin moles, looks at viewer, cinematic shot",
        "scheduler": "LCM",
        "num_outputs": 1,
        "guidance_scale": 2,
        "apply_watermark": true,
        "negative_prompt": "(worst quality, low quality, illustration, 3d, 2d, painting, cartoons, sketch), open mouth",
        "prompt_strength": 0.8,
        "num_inference_steps": 6
      },
      "logs": "Using seed: 34694\nPrompt: dark shot, front shot, photo of a 25 y.o latino man, perfect eyes, natural skin, skin moles, looks at viewer, cinematic shot\ntxt2img mode\nThe config attributes {'skip_prk_steps': True} were passed to LCMScheduler, but are not expected and will be ignored. Please verify your scheduler_config.json configuration file.\n  0%|          | 0/6 [00:00<?, ?it/s]\n 17%|█▋        | 1/6 [00:00<00:00,  8.94it/s]\n 33%|███▎      | 2/6 [00:00<00:00,  8.86it/s]\n 50%|█████     | 3/6 [00:00<00:00,  8.87it/s]\n 67%|██████▋   | 4/6 [00:00<00:00,  8.86it/s]\n 83%|████████▎ | 5/6 [00:00<00:00,  8.84it/s]\n100%|██████████| 6/6 [00:00<00:00,  8.82it/s]\n100%|██████████| 6/6 [00:00<00:00,  8.84it/s]",
      "metrics": {
        "predict_time": 2.750163,
        "total_time": 2.787051
      },
      "model": "lucataco/realvisxl2-lcm",
      "output": [
        "https://replicate.delivery/pbxt/ILTzFdAenk1JLKVb7jZbEDUOUJGz7hSFFSArhCnxin7ICY8IA/out-0.png"
      ],
      "started_at": "2023-11-15T23:06:56.358047Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/xbpexxtb6uqgh77hbusyq34tca",
        "cancel": "https://api.replicate.com/v1/predictions/xbpexxtb6uqgh77hbusyq34tca/cancel"
      },
      "version": "479633443fc6588e1e8ae764b79cdb3702d0c196e0cb2de6db39ce577383be77",
      "webhook": null
    },
    "description": "RealvisXL-v2.0 with LCM LoRA - requires fewer steps (4 to 8 instead of the original 40 to 50)",
    "github_url": "https://github.com/lucataco/cog-realvisxl2-lcm",
    "latest_version": {
      "id": "479633443fc6588e1e8ae764b79cdb3702d0c196e0cb2de6db39ce577383be77",
      "created_at": "2023-11-15T23:04:14.296535Z",
      "cog_version": "0.8.6",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 11,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 2,
                  "description": "Input image for img2img or inpaint mode"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 1024,
                  "x-order": 4,
                  "description": "Width of output image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 1024,
                  "x-order": 5,
                  "description": "Height of output image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "dark shot, front shot, closeup photo of a 25 y.o latino man, perfect eyes, natural skin, skin moles, looks at viewer, cinematic shot",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "LCM",
                  "x-order": 7,
                  "description": "scheduler"
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of images to output."
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 2,
                  "maximum": 20,
                  "minimum": 1,
                  "x-order": 9,
                  "description": "Scale for classifier-free guidance"
                },
                "apply_watermark": {
                  "type": "boolean",
                  "title": "Apply Watermark",
                  "default": true,
                  "x-order": 12,
                  "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "(worst quality, low quality, illustration, 3d, 2d, painting, cartoons, sketch), open mouth",
                  "x-order": 1,
                  "description": "Negative Input prompt"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 10,
                  "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 6,
                  "maximum": 20,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Number of denoising steps"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 13,
                  "description": "Disable safety checker for generated images. This feature is only available through the API. See https://replicate.com/docs/how-does-replicate-work#safety"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM",
                "LCM"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/models?license=license%3Aopenrail%2B%2B",
    "name": "realvisxl2-lcm",
    "owner": "lucataco",
    "paper_url": null,
    "run_count": 290282,
    "url": "https://replicate.com/lucataco/realvisxl2-lcm",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/eCTbwmWQ00UbQiZdRMfgLhTRIKFUkBPei9fOQ2taGKw3NpaHB/out-0.png",
    "created_at": "2023-11-01T15:03:35.114225Z",
    "default_example": {
      "completed_at": "2023-11-09T14:55:25.568927Z",
      "created_at": "2023-11-09T14:54:00.812301Z",
      "data_removed": false,
      "error": null,
      "id": "lof36hlbixwbzssmddjlk2vone",
      "input": {
        "seed": 1111316861,
        "width": 1024,
        "height": 1024,
        "prompt": "dark shot, front shot, closeup photo of a 25 y.o latino man, perfect eyes, natural skin, skin moles, looks at viewer, cinematic shot",
        "scheduler": "DPMSolverMultistep",
        "lora_scale": 0.6,
        "num_outputs": 1,
        "guidance_scale": 7,
        "apply_watermark": true,
        "negative_prompt": "(worst quality, low quality, illustration, 3d, 2d, painting, cartoons, sketch), open mouth",
        "prompt_strength": 0.8,
        "num_inference_steps": 40
      },
      "logs": "Using seed: 1111316861\nPrompt: dark shot, front shot, closeup photo of a 25 y.o latino man, perfect eyes, natural skin, skin moles, looks at viewer, cinematic shot\ntxt2img mode\n  0%|          | 0/40 [00:00<?, ?it/s]\n  2%|▎         | 1/40 [00:00<00:30,  1.29it/s]\n  5%|▌         | 2/40 [00:00<00:16,  2.29it/s]\n  8%|▊         | 3/40 [00:01<00:12,  3.04it/s]\n 10%|█         | 4/40 [00:01<00:10,  3.60it/s]\n 12%|█▎        | 5/40 [00:01<00:08,  3.98it/s]\n 15%|█▌        | 6/40 [00:01<00:07,  4.27it/s]\n 18%|█▊        | 7/40 [00:01<00:07,  4.48it/s]\n 20%|██        | 8/40 [00:02<00:06,  4.62it/s]\n 22%|██▎       | 9/40 [00:02<00:06,  4.73it/s]\n 25%|██▌       | 10/40 [00:02<00:06,  4.79it/s]\n 28%|██▊       | 11/40 [00:02<00:05,  4.83it/s]\n 30%|███       | 12/40 [00:02<00:05,  4.87it/s]\n 32%|███▎      | 13/40 [00:03<00:05,  4.89it/s]\n 35%|███▌      | 14/40 [00:03<00:05,  4.91it/s]\n 38%|███▊      | 15/40 [00:03<00:05,  4.92it/s]\n 40%|████      | 16/40 [00:03<00:04,  4.93it/s]\n 42%|████▎     | 17/40 [00:04<00:04,  4.93it/s]\n 45%|████▌     | 18/40 [00:04<00:04,  4.93it/s]\n 48%|████▊     | 19/40 [00:04<00:04,  4.93it/s]\n 50%|█████     | 20/40 [00:04<00:04,  4.94it/s]\n 52%|█████▎    | 21/40 [00:04<00:03,  4.94it/s]\n 55%|█████▌    | 22/40 [00:05<00:03,  4.94it/s]\n 57%|█████▊    | 23/40 [00:05<00:03,  4.93it/s]\n 60%|██████    | 24/40 [00:05<00:03,  4.94it/s]\n 62%|██████▎   | 25/40 [00:05<00:03,  4.94it/s]\n 65%|██████▌   | 26/40 [00:05<00:02,  4.93it/s]\n 68%|██████▊   | 27/40 [00:06<00:02,  4.93it/s]\n 70%|███████   | 28/40 [00:06<00:02,  4.93it/s]\n 72%|███████▎  | 29/40 [00:06<00:02,  4.93it/s]\n 75%|███████▌  | 30/40 [00:06<00:02,  4.93it/s]\n 78%|███████▊  | 31/40 [00:06<00:01,  4.93it/s]\n 80%|████████  | 32/40 [00:07<00:01,  4.93it/s]\n 82%|████████▎ | 33/40 [00:07<00:01,  4.92it/s]\n 85%|████████▌ | 34/40 [00:07<00:01,  4.92it/s]\n 88%|████████▊ | 35/40 [00:07<00:01,  4.92it/s]\n 90%|█████████ | 36/40 [00:07<00:00,  4.92it/s]\n 92%|█████████▎| 37/40 [00:08<00:00,  4.92it/s]\n 95%|█████████▌| 38/40 [00:08<00:00,  4.93it/s]\n 98%|█████████▊| 39/40 [00:08<00:00,  4.92it/s]\n100%|██████████| 40/40 [00:08<00:00,  4.93it/s]\n100%|██████████| 40/40 [00:08<00:00,  4.61it/s]",
      "metrics": {
        "predict_time": 10.659223,
        "total_time": 84.756626
      },
      "model": "lucataco/realvisxl-v2.0",
      "output": [
        "https://replicate.delivery/pbxt/eCTbwmWQ00UbQiZdRMfgLhTRIKFUkBPei9fOQ2taGKw3NpaHB/out-0.png"
      ],
      "started_at": "2023-11-09T14:55:14.909704Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/lof36hlbixwbzssmddjlk2vone",
        "cancel": "https://api.replicate.com/v1/predictions/lof36hlbixwbzssmddjlk2vone/cancel"
      },
      "version": "7d6a2f9c4754477b12c14ed2a58f89bb85128edcdd581d24ce58b6926029de08",
      "webhook": null
    },
    "description": "Implementation of SDXL RealVisXL_V2.0",
    "github_url": "https://github.com/lucataco/cog-realvisxl-v2.0",
    "latest_version": {
      "id": "7d6a2f9c4754477b12c14ed2a58f89bb85128edcdd581d24ce58b6926029de08",
      "created_at": "2023-11-09T14:53:33.576412Z",
      "cog_version": "0.8.5",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 11,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 2,
                  "description": "Input image for img2img or inpaint mode"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 1024,
                  "x-order": 4,
                  "description": "Width of output image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 1024,
                  "x-order": 5,
                  "description": "Height of output image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "dark shot, front shot, closeup photo of a 25 y.o latino man, perfect eyes, natural skin, skin moles, looks at viewer, cinematic shot",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "DPMSolverMultistep",
                  "x-order": 7,
                  "description": "scheduler"
                },
                "lora_scale": {
                  "type": "number",
                  "title": "Lora Scale",
                  "default": 0.6,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 13,
                  "description": "LoRA additive scale. Only applicable on trained models."
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of images to output."
                },
                "lora_weights": {
                  "type": "string",
                  "title": "Lora Weights",
                  "x-order": 14,
                  "description": "Replicate LoRA weights to use. Leave blank to use the default weights."
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 7,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 9,
                  "description": "Scale for classifier-free guidance"
                },
                "apply_watermark": {
                  "type": "boolean",
                  "title": "Apply Watermark",
                  "default": true,
                  "x-order": 12,
                  "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "(worst quality, low quality, illustration, 3d, 2d, painting, cartoons, sketch), open mouth",
                  "x-order": 1,
                  "description": "Negative Input prompt"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 10,
                  "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 40,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Number of denoising steps"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 15,
                  "description": "Disable safety checker for generated images. This feature is only available through the API. See https://replicate.com/docs/how-does-replicate-work#safety"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "completed",
                    "output",
                    "start",
                    "logs"
                  ],
                  "uniqueItems": true
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/models?license=license%3Aopenrail%2B%2B",
    "name": "realvisxl-v2.0",
    "owner": "lucataco",
    "paper_url": null,
    "run_count": 280489,
    "url": "https://replicate.com/lucataco/realvisxl-v2.0",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/GR5kmreA4fjf9JZIFh0GhIoEGEnJj6SmwYTszYVezXWm7EpHB/out-0.png",
    "created_at": "2023-10-21T20:43:55.010993Z",
    "default_example": {
      "completed_at": "2023-11-20T13:40:09.613224Z",
      "created_at": "2023-11-20T13:37:39.019445Z",
      "data_removed": false,
      "error": null,
      "id": "qzr4q2tbveegedi7eawwj5u4zm",
      "input": {
        "width": 768,
        "height": 768,
        "prompt": "A TOK photo, extreme macro photo of a golden astronaut riding a unicorn statue, in a museum, bokeh, 50mm",
        "refine": "no_refiner",
        "scheduler": "K_EULER",
        "lora_scale": 0.8,
        "num_outputs": 1,
        "controlnet_1": "soft_edge_hed",
        "controlnet_2": "none",
        "controlnet_3": "none",
        "lora_weights": "https://replicate.delivery/pbxt/hKhpVe6O7EwXNCiWORev3OEDRCoWeMlqZMLQDEvwDyHV3hvjA/trained_model.tar",
        "guidance_scale": 7.5,
        "apply_watermark": false,
        "negative_prompt": "rainbow",
        "prompt_strength": 0.8,
        "sizing_strategy": "width_height",
        "controlnet_1_end": 1,
        "controlnet_2_end": 1,
        "controlnet_3_end": 1,
        "controlnet_1_image": "https://replicate.delivery/pbxt/JsfCQE8k1lsCinW1yo76yKMQe6R5MRt9WLL3H5T5Ypc5wasq/020e656d-0c71-45c3-a7f5-1facf7d52d4f.png",
        "controlnet_1_start": 0,
        "controlnet_2_start": 0,
        "controlnet_3_start": 0,
        "num_inference_steps": 30,
        "controlnet_1_conditioning_scale": 0.8,
        "controlnet_2_conditioning_scale": 0.8,
        "controlnet_3_conditioning_scale": 0.75
      },
      "logs": "Using seed: 22801\nUsing given dimensions\nEnsuring enough disk space...\nFree disk space: 1784535842816\nDownloading weights: https://replicate.delivery/pbxt/hKhpVe6O7EwXNCiWORev3OEDRCoWeMlqZMLQDEvwDyHV3hvjA/trained_model.tar\nb'Downloaded 186 MB bytes in 0.786s (237 MB/s)\\nExtracted 186 MB in 0.070s (2.6 GB/s)\\n'\nDownloaded weights in 1.5510847568511963 seconds\nLoading fine-tuned model\nDoes not have Unet. assume we are using LoRA\nLoading Unet LoRA\nPrompt: A <s0><s1> photo, extreme macro photo of a golden astronaut riding a unicorn statue, in a museum, bokeh, 50mm\nProcessing image with soft_edge_hed\nLoading pipeline components...:   0%|          | 0/7 [00:00<?, ?it/s]\nLoading pipeline components...: 100%|██████████| 7/7 [00:00<00:00, 13617.87it/s]\nYou have 1 ControlNets and you have passed 1 prompts. The conditionings will be fixed across the prompts.\n  0%|          | 0/30 [00:00<?, ?it/s]/root/.pyenv/versions/3.9.18/lib/python3.9/site-packages/diffusers/models/attention_processor.py:1468: FutureWarning: `LoRAAttnProcessor2_0` is deprecated and will be removed in version 0.26.0. Make sure use AttnProcessor2_0 instead by settingLoRA layers to `self.{to_q,to_k,to_v,to_out[0]}.lora_layer` respectively. This will be done automatically when using `LoraLoaderMixin.load_lora_weights`\ndeprecate(\n  3%|▎         | 1/30 [00:02<01:20,  2.76s/it]\n  7%|▋         | 2/30 [00:02<00:35,  1.26s/it]\n 10%|█         | 3/30 [00:03<00:21,  1.27it/s]\n 13%|█▎        | 4/30 [00:03<00:14,  1.78it/s]\n 17%|█▋        | 5/30 [00:03<00:10,  2.29it/s]\n 20%|██        | 6/30 [00:03<00:08,  2.76it/s]\n 23%|██▎       | 7/30 [00:04<00:07,  3.18it/s]\n 27%|██▋       | 8/30 [00:04<00:06,  3.53it/s]\n 30%|███       | 9/30 [00:04<00:05,  3.82it/s]\n 33%|███▎      | 10/30 [00:04<00:04,  4.04it/s]\n 37%|███▋      | 11/30 [00:04<00:04,  4.21it/s]\n 40%|████      | 12/30 [00:05<00:04,  4.32it/s]\n 43%|████▎     | 13/30 [00:05<00:03,  4.37it/s]\n 47%|████▋     | 14/30 [00:05<00:03,  4.45it/s]\n 50%|█████     | 15/30 [00:05<00:03,  4.51it/s]\n 53%|█████▎    | 16/30 [00:06<00:03,  4.51it/s]\n 57%|█████▋    | 17/30 [00:06<00:02,  4.56it/s]\n 60%|██████    | 18/30 [00:06<00:02,  4.58it/s]\n 63%|██████▎   | 19/30 [00:06<00:02,  4.60it/s]\n 67%|██████▋   | 20/30 [00:06<00:02,  4.62it/s]\n 70%|███████   | 21/30 [00:07<00:01,  4.63it/s]\n 73%|███████▎  | 22/30 [00:07<00:01,  4.64it/s]\n 77%|███████▋  | 23/30 [00:07<00:01,  4.64it/s]\n 80%|████████  | 24/30 [00:07<00:01,  4.64it/s]\n 83%|████████▎ | 25/30 [00:07<00:01,  4.65it/s]\n 87%|████████▋ | 26/30 [00:08<00:00,  4.65it/s]\n 90%|█████████ | 27/30 [00:08<00:00,  4.65it/s]\n 93%|█████████▎| 28/30 [00:08<00:00,  4.65it/s]\n 97%|█████████▋| 29/30 [00:08<00:00,  4.65it/s]\n100%|██████████| 30/30 [00:09<00:00,  4.65it/s]\n100%|██████████| 30/30 [00:09<00:00,  3.32it/s]",
      "metrics": {
        "predict_time": 16.948953,
        "total_time": 150.593779
      },
      "model": "fofr/sdxl-multi-controlnet-lora",
      "output": [
        "https://replicate.delivery/pbxt/8486bdfefoHlkpbI4m98dnsm2azyIgIB8MVq3ilVpBgwdi0jA/control-0.png",
        "https://replicate.delivery/pbxt/GR5kmreA4fjf9JZIFh0GhIoEGEnJj6SmwYTszYVezXWm7EpHB/out-0.png"
      ],
      "started_at": "2023-11-20T13:39:52.664271Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/qzr4q2tbveegedi7eawwj5u4zm",
        "cancel": "https://api.replicate.com/v1/predictions/qzr4q2tbveegedi7eawwj5u4zm/cancel"
      },
      "version": "4af60df9514adb91683d0bd7a6980dee8c4d74e3a0c1896eeade402ce2ad9278",
      "webhook": null
    },
    "description": "Multi-controlnet, lora loading, img2img, inpainting",
    "github_url": "https://github.com/fofr/cog-sdxl-multicontrolnet-lora",
    "latest_version": {
      "id": "89eb212b3d1366a83e949c12a4b45dfe6b6b313b594cb8268e864931ac9ffb16",
      "created_at": "2023-12-22T14:36:12.473762Z",
      "cog_version": "0.8.6",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 12,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 2,
                  "description": "Input image for img2img or inpaint mode"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 768,
                  "x-order": 4,
                  "description": "Width of output image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 768,
                  "x-order": 5,
                  "description": "Height of output image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "An astronaut riding a rainbow unicorn",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "refine": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/refine"
                    }
                  ],
                  "default": "no_refiner",
                  "x-order": 13,
                  "description": "Which refine style to use"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "K_EULER",
                  "x-order": 8,
                  "description": "scheduler"
                },
                "lora_scale": {
                  "type": "number",
                  "title": "Lora Scale",
                  "default": 0.6,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 16,
                  "description": "LoRA additive scale. Only applicable on trained models."
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 7,
                  "description": "Number of images to output"
                },
                "controlnet_1": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/controlnet_1"
                    }
                  ],
                  "default": "none",
                  "x-order": 19,
                  "description": "Controlnet"
                },
                "controlnet_2": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/controlnet_2"
                    }
                  ],
                  "default": "none",
                  "x-order": 24,
                  "description": "Controlnet"
                },
                "controlnet_3": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/controlnet_3"
                    }
                  ],
                  "default": "none",
                  "x-order": 29,
                  "description": "Controlnet"
                },
                "lora_weights": {
                  "type": "string",
                  "title": "Lora Weights",
                  "x-order": 17,
                  "description": "Replicate LoRA weights to use. Leave blank to use the default weights."
                },
                "refine_steps": {
                  "type": "integer",
                  "title": "Refine Steps",
                  "x-order": 14,
                  "description": "For base_image_refiner, the number of steps to refine, defaults to num_inference_steps"
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 7.5,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 10,
                  "description": "Scale for classifier-free guidance"
                },
                "apply_watermark": {
                  "type": "boolean",
                  "title": "Apply Watermark",
                  "default": true,
                  "x-order": 15,
                  "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "",
                  "x-order": 1,
                  "description": "Negative Prompt"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 11,
                  "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image"
                },
                "sizing_strategy": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/sizing_strategy"
                    }
                  ],
                  "default": "width_height",
                  "x-order": 6,
                  "description": "Decide how to resize images – use width/height, resize based on input image or control image"
                },
                "controlnet_1_end": {
                  "type": "number",
                  "title": "Controlnet 1 End",
                  "default": 1,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 23,
                  "description": "When controlnet conditioning ends"
                },
                "controlnet_2_end": {
                  "type": "number",
                  "title": "Controlnet 2 End",
                  "default": 1,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 28,
                  "description": "When controlnet conditioning ends"
                },
                "controlnet_3_end": {
                  "type": "number",
                  "title": "Controlnet 3 End",
                  "default": 1,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 33,
                  "description": "When controlnet conditioning ends"
                },
                "controlnet_1_image": {
                  "type": "string",
                  "title": "Controlnet 1 Image",
                  "format": "uri",
                  "x-order": 20,
                  "description": "Input image for first controlnet"
                },
                "controlnet_1_start": {
                  "type": "number",
                  "title": "Controlnet 1 Start",
                  "default": 0,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 22,
                  "description": "When controlnet conditioning starts"
                },
                "controlnet_2_image": {
                  "type": "string",
                  "title": "Controlnet 2 Image",
                  "format": "uri",
                  "x-order": 25,
                  "description": "Input image for second controlnet"
                },
                "controlnet_2_start": {
                  "type": "number",
                  "title": "Controlnet 2 Start",
                  "default": 0,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 27,
                  "description": "When controlnet conditioning starts"
                },
                "controlnet_3_image": {
                  "type": "string",
                  "title": "Controlnet 3 Image",
                  "format": "uri",
                  "x-order": 30,
                  "description": "Input image for third controlnet"
                },
                "controlnet_3_start": {
                  "type": "number",
                  "title": "Controlnet 3 Start",
                  "default": 0,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 32,
                  "description": "When controlnet conditioning starts"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 30,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 9,
                  "description": "Number of denoising steps"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 18,
                  "description": "Disable safety checker for generated images. This feature is only available through the API. See [https://replicate.com/docs/how-does-replicate-work#safety](https://replicate.com/docs/how-does-replicate-work#safety)"
                },
                "controlnet_1_conditioning_scale": {
                  "type": "number",
                  "title": "Controlnet 1 Conditioning Scale",
                  "default": 0.75,
                  "maximum": 4,
                  "minimum": 0,
                  "x-order": 21,
                  "description": "How strong the controlnet conditioning is"
                },
                "controlnet_2_conditioning_scale": {
                  "type": "number",
                  "title": "Controlnet 2 Conditioning Scale",
                  "default": 0.75,
                  "maximum": 4,
                  "minimum": 0,
                  "x-order": 26,
                  "description": "How strong the controlnet conditioning is"
                },
                "controlnet_3_conditioning_scale": {
                  "type": "number",
                  "title": "Controlnet 3 Conditioning Scale",
                  "default": 0.75,
                  "maximum": 4,
                  "minimum": 0,
                  "x-order": 31,
                  "description": "How strong the controlnet conditioning is"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "refine": {
              "enum": [
                "no_refiner",
                "base_image_refiner"
              ],
              "type": "string",
              "title": "refine",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "controlnet_1": {
              "enum": [
                "none",
                "edge_canny",
                "illusion",
                "depth_leres",
                "depth_midas",
                "soft_edge_pidi",
                "soft_edge_hed",
                "lineart",
                "lineart_anime",
                "openpose"
              ],
              "type": "string",
              "title": "controlnet_1",
              "description": "An enumeration."
            },
            "controlnet_2": {
              "enum": [
                "none",
                "edge_canny",
                "illusion",
                "depth_leres",
                "depth_midas",
                "soft_edge_pidi",
                "soft_edge_hed",
                "lineart",
                "lineart_anime",
                "openpose"
              ],
              "type": "string",
              "title": "controlnet_2",
              "description": "An enumeration."
            },
            "controlnet_3": {
              "enum": [
                "none",
                "edge_canny",
                "illusion",
                "depth_leres",
                "depth_midas",
                "soft_edge_pidi",
                "soft_edge_hed",
                "lineart",
                "lineart_anime",
                "openpose"
              ],
              "type": "string",
              "title": "controlnet_3",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "sizing_strategy": {
              "enum": [
                "width_height",
                "input_image",
                "controlnet_1_image",
                "controlnet_2_image",
                "controlnet_3_image",
                "mask_image"
              ],
              "type": "string",
              "title": "sizing_strategy",
              "description": "An enumeration."
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://github.com/fofr/cog-sdxl-multi-controlnet-lora/blob/main/LICENSE",
    "name": "sdxl-multi-controlnet-lora",
    "owner": "fofr",
    "paper_url": null,
    "run_count": 205526,
    "url": "https://replicate.com/fofr/sdxl-multi-controlnet-lora",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/VHFfxS2zJYVMVy4Itjzw4ChNdQtEah9wkcUvyPDcPud72eDSA/out-0.png",
    "created_at": "2023-12-19T23:22:36.859747Z",
    "default_example": {
      "completed_at": "2023-12-19T23:38:31.446401Z",
      "created_at": "2023-12-19T23:36:26.038639Z",
      "data_removed": false,
      "error": null,
      "id": "keapd7lbiiix7ausubm22o2sbm",
      "input": {
        "width": 1024,
        "height": 1024,
        "prompt": "In Casey Baugh's evocative style, art of a beautiful young girl cyborg with long brown hair, futuristic, scifi, intricate, elegant, highly detailed, majestic, Baugh's brushwork infuses the painting with a unique combination of realism and abstraction, greg rutkowski, surreal gold filigree, broken glass, (masterpiece, sidelighting, finely detailed beautiful eyes: 1.2), hdr, realistic painting, natural skin, textured skin, closed mouth, crystal eyes, butterfly filigree, chest armor, eye makeup, robot joints, long hair moved by the wind, window facing to another world, Baugh's distinctive style captures the essence of the girl's enigmatic nature, inviting viewers to explore the depths of her soul, award winning art",
        "scheduler": "K_EULER",
        "num_outputs": 1,
        "guidance_scale": 2,
        "apply_watermark": true,
        "negative_prompt": "ugly, deformed, noisy, blurry, low contrast, text, BadDream, 3d, cgi, render, fake, anime, open mouth, big forehead, long neck",
        "num_inference_steps": 7
      },
      "logs": "Using seed: 6260703\nToken indices sequence length is longer than the specified maximum sequence length for this model (152 > 77). Running this sequence through the model will result in indexing errors\nThe following part of your input was truncated because CLIP can only handle sequences up to 77 tokens: [\"1. 2 ), hdr, realistic painting, natural skin, textured skin, closed mouth, crystal eyes, butterfly filigree, chest armor, eye makeup, robot joints, long hair moved by the wind, window facing to another world, baugh's distinctive style captures the essence of the girl's enigmatic nature, inviting viewers to explore the depths of her soul, award winning art\"]\nToken indices sequence length is longer than the specified maximum sequence length for this model (152 > 77). Running this sequence through the model will result in indexing errors\nThe following part of your input was truncated because CLIP can only handle sequences up to 77 tokens: [\"1. 2 ), hdr, realistic painting, natural skin, textured skin, closed mouth, crystal eyes, butterfly filigree, chest armor, eye makeup, robot joints, long hair moved by the wind, window facing to another world, baugh's distinctive style captures the essence of the girl's enigmatic nature, inviting viewers to explore the depths of her soul, award winning art\"]\n  0%|          | 0/7 [00:00<?, ?it/s]\n 14%|█▍        | 1/7 [00:00<00:01,  3.23it/s]\n 29%|██▊       | 2/7 [00:00<00:01,  4.09it/s]\n 43%|████▎     | 3/7 [00:00<00:00,  4.46it/s]\n 57%|█████▋    | 4/7 [00:00<00:00,  4.65it/s]\n 71%|███████▏  | 5/7 [00:01<00:00,  4.77it/s]\n 86%|████████▌ | 6/7 [00:01<00:00,  4.83it/s]\n100%|██████████| 7/7 [00:01<00:00,  4.88it/s]\n100%|██████████| 7/7 [00:01<00:00,  4.63it/s]",
      "metrics": {
        "predict_time": 3.762999,
        "total_time": 125.407762
      },
      "model": "lucataco/dreamshaper-xl-turbo",
      "output": [
        "https://replicate.delivery/pbxt/VHFfxS2zJYVMVy4Itjzw4ChNdQtEah9wkcUvyPDcPud72eDSA/out-0.png"
      ],
      "started_at": "2023-12-19T23:38:27.683402Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/keapd7lbiiix7ausubm22o2sbm",
        "cancel": "https://api.replicate.com/v1/predictions/keapd7lbiiix7ausubm22o2sbm/cancel"
      },
      "version": "0a1710e0187b01a255302738ca0158ff02a22f4638679533e111082f9dd1b615",
      "webhook": null
    },
    "description": "DreamShaper is a general purpose SD model that aims at doing everything well, photos, art, anime, manga. It's designed to match Midjourney and DALL-E.",
    "github_url": "https://github.com/lucataco/cog-dreamshaper-xl-turbo",
    "latest_version": {
      "id": "0a1710e0187b01a255302738ca0158ff02a22f4638679533e111082f9dd1b615",
      "created_at": "2023-12-19T23:34:56.977942Z",
      "cog_version": "0.8.6",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 8,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 1024,
                  "x-order": 2,
                  "description": "Width of output image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 1024,
                  "x-order": 3,
                  "description": "Height of output image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "An astronaut riding a rainbow unicorn",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "K_EULER",
                  "x-order": 5,
                  "description": "scheduler"
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 4,
                  "description": "Number of images to output."
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 2,
                  "maximum": 20,
                  "minimum": 1,
                  "x-order": 7,
                  "description": "Scale for classifier-free guidance"
                },
                "apply_watermark": {
                  "type": "boolean",
                  "title": "Apply Watermark",
                  "default": true,
                  "x-order": 9,
                  "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "",
                  "x-order": 1,
                  "description": "Input Negative Prompt"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 6,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of denoising steps"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 10,
                  "description": "Disable safety checker for generated images. This feature is only available through the API. See [https://replicate.com/docs/how-does-replicate-work#safety](https://replicate.com/docs/how-does-replicate-work#safety)"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/models?license=license:openrail++",
    "name": "dreamshaper-xl-turbo",
    "owner": "lucataco",
    "paper_url": null,
    "run_count": 186084,
    "url": "https://replicate.com/lucataco/dreamshaper-xl-turbo",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/4b03d178-eaf3-4458-a752-dbc76098396b/replicate-prediction-_ycGb1jN.webp",
    "created_at": "2024-10-21T20:53:39.435334Z",
    "default_example": {
      "completed_at": "2024-10-22T16:20:42.513031Z",
      "created_at": "2024-10-22T16:20:33.661000Z",
      "data_removed": false,
      "error": null,
      "id": "am892y5jznrm20cjpm3tc2ms2c",
      "input": {
        "cfg": 4.5,
        "steps": 40,
        "prompt": "~*~aesthetic~*~ #boho #fashion, full-body 30-something woman laying on microfloral grass, candid pose, overlay reads Stable Diffusion 3.5, cheerful cursive typography font",
        "aspect_ratio": "1:1",
        "output_format": "webp",
        "output_quality": 90,
        "prompt_strength": 0.85
      },
      "logs": "Seed set to: 3168632025\nRunning workflow\ngot prompt\nExecuting node 6, title: CLIP Text Encode (Prompt), class type: CLIPTextEncode\nExecuting node 67, title: ConditioningZeroOut, class type: ConditioningZeroOut\nExecuting node 68, title: ConditioningSetTimestepRange, class type: ConditioningSetTimestepRange\nExecuting node 69, title: Conditioning (Combine), class type: ConditioningCombine\nExecuting node 294, title: KSampler, class type: KSampler\n0%|          | 0/40 [00:00<?, ?it/s]\n2%|▎         | 1/40 [00:00<00:05,  7.48it/s]\n5%|▌         | 2/40 [00:00<00:08,  4.60it/s]\n8%|▊         | 3/40 [00:00<00:07,  4.71it/s]\n10%|█         | 4/40 [00:00<00:07,  4.77it/s]\n12%|█▎        | 5/40 [00:01<00:07,  4.80it/s]\n15%|█▌        | 6/40 [00:01<00:07,  4.82it/s]\n18%|█▊        | 7/40 [00:01<00:06,  4.83it/s]\n20%|██        | 8/40 [00:01<00:06,  4.84it/s]\n22%|██▎       | 9/40 [00:01<00:06,  4.73it/s]\n25%|██▌       | 10/40 [00:02<00:06,  4.77it/s]\n28%|██▊       | 11/40 [00:02<00:06,  4.79it/s]\n30%|███       | 12/40 [00:02<00:05,  4.81it/s]\n32%|███▎      | 13/40 [00:02<00:05,  4.83it/s]\n35%|███▌      | 14/40 [00:02<00:05,  4.84it/s]\n38%|███▊      | 15/40 [00:03<00:05,  4.84it/s]\n40%|████      | 16/40 [00:03<00:04,  4.84it/s]\n42%|████▎     | 17/40 [00:03<00:04,  4.85it/s]\n45%|████▌     | 18/40 [00:03<00:04,  4.86it/s]\n48%|████▊     | 19/40 [00:03<00:04,  4.86it/s]\n50%|█████     | 20/40 [00:04<00:04,  4.86it/s]\n52%|█████▎    | 21/40 [00:04<00:03,  4.86it/s]\n55%|█████▌    | 22/40 [00:04<00:03,  4.85it/s]\n57%|█████▊    | 23/40 [00:04<00:03,  4.85it/s]\n60%|██████    | 24/40 [00:04<00:03,  4.86it/s]\n62%|██████▎   | 25/40 [00:05<00:03,  4.86it/s]\n65%|██████▌   | 26/40 [00:05<00:02,  4.86it/s]\n68%|██████▊   | 27/40 [00:05<00:02,  4.86it/s]\n70%|███████   | 28/40 [00:05<00:02,  4.86it/s]\n72%|███████▎  | 29/40 [00:05<00:02,  4.85it/s]\n75%|███████▌  | 30/40 [00:06<00:02,  4.85it/s]\n78%|███████▊  | 31/40 [00:06<00:01,  4.86it/s]\n80%|████████  | 32/40 [00:06<00:01,  4.85it/s]\n82%|████████▎ | 33/40 [00:06<00:01,  4.85it/s]\n85%|████████▌ | 34/40 [00:07<00:01,  4.85it/s]\n88%|████████▊ | 35/40 [00:07<00:01,  4.86it/s]\n90%|█████████ | 36/40 [00:07<00:00,  4.85it/s]\n92%|█████████▎| 37/40 [00:07<00:00,  4.86it/s]\n95%|█████████▌| 38/40 [00:07<00:00,  4.85it/s]\n98%|█████████▊| 39/40 [00:08<00:00,  4.85it/s]\n100%|██████████| 40/40 [00:08<00:00,  4.85it/s]\n100%|██████████| 40/40 [00:08<00:00,  4.85it/s]\nExecuting node 8, title: VAE Decode, class type: VAEDecode\nExecuting node 309, title: Save Image, class type: SaveImage\nPrompt executed in 8.65 seconds\noutputs:  {'309': {'images': [{'filename': 'R8_sd3.5L_00001_.png', 'subfolder': '', 'type': 'output'}]}}\n====================================\nR8_sd3.5L_00001_.png",
      "metrics": {
        "image_count": 1,
        "predict_time": 8.84619968,
        "total_time": 8.852031
      },
      "model": "stability-ai/stable-diffusion-3.5-large",
      "output": [
        "https://replicate.delivery/yhqm/x5swvMgXyDr5JxhAqWf7Sty3YdzweRHHgG6EZA5ndfN0WwSnA/R8_sd3.5L_00001_.webp"
      ],
      "started_at": "2024-10-22T16:20:33.666832Z",
      "status": "succeeded",
      "urls": {
        "stream": "https://stream.replicate.com/v1/files/wcdb-tvf5p7cwhlypjt3472dvzm3kuysuuskvfxlnuqedi4e7mbc6hs3a",
        "get": "https://api.replicate.com/v1/predictions/am892y5jznrm20cjpm3tc2ms2c",
        "cancel": "https://api.replicate.com/v1/predictions/am892y5jznrm20cjpm3tc2ms2c/cancel"
      },
      "version": "fdf25d7c283cbca6a72159a16b0ab065158f5854632b4d58e7922be54a40626a",
      "webhook": null
    },
    "description": "A text-to-image model that generates high-resolution images with fine details. It supports various artistic styles and produces diverse outputs from the same prompt, thanks to Query-Key Normalization.",
    "github_url": null,
    "latest_version": {
      "id": "e6c4657fe1b3f078fb26d68a1413bc8013e2b085504dd84a33e26e16fb95a593",
      "created_at": "2024-10-22T15:19:32.599322Z",
      "cog_version": "0.11.3",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "cfg": {
                  "type": "number",
                  "title": "Cfg",
                  "default": 3.5,
                  "maximum": 20,
                  "minimum": 0,
                  "x-order": 2,
                  "description": "The guidance scale tells the model how similar the output should be to the prompt."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 6,
                  "description": "Set a seed for reproducibility. Random by default."
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input image for image to image mode. The aspect ratio of your output will match this image."
                },
                "steps": {
                  "type": "integer",
                  "title": "Steps",
                  "default": 35,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 5,
                  "description": "Number of steps to run the sampler for."
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "",
                  "x-order": 0,
                  "description": "Text prompt for image generation"
                },
                "aspect_ratio": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/aspect_ratio"
                    }
                  ],
                  "default": "1:1",
                  "x-order": 1,
                  "description": "The aspect ratio of your output image. This value is ignored if you are using an input image."
                },
                "output_format": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/output_format"
                    }
                  ],
                  "default": "webp",
                  "x-order": 7,
                  "description": "Format of the output images"
                },
                "output_quality": {
                  "type": "integer",
                  "title": "Output Quality",
                  "default": 90,
                  "maximum": 100,
                  "minimum": 0,
                  "x-order": 8,
                  "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality."
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.85,
                  "x-order": 4,
                  "description": "Prompt strength (or denoising strength) when using image to image. 1.0 corresponds to full destruction of information in image."
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "aspect_ratio": {
              "enum": [
                "1:1",
                "16:9",
                "21:9",
                "3:2",
                "2:3",
                "4:5",
                "5:4",
                "3:4",
                "4:3",
                "9:16",
                "9:21"
              ],
              "type": "string",
              "title": "aspect_ratio",
              "description": "An enumeration."
            },
            "output_format": {
              "enum": [
                "webp",
                "jpg",
                "png"
              ],
              "type": "string",
              "title": "output_format",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/stabilityai/stable-diffusion-3.5-large/blob/main/LICENSE.md",
    "name": "stable-diffusion-3.5-large",
    "owner": "stability-ai",
    "paper_url": "https://arxiv.org/abs/2403.03206",
    "run_count": 180636,
    "url": "https://replicate.com/stability-ai/stable-diffusion-3.5-large",
    "visibility": "public",
    "weights_url": "https://huggingface.co/stabilityai/stable-diffusion-3.5-large"
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/71c982a3-27f0-42a6-ad6a-769f25097c08/replicate-prediction-s_VROPz1s.png",
    "created_at": "2024-10-22T09:26:23.607119Z",
    "default_example": {
      "completed_at": "2024-10-22T12:41:03.517470Z",
      "created_at": "2024-10-22T12:40:43.867000Z",
      "data_removed": false,
      "error": null,
      "id": "shd9sgbgbdrge0cjpgzbsztztr",
      "input": {
        "prompt": "An illustration of a black running shoe with the text \"Run AI with an API\" written on the shoe. The shoe is placed on a blue background. The text is white and bold. The overall image has a modern and techy vibe.",
        "resolution": "None",
        "style_type": "None",
        "aspect_ratio": "16:9",
        "magic_prompt_option": "Auto"
      },
      "logs": "Using seed: 27236\nRunning prediction... \nGenerating...\nPrompt used: An illustration of a black running shoe with the text \"Run AI with an API\" written on the shoe. The shoe is placed on a blue background. The text is white and bold. The overall image has a modern and techy vibe.\nImage generation took 18.96 seconds",
      "metrics": {
        "image_count": 1,
        "predict_time": 19.641495926,
        "total_time": 19.65047
      },
      "model": "ideogram-ai/ideogram-v2",
      "output": "https://replicate.delivery/czjl/wPuHfFHPOGxqbC3r1rJbEomny4eprgwRVpjIP7pN7oKf6pSnA/R8_ideogram.png",
      "started_at": "2024-10-22T12:40:43.875974Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/shd9sgbgbdrge0cjpgzbsztztr",
        "cancel": "https://api.replicate.com/v1/predictions/shd9sgbgbdrge0cjpgzbsztztr/cancel"
      },
      "version": "b0c6eeefcefc40a997fa1787500782b6a7a9a99ae40f79d71e2c83daf7be5d13",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/official-model-prediction"
    },
    "description": "An excellent image model with state of the art inpainting, prompt comprehension and text rendering",
    "github_url": null,
    "latest_version": {
      "id": "d07f7f3ad03f2ec100edeaa91e26ac731d7d00ec369e6a475b80c04bd1101d5d",
      "created_at": "2024-10-22T09:27:30.780981Z",
      "cog_version": "0.10.0-alpha25",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/ready": {
            "get": {
              "summary": "Ready",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Ready Ready Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "ready_ready_get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "required": [
                "prompt"
              ],
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 6,
                  "description": "A black and white image. Black pixels are inpainted, white pixels are preserved. The mask will be resized to match the image size."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 8,
                  "description": "Random seed. Set for reproducible generation"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 5,
                  "description": "An image file to use for inpainting."
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "x-order": 0,
                  "description": "Text prompt for image generation"
                },
                "resolution": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/resolution"
                    }
                  ],
                  "default": "None",
                  "x-order": 3,
                  "description": "Resolution. Overrides aspect ratio. Ignored if an inpainting image is given."
                },
                "style_type": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/style_type"
                    }
                  ],
                  "default": "None",
                  "x-order": 7,
                  "description": "The styles help define the specific aesthetic of the image you want to generate."
                },
                "aspect_ratio": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/aspect_ratio"
                    }
                  ],
                  "default": "1:1",
                  "x-order": 2,
                  "description": "Aspect ratio. Ignored if a resolution or inpainting image is given."
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "x-order": 1,
                  "description": "Things you do not want to see in the generated image."
                },
                "magic_prompt_option": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/magic_prompt_option"
                    }
                  ],
                  "default": "Auto",
                  "x-order": 4,
                  "description": "Magic Prompt will interpret your prompt and optimize it to maximize variety and quality of the images generated. You can also use it to write prompts in different languages."
                }
              }
            },
            "Output": {
              "type": "string",
              "title": "Output",
              "format": "uri"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "resolution": {
              "enum": [
                "None",
                "512x1536",
                "576x1408",
                "576x1472",
                "576x1536",
                "640x1024",
                "640x1344",
                "640x1408",
                "640x1472",
                "640x1536",
                "704x1152",
                "704x1216",
                "704x1280",
                "704x1344",
                "704x1408",
                "704x1472",
                "720x1280",
                "736x1312",
                "768x1024",
                "768x1088",
                "768x1152",
                "768x1216",
                "768x1232",
                "768x1280",
                "768x1344",
                "832x960",
                "832x1024",
                "832x1088",
                "832x1152",
                "832x1216",
                "832x1248",
                "864x1152",
                "896x960",
                "896x1024",
                "896x1088",
                "896x1120",
                "896x1152",
                "960x832",
                "960x896",
                "960x1024",
                "960x1088",
                "1024x640",
                "1024x768",
                "1024x832",
                "1024x896",
                "1024x960",
                "1024x1024",
                "1088x768",
                "1088x832",
                "1088x896",
                "1088x960",
                "1120x896",
                "1152x704",
                "1152x768",
                "1152x832",
                "1152x864",
                "1152x896",
                "1216x704",
                "1216x768",
                "1216x832",
                "1232x768",
                "1248x832",
                "1280x704",
                "1280x720",
                "1280x768",
                "1280x800",
                "1312x736",
                "1344x640",
                "1344x704",
                "1344x768",
                "1408x576",
                "1408x640",
                "1408x704",
                "1472x576",
                "1472x640",
                "1472x704",
                "1536x512",
                "1536x576",
                "1536x640"
              ],
              "type": "string",
              "title": "resolution",
              "description": "An enumeration."
            },
            "style_type": {
              "enum": [
                "None",
                "Auto",
                "General",
                "Realistic",
                "Design",
                "Render 3D",
                "Anime"
              ],
              "type": "string",
              "title": "style_type",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "aspect_ratio": {
              "enum": [
                "1:1",
                "16:9",
                "9:16",
                "4:3",
                "3:4",
                "3:2",
                "2:3",
                "16:10",
                "10:16",
                "3:1",
                "1:3"
              ],
              "type": "string",
              "title": "aspect_ratio",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            },
            "magic_prompt_option": {
              "enum": [
                "Auto",
                "On",
                "Off"
              ],
              "type": "string",
              "title": "magic_prompt_option",
              "description": "An enumeration."
            }
          }
        }
      }
    },
    "license_url": "https://about.ideogram.ai/legal/api-tos",
    "name": "ideogram-v2",
    "owner": "ideogram-ai",
    "paper_url": "https://ideogram.ai/",
    "run_count": 139898,
    "url": "https://replicate.com/ideogram-ai/ideogram-v2",
    "visibility": "public",
    "weights_url": "https://ideogram.ai/"
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/7QcJQaHWyoqbDJxOHReq5UtphruA3RfbLvK1NhSYXVq7sXGSA/out-0.png",
    "created_at": "2023-12-27T06:47:52.123463Z",
    "default_example": {
      "completed_at": "2023-12-27T06:50:36.581261Z",
      "created_at": "2023-12-27T06:48:29.534801Z",
      "data_removed": false,
      "error": null,
      "id": "mjmx7ctbqibebhmaauzkfkx3oq",
      "input": {
        "width": 1024,
        "height": 1024,
        "prompt": "black fluffy gorgeous dangerous cat animal creature, large orange eyes, big fluffy ears, piercing gaze, full moon, dark ambiance, best quality, extremely detailed",
        "scheduler": "KarrasDPM",
        "num_outputs": 1,
        "guidance_scale": 7.5,
        "apply_watermark": true,
        "negative_prompt": "worst quality, low quality",
        "prompt_strength": 0.8,
        "num_inference_steps": 60
      },
      "logs": "Using seed: 2034103420\nPrompt: black fluffy gorgeous dangerous cat animal creature, large orange eyes, big fluffy ears, piercing gaze, full moon, dark ambiance, best quality, extremely detailed\ntxt2img mode\n  0%|          | 0/60 [00:00<?, ?it/s]\n  2%|▏         | 1/60 [00:00<00:18,  3.14it/s]\n  5%|▌         | 3/60 [00:00<00:11,  5.17it/s]\n  7%|▋         | 4/60 [00:00<00:11,  5.09it/s]\n  8%|▊         | 5/60 [00:01<00:10,  5.03it/s]\n 10%|█         | 6/60 [00:01<00:10,  4.99it/s]\n 12%|█▏        | 7/60 [00:01<00:10,  4.96it/s]\n 13%|█▎        | 8/60 [00:01<00:10,  4.94it/s]\n 15%|█▌        | 9/60 [00:01<00:10,  4.93it/s]\n 17%|█▋        | 10/60 [00:02<00:10,  4.92it/s]\n 18%|█▊        | 11/60 [00:02<00:09,  4.91it/s]\n 20%|██        | 12/60 [00:02<00:09,  4.91it/s]\n 22%|██▏       | 13/60 [00:02<00:09,  4.90it/s]\n 23%|██▎       | 14/60 [00:02<00:09,  4.90it/s]\n 25%|██▌       | 15/60 [00:03<00:09,  4.90it/s]\n 27%|██▋       | 16/60 [00:03<00:08,  4.90it/s]\n 28%|██▊       | 17/60 [00:03<00:08,  4.83it/s]\n 30%|███       | 18/60 [00:03<00:08,  4.83it/s]\n 32%|███▏      | 19/60 [00:03<00:08,  4.85it/s]\n 33%|███▎      | 20/60 [00:04<00:08,  4.88it/s]\n 35%|███▌      | 21/60 [00:04<00:07,  4.90it/s]\n 37%|███▋      | 22/60 [00:04<00:07,  4.90it/s]\n 38%|███▊      | 23/60 [00:04<00:07,  4.91it/s]\n 40%|████      | 24/60 [00:04<00:07,  4.91it/s]\n 42%|████▏     | 25/60 [00:05<00:07,  4.92it/s]\n 43%|████▎     | 26/60 [00:05<00:06,  4.92it/s]\n 45%|████▌     | 27/60 [00:05<00:06,  4.92it/s]\n 47%|████▋     | 28/60 [00:05<00:06,  4.92it/s]\n 48%|████▊     | 29/60 [00:05<00:06,  4.92it/s]\n 50%|█████     | 30/60 [00:06<00:06,  4.92it/s]\n 52%|█████▏    | 31/60 [00:06<00:05,  4.92it/s]\n 53%|█████▎    | 32/60 [00:06<00:05,  4.92it/s]\n 55%|█████▌    | 33/60 [00:06<00:05,  4.92it/s]\n 57%|█████▋    | 34/60 [00:06<00:05,  4.92it/s]\n 58%|█████▊    | 35/60 [00:07<00:05,  4.92it/s]\n 60%|██████    | 36/60 [00:07<00:04,  4.92it/s]\n 62%|██████▏   | 37/60 [00:07<00:04,  4.92it/s]\n 63%|██████▎   | 38/60 [00:07<00:04,  4.92it/s]\n 65%|██████▌   | 39/60 [00:07<00:04,  4.92it/s]\n 67%|██████▋   | 40/60 [00:08<00:04,  4.92it/s]\n 68%|██████▊   | 41/60 [00:08<00:03,  4.91it/s]\n 70%|███████   | 42/60 [00:08<00:03,  4.91it/s]\n 72%|███████▏  | 43/60 [00:08<00:03,  4.91it/s]\n 73%|███████▎  | 44/60 [00:08<00:03,  4.91it/s]\n 75%|███████▌  | 45/60 [00:09<00:03,  4.91it/s]\n 77%|███████▋  | 46/60 [00:09<00:02,  4.91it/s]\n 78%|███████▊  | 47/60 [00:09<00:02,  4.91it/s]\n 80%|████████  | 48/60 [00:09<00:02,  4.91it/s]\n 82%|████████▏ | 49/60 [00:09<00:02,  4.90it/s]\n 83%|████████▎ | 50/60 [00:10<00:02,  4.91it/s]\n 85%|████████▌ | 51/60 [00:10<00:01,  4.91it/s]\n 87%|████████▋ | 52/60 [00:10<00:01,  4.91it/s]\n 88%|████████▊ | 53/60 [00:10<00:01,  4.90it/s]\n 90%|█████████ | 54/60 [00:11<00:01,  4.90it/s]\n 92%|█████████▏| 55/60 [00:11<00:01,  4.90it/s]\n 93%|█████████▎| 56/60 [00:11<00:00,  4.90it/s]\n 95%|█████████▌| 57/60 [00:11<00:00,  4.91it/s]\n 97%|█████████▋| 58/60 [00:11<00:00,  4.90it/s]\n 98%|█████████▊| 59/60 [00:12<00:00,  4.90it/s]\n100%|██████████| 60/60 [00:12<00:00,  4.91it/s]\n100%|██████████| 60/60 [00:12<00:00,  4.90it/s]",
      "metrics": {
        "predict_time": 14.356088,
        "total_time": 127.04646
      },
      "model": "lucataco/open-dalle-v1.1",
      "output": [
        "https://replicate.delivery/pbxt/7QcJQaHWyoqbDJxOHReq5UtphruA3RfbLvK1NhSYXVq7sXGSA/out-0.png"
      ],
      "started_at": "2023-12-27T06:50:22.225173Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/mjmx7ctbqibebhmaauzkfkx3oq",
        "cancel": "https://api.replicate.com/v1/predictions/mjmx7ctbqibebhmaauzkfkx3oq/cancel"
      },
      "version": "1c7d4c8dec39c7306df7794b28419078cb9d18b9213ab1c21fdc46a1deca0144",
      "webhook": null
    },
    "description": "A unique fusion that showcases exceptional prompt adherence and semantic understanding, it seems to be a step above base SDXL and a step closer to DALLE-3 in terms of prompt comprehension",
    "github_url": "https://github.com/lucataco/cog-opendalle-v1.1",
    "latest_version": {
      "id": "1c7d4c8dec39c7306df7794b28419078cb9d18b9213ab1c21fdc46a1deca0144",
      "created_at": "2023-12-27T06:48:11.547721Z",
      "cog_version": "0.8.6",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 11,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 2,
                  "description": "Input image for img2img or inpaint mode"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 1024,
                  "x-order": 4,
                  "description": "Width of output image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 1024,
                  "x-order": 5,
                  "description": "Height of output image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "black fluffy gorgeous dangerous cat animal creature, large orange eyes, big fluffy ears, piercing gaze, full moon, dark ambiance, best quality, extremely detailed",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "KarrasDPM",
                  "x-order": 7,
                  "description": "scheduler"
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of images to output."
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 7.5,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 9,
                  "description": "Scale for classifier-free guidance"
                },
                "apply_watermark": {
                  "type": "boolean",
                  "title": "Apply Watermark",
                  "default": true,
                  "x-order": 12,
                  "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "worst quality, low quality",
                  "x-order": 1,
                  "description": "Negative Input prompt"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 10,
                  "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 60,
                  "maximum": 100,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Number of denoising steps 60-70 for best detail, 35 for fast"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 13,
                  "description": "Disable safety checker for generated images. This feature is only available through the API. See https://replicate.com/docs/how-does-replicate-work#safety"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/models?license=license:cc-by-nc-nd-4.0",
    "name": "open-dalle-v1.1",
    "owner": "lucataco",
    "paper_url": null,
    "run_count": 122918,
    "url": "https://replicate.com/lucataco/open-dalle-v1.1",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/2ee23581-2653-483d-9d7c-69b1467b9168/out-0.png",
    "created_at": "2023-12-27T15:04:37.524368Z",
    "default_example": {
      "completed_at": "2023-12-29T12:32:44.596623Z",
      "created_at": "2023-12-29T12:29:55.775429Z",
      "data_removed": false,
      "error": null,
      "id": "ommkf7dbipo2nipxtnjnv4fwli",
      "input": {
        "width": 768,
        "height": 768,
        "prompt": "An astronaut riding a rainbow unicorn",
        "refine": "no_refiner",
        "scheduler": "DPM++_SDE_Karras",
        "num_outputs": 1,
        "guidance_scale": 2,
        "apply_watermark": false,
        "high_noise_frac": 0.8,
        "negative_prompt": "(worst quality, low quality, illustration, 3d, 2d, painting, cartoons, sketch), open mouth",
        "prompt_strength": 0.8,
        "num_inference_steps": 25
      },
      "logs": "Using seed: 11998\nPrompt: An astronaut riding a rainbow unicorn\ntxt2img mode\n  0%|          | 0/25 [00:00<?, ?it/s]\n  4%|▍         | 1/25 [00:00<00:17,  1.37it/s]\n  8%|▊         | 2/25 [00:00<00:08,  2.70it/s]\n 12%|█▏        | 3/25 [00:00<00:05,  3.90it/s]\n 16%|█▌        | 4/25 [00:01<00:04,  4.93it/s]\n 20%|██        | 5/25 [00:01<00:03,  5.77it/s]\n 24%|██▍       | 6/25 [00:01<00:02,  6.42it/s]\n 28%|██▊       | 7/25 [00:01<00:02,  6.92it/s]\n 32%|███▏      | 8/25 [00:01<00:02,  7.29it/s]\n 36%|███▌      | 9/25 [00:01<00:02,  7.55it/s]\n 40%|████      | 10/25 [00:01<00:01,  7.74it/s]\n 44%|████▍     | 11/25 [00:01<00:01,  7.87it/s]\n 48%|████▊     | 12/25 [00:02<00:01,  7.96it/s]\n 52%|█████▏    | 13/25 [00:02<00:01,  8.04it/s]\n 56%|█████▌    | 14/25 [00:02<00:01,  8.08it/s]\n 60%|██████    | 15/25 [00:02<00:01,  8.12it/s]\n 64%|██████▍   | 16/25 [00:02<00:01,  8.15it/s]\n 68%|██████▊   | 17/25 [00:02<00:00,  8.19it/s]\n 72%|███████▏  | 18/25 [00:02<00:00,  8.20it/s]\n 76%|███████▌  | 19/25 [00:02<00:00,  8.22it/s]\n 80%|████████  | 20/25 [00:03<00:00,  8.23it/s]\n 84%|████████▍ | 21/25 [00:03<00:00,  8.24it/s]\n 88%|████████▊ | 22/25 [00:03<00:00,  8.24it/s]\n 92%|█████████▏| 23/25 [00:03<00:00,  8.23it/s]\n 96%|█████████▌| 24/25 [00:03<00:00,  8.22it/s]\n100%|██████████| 25/25 [00:03<00:00,  8.22it/s]\n100%|██████████| 25/25 [00:03<00:00,  6.86it/s]",
      "metrics": {
        "predict_time": 5.453418,
        "total_time": 168.821194
      },
      "model": "adirik/realvisxl-v3.0-turbo",
      "output": [
        "https://replicate.delivery/pbxt/4MhHPJRLlB65IJPOeJFe3khz5Hn6i5CCrrzCr062Kqns5GHSA/out-0.png"
      ],
      "started_at": "2023-12-29T12:32:39.143205Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/ommkf7dbipo2nipxtnjnv4fwli",
        "cancel": "https://api.replicate.com/v1/predictions/ommkf7dbipo2nipxtnjnv4fwli/cancel"
      },
      "version": "6e941e7fe46955afc031f35e84312a792d546b0f434f9008d457eb9deb24575c",
      "webhook": null
    },
    "description": "Photorealism with RealVisXL V3.0 Turbo based on SDXL",
    "github_url": "https://github.com/alaradirik/cog-RealVisXL",
    "latest_version": {
      "id": "3dc73c805b11b4b01a60555e532fd3ab3f0e60d26f6584d9b8ba7e1b95858243",
      "created_at": "2024-01-18T17:21:14.203508Z",
      "cog_version": "0.9.0-beta10",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 11,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 2,
                  "description": "Input image for img2img or inpaint mode"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 768,
                  "x-order": 4,
                  "description": "Width of output image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 768,
                  "x-order": 5,
                  "description": "Height of output image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "An astronaut riding a rainbow unicorn",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "refine": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/refine"
                    }
                  ],
                  "default": "no_refiner",
                  "x-order": 12,
                  "description": "Which refine style to use"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "DPM++_SDE_Karras",
                  "x-order": 7,
                  "description": "Scheduler to use, DPM++ SDE Karras is recommended"
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of images to output."
                },
                "refine_steps": {
                  "type": "integer",
                  "title": "Refine Steps",
                  "x-order": 14,
                  "description": "For base_image_refiner, the number of steps to refine, defaults to num_inference_steps"
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 2,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 9,
                  "description": "Scale for classifier-free guidance"
                },
                "apply_watermark": {
                  "type": "boolean",
                  "title": "Apply Watermark",
                  "default": false,
                  "x-order": 15,
                  "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
                },
                "high_noise_frac": {
                  "type": "number",
                  "title": "High Noise Frac",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 13,
                  "description": "For expert_ensemble_refiner, the fraction of noise to use"
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "(worst quality, low quality, illustration, 3d, 2d, painting, cartoons, sketch), open mouth",
                  "x-order": 1,
                  "description": "Input Negative Prompt"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 10,
                  "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 25,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Number of denoising steps"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 16,
                  "description": "Disable safety checker for generated images. This feature is only available through the API. See [https://replicate.com/docs/how-does-replicate-work#safety](https://replicate.com/docs/how-does-replicate-work#safety)"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "refine": {
              "enum": [
                "no_refiner",
                "expert_ensemble_refiner",
                "base_image_refiner"
              ],
              "type": "string",
              "title": "refine",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM",
                "DPM++_SDE_Karras"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/models?license=license%3Aopenrail%2B%2B",
    "name": "realvisxl-v3.0-turbo",
    "owner": "adirik",
    "paper_url": null,
    "run_count": 115552,
    "url": "https://replicate.com/adirik/realvisxl-v3.0-turbo",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/8b1df940-d741-4446-beb2-0d72c66abb91/replicate-prediction-f_iX48w8f.png",
    "created_at": "2024-10-22T09:29:41.547244Z",
    "default_example": {
      "completed_at": "2024-10-22T12:43:05.999253Z",
      "created_at": "2024-10-22T12:42:53.629000Z",
      "data_removed": false,
      "error": null,
      "id": "fkgz67vb7nrga0cjph091f1jg8",
      "input": {
        "prompt": "An illustration of a gold running shoe with the text \"Run AI with an API\" written on the shoe. The shoe is placed on a pink background. The text is white and bold. The overall image has a modern and techy vibe, with elements of speed.",
        "resolution": "None",
        "style_type": "None",
        "aspect_ratio": "1:1",
        "magic_prompt_option": "Auto"
      },
      "logs": "Using seed: 365\nRunning prediction... \nGenerating...\nPrompt used: An illustration of a gold running shoe with the text \"Run AI with an API\" written on the shoe. The shoe is placed on a pink background. The text is white and bold. The overall image has a modern and techy vibe, with elements of speed.\nImage generation took 11.19 seconds",
      "metrics": {
        "image_count": 1,
        "predict_time": 12.361202155,
        "total_time": 12.370253
      },
      "model": "ideogram-ai/ideogram-v2-turbo",
      "output": "https://replicate.delivery/czjl/9aabtkgKeV2HS6bASFV9uEvkufPMZlE2MelytHKnUs4yeTlOB/R8_ideogram.png",
      "started_at": "2024-10-22T12:42:53.638050Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/fkgz67vb7nrga0cjph091f1jg8",
        "cancel": "https://api.replicate.com/v1/predictions/fkgz67vb7nrga0cjph091f1jg8/cancel"
      },
      "version": "128ad940e4e6f7281021cb8b1adf9a6b8eab3f5f1abc3a94c149774980735c4f",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/official-model-prediction"
    },
    "description": "A fast image model with state of the art inpainting, prompt comprehension and text rendering.",
    "github_url": null,
    "latest_version": {
      "id": "fbb188a06a69327a5daa9d82162b31528823d918705aefeeebd17856f856cfac",
      "created_at": "2024-10-22T09:30:05.893763Z",
      "cog_version": "0.10.0-alpha25",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/ready": {
            "get": {
              "summary": "Ready",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Ready Ready Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "ready_ready_get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "required": [
                "prompt"
              ],
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 6,
                  "description": "A black and white image. Black pixels are inpainted, white pixels are preserved. The mask will be resized to match the image size."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 8,
                  "description": "Random seed. Set for reproducible generation"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 5,
                  "description": "An image file to use for inpainting."
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "x-order": 0,
                  "description": "Text prompt for image generation"
                },
                "resolution": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/resolution"
                    }
                  ],
                  "default": "None",
                  "x-order": 3,
                  "description": "Resolution. Overrides aspect ratio. Ignored if an inpainting image is given."
                },
                "style_type": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/style_type"
                    }
                  ],
                  "default": "None",
                  "x-order": 7,
                  "description": "The styles help define the specific aesthetic of the image you want to generate."
                },
                "aspect_ratio": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/aspect_ratio"
                    }
                  ],
                  "default": "1:1",
                  "x-order": 2,
                  "description": "Aspect ratio. Ignored if a resolution or inpainting image is given."
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "x-order": 1,
                  "description": "Things you do not want to see in the generated image."
                },
                "magic_prompt_option": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/magic_prompt_option"
                    }
                  ],
                  "default": "Auto",
                  "x-order": 4,
                  "description": "Magic Prompt will interpret your prompt and optimize it to maximize variety and quality of the images generated. You can also use it to write prompts in different languages."
                }
              }
            },
            "Output": {
              "type": "string",
              "title": "Output",
              "format": "uri"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "resolution": {
              "enum": [
                "None",
                "512x1536",
                "576x1408",
                "576x1472",
                "576x1536",
                "640x1024",
                "640x1344",
                "640x1408",
                "640x1472",
                "640x1536",
                "704x1152",
                "704x1216",
                "704x1280",
                "704x1344",
                "704x1408",
                "704x1472",
                "720x1280",
                "736x1312",
                "768x1024",
                "768x1088",
                "768x1152",
                "768x1216",
                "768x1232",
                "768x1280",
                "768x1344",
                "832x960",
                "832x1024",
                "832x1088",
                "832x1152",
                "832x1216",
                "832x1248",
                "864x1152",
                "896x960",
                "896x1024",
                "896x1088",
                "896x1120",
                "896x1152",
                "960x832",
                "960x896",
                "960x1024",
                "960x1088",
                "1024x640",
                "1024x768",
                "1024x832",
                "1024x896",
                "1024x960",
                "1024x1024",
                "1088x768",
                "1088x832",
                "1088x896",
                "1088x960",
                "1120x896",
                "1152x704",
                "1152x768",
                "1152x832",
                "1152x864",
                "1152x896",
                "1216x704",
                "1216x768",
                "1216x832",
                "1232x768",
                "1248x832",
                "1280x704",
                "1280x720",
                "1280x768",
                "1280x800",
                "1312x736",
                "1344x640",
                "1344x704",
                "1344x768",
                "1408x576",
                "1408x640",
                "1408x704",
                "1472x576",
                "1472x640",
                "1472x704",
                "1536x512",
                "1536x576",
                "1536x640"
              ],
              "type": "string",
              "title": "resolution",
              "description": "An enumeration."
            },
            "style_type": {
              "enum": [
                "None",
                "Auto",
                "General",
                "Realistic",
                "Design",
                "Render 3D",
                "Anime"
              ],
              "type": "string",
              "title": "style_type",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "aspect_ratio": {
              "enum": [
                "1:1",
                "16:9",
                "9:16",
                "4:3",
                "3:4",
                "3:2",
                "2:3",
                "16:10",
                "10:16",
                "3:1",
                "1:3"
              ],
              "type": "string",
              "title": "aspect_ratio",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            },
            "magic_prompt_option": {
              "enum": [
                "Auto",
                "On",
                "Off"
              ],
              "type": "string",
              "title": "magic_prompt_option",
              "description": "An enumeration."
            }
          }
        }
      }
    },
    "license_url": "https://about.ideogram.ai/legal/api-tos",
    "name": "ideogram-v2-turbo",
    "owner": "ideogram-ai",
    "paper_url": "https://ideogram.ai/",
    "run_count": 106421,
    "url": "https://replicate.com/ideogram-ai/ideogram-v2-turbo",
    "visibility": "public",
    "weights_url": "https://ideogram.ai/"
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/aOZ4ywUeyeiyqEz5l7lixq0e5rAbs3qTStetOGXNKZd4g6QEB/out-0.png",
    "created_at": "2023-06-09T13:10:13.001342Z",
    "default_example": {
      "completed_at": "2023-06-09T14:32:46.808598Z",
      "created_at": "2023-06-09T14:32:39.014305Z",
      "data_removed": false,
      "error": null,
      "id": "ryhrl4slzbd3jhxtz5ar5nd24u",
      "input": {
        "task": "text2img",
        "width": 768,
        "height": 768,
        "prompt": "A alien cheeseburger creature eating itself, claymation, cinematic, moody lighting",
        "strength": 0.3,
        "num_outputs": 1,
        "guidance_scale": 1,
        "negative_prompt": "low quality, bad quality",
        "num_steps_prior": 25,
        "num_inference_steps": 100
      },
      "logs": "Using seed: 9578\n  0%|          | 0/25 [00:00<?, ?it/s]\n 20%|██        | 5/25 [00:00<00:00, 45.87it/s]\n 40%|████      | 10/25 [00:00<00:00, 46.46it/s]\n 60%|██████    | 15/25 [00:00<00:00, 44.90it/s]\n 80%|████████  | 20/25 [00:00<00:00, 46.28it/s]\n100%|██████████| 25/25 [00:00<00:00, 47.07it/s]\n100%|██████████| 25/25 [00:00<00:00, 46.49it/s]\n  0%|          | 0/100 [00:00<?, ?it/s]\n  2%|▏         | 2/100 [00:00<00:06, 15.23it/s]\n  4%|▍         | 4/100 [00:00<00:06, 15.72it/s]\n  6%|▌         | 6/100 [00:00<00:05, 16.19it/s]\n  8%|▊         | 8/100 [00:00<00:05, 16.23it/s]\n 10%|█         | 10/100 [00:00<00:05, 16.41it/s]\n 12%|█▏        | 12/100 [00:00<00:05, 16.39it/s]\n 14%|█▍        | 14/100 [00:00<00:05, 16.24it/s]\n 16%|█▌        | 16/100 [00:00<00:05, 16.33it/s]\n 18%|█▊        | 18/100 [00:01<00:05, 16.17it/s]\n 20%|██        | 20/100 [00:01<00:04, 16.32it/s]\n 22%|██▏       | 22/100 [00:01<00:04, 16.41it/s]\n 24%|██▍       | 24/100 [00:01<00:04, 16.50it/s]\n 26%|██▌       | 26/100 [00:01<00:04, 16.57it/s]\n 28%|██▊       | 28/100 [00:01<00:04, 16.57it/s]\n 30%|███       | 30/100 [00:01<00:04, 16.53it/s]\n 32%|███▏      | 32/100 [00:01<00:04, 16.60it/s]\n 34%|███▍      | 34/100 [00:02<00:04, 16.42it/s]\n 36%|███▌      | 36/100 [00:02<00:03, 16.50it/s]\n 38%|███▊      | 38/100 [00:02<00:03, 16.48it/s]\n 40%|████      | 40/100 [00:02<00:03, 16.51it/s]\n 42%|████▏     | 42/100 [00:02<00:03, 16.55it/s]\n 44%|████▍     | 44/100 [00:02<00:03, 16.48it/s]\n 46%|████▌     | 46/100 [00:02<00:03, 16.49it/s]\n 48%|████▊     | 48/100 [00:02<00:03, 16.54it/s]\n 50%|█████     | 50/100 [00:03<00:03, 16.43it/s]\n 52%|█████▏    | 52/100 [00:03<00:02, 16.45it/s]\n 54%|█████▍    | 54/100 [00:03<00:02, 16.34it/s]\n 56%|█████▌    | 56/100 [00:03<00:02, 16.40it/s]\n 58%|█████▊    | 58/100 [00:03<00:02, 16.42it/s]\n 60%|██████    | 60/100 [00:03<00:02, 16.48it/s]\n 62%|██████▏   | 62/100 [00:03<00:02, 16.49it/s]\n 64%|██████▍   | 64/100 [00:03<00:02, 16.51it/s]\n 66%|██████▌   | 66/100 [00:04<00:02, 16.48it/s]\n 68%|██████▊   | 68/100 [00:04<00:01, 16.40it/s]\n 70%|███████   | 70/100 [00:04<00:01, 16.45it/s]\n 72%|███████▏  | 72/100 [00:04<00:01, 16.55it/s]\n 74%|███████▍  | 74/100 [00:04<00:01, 16.63it/s]\n 76%|███████▌  | 76/100 [00:04<00:01, 16.70it/s]\n 78%|███████▊  | 78/100 [00:04<00:01, 16.60it/s]\n 80%|████████  | 80/100 [00:04<00:01, 16.59it/s]\n 82%|████████▏ | 82/100 [00:04<00:01, 16.69it/s]\n 84%|████████▍ | 84/100 [00:05<00:00, 16.68it/s]\n 86%|████████▌ | 86/100 [00:05<00:00, 16.74it/s]\n 88%|████████▊ | 88/100 [00:05<00:00, 16.77it/s]\n 90%|█████████ | 90/100 [00:05<00:00, 16.46it/s]\n 92%|█████████▏| 92/100 [00:05<00:00, 16.58it/s]\n 94%|█████████▍| 94/100 [00:05<00:00, 16.55it/s]\n 96%|█████████▌| 96/100 [00:05<00:00, 16.65it/s]\n 98%|█████████▊| 98/100 [00:05<00:00, 16.67it/s]\n100%|██████████| 100/100 [00:06<00:00, 16.63it/s]\n100%|██████████| 100/100 [00:06<00:00, 16.49it/s]",
      "metrics": {
        "predict_time": 7.826265,
        "total_time": 7.794293
      },
      "model": "ai-forever/kandinsky-2-1",
      "output": [
        "https://replicate.delivery/pbxt/aOZ4ywUeyeiyqEz5l7lixq0e5rAbs3qTStetOGXNKZd4g6QEB/out-0.png"
      ],
      "started_at": "2023-06-09T14:32:38.982333Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/ryhrl4slzbd3jhxtz5ar5nd24u",
        "cancel": "https://api.replicate.com/v1/predictions/ryhrl4slzbd3jhxtz5ar5nd24u/cancel"
      },
      "version": "a768f3c2e174c54b576cc4f222e789e161160403d0cd0ace41eeb9a0f8c8d5f8",
      "webhook": null
    },
    "description": "Kandinsky 2.1 Diffusion Model",
    "github_url": "https://github.com/chenxwh/cog-stable-diffusion/tree/kandinsky-2-1",
    "latest_version": {
      "id": "a768f3c2e174c54b576cc4f222e789e161160403d0cd0ace41eeb9a0f8c8d5f8",
      "created_at": "2023-06-09T14:24:17.329170Z",
      "cog_version": "0.7.2",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "task": {
              "enum": [
                "text2img",
                "text_guided_img2img"
              ],
              "type": "string",
              "title": "task",
              "description": "An enumeration."
            },
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 11,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "task": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/task"
                    }
                  ],
                  "default": "text2img",
                  "x-order": 0,
                  "description": "Choose a task"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input image for text_guided_img2img task"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 512,
                  "maximum": 1024,
                  "minimum": 128,
                  "x-order": 5,
                  "description": "Width of output image. Reduce the seeting if hits memory limits"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 512,
                  "maximum": 1024,
                  "minimum": 128,
                  "x-order": 6,
                  "description": "Height of output image. Reduce the seeting if hits memory limits"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "A alien cheeseburger creature eating itself, claymation, cinematic, moody lighting",
                  "x-order": 1,
                  "description": "Provide input prompt"
                },
                "strength": {
                  "type": "number",
                  "title": "Strength",
                  "default": 0.3,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 4,
                  "description": "indicates how much to transform the input iamge, valid for text_guided_img2img task."
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 7,
                  "description": "Number of images to output."
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 4,
                  "maximum": 20,
                  "minimum": 1,
                  "x-order": 10,
                  "description": "Scale for classifier-free guidance"
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "low quality, bad quality",
                  "x-order": 2,
                  "description": "Specify things to not see in the output for text2img and text_guided_img2img tasks"
                },
                "num_steps_prior": {
                  "type": "integer",
                  "title": "Num Steps Prior",
                  "default": 25,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Number of denoising steps in prior"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 100,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 9,
                  "description": "Number of denoising steps"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "logs",
                    "output",
                    "completed",
                    "start"
                  ],
                  "uniqueItems": true
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": null,
    "name": "kandinsky-2-1",
    "owner": "ai-forever",
    "paper_url": null,
    "run_count": 84150,
    "url": "https://replicate.com/ai-forever/kandinsky-2-1",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/4400b1ac-decf-472f-94de-29122df7ef32/6af357b1-11dc-4954-ad45-4f17b3.png",
    "created_at": "2022-06-21T09:01:38.657265Z",
    "default_example": {
      "completed_at": "2022-07-10T11:17:36.820113Z",
      "created_at": "2022-07-10T11:00:26.481418Z",
      "data_removed": false,
      "error": null,
      "id": "bzp5mhiyarcmvoinbxpubjhzou",
      "input": {
        "RN50": true,
        "steps": 250,
        "width": 1280,
        "ViTB16": true,
        "ViTB32": true,
        "height": 768,
        "prompt": "A beautiful painting of a singular lighthouse, shining its light across a tumultuous sea of blood by greg rutkowski and thomas kinkade, Trending on artstation.",
        "init_scale": 1000,
        "skip_steps": 10,
        "range_scale": 150,
        "cutn_batches": 4,
        "display_rate": 20,
        "target_scale": 20000,
        "diffusion_model": "512x512_diffusion_uncond_finetune_008100",
        "clip_guidance_scale": 5000,
        "use_secondary_model": true,
        "diffusion_sampling_mode": "ddim"
      },
      "logs": "2022-07-10 11:00:26.617 | INFO     | dd:start_run:2224 - 💼 1 jobs found.\n2022-07-10 11:00:26.618 | INFO     | dd:start_run:2236 - ⚒️ Session 0ed00f4d-91e7-4ca9-acff-88072c74069e started...\n2022-07-10 11:00:26.619 | INFO     | dd:start_run:2239 - 💼 Processing job 1 of 1...\n2022-07-10 11:00:26.619 | INFO     | dd:start_run:2242 - 🌲 Setting TORCH_HOME environment variable to /root/.cache/disco-diffusion...\n2022-07-10 11:00:26.619 | INFO     | dd:processBatch:2329 - 🌱 Randomly using seed: 2866669839\n2022-07-10 11:00:26.620 | INFO     | dd:free_mem:71 - Clearing CUDA cache on cuda:0...\n2022-07-10 11:00:26.620 | INFO     | dd:do_run:1190 - 💻 Starting Run: ba70ca3b-8ed1-4ac4-a09f-3cc046dd3dea(0) at frame 0\n2022-07-10 11:00:26.620 | INFO     | dd:clipLoad:1182 - 🤖 Loading model 'ViT-B/32'...\n2022-07-10 11:00:31.138 | INFO     | dd:clipLoad:1182 - 🤖 Loading model 'ViT-B/16'...\n2022-07-10 11:00:35.131 | INFO     | dd:clipLoad:1182 - 🤖 Loading model 'RN50'...\n2022-07-10 11:00:38.346 | INFO     | dd:do_run:1216 - 🤖 Loading secondary model...\n2022-07-10 11:00:38.634 | INFO     | dd:do_run:1222 - 🤖 Loading LPIPS...\n/root/.pyenv/versions/3.8.13/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.\n  warnings.warn(\n/root/.pyenv/versions/3.8.13/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=VGG16_Weights.IMAGENET1K_V1`. You can also use `weights=VGG16_Weights.DEFAULT` to get the most up-to-date weights.\n  warnings.warn(msg)\n\u001b[2K\n2022-07-10 11:00:42.292 | INFO     | dd:disco:1502 - timestep_respacing : ddim250 | diffusion_steps: 1000\n2022-07-10 11:00:42.293 | INFO     | dd:prepModels:1054 - Prepping models...\n2022-07-10 11:00:55.511 | INFO     | dd:disco:1532 - Running job '854105ed-bc42-4cf6-a569-59bf14495d4e'...\n2022-07-10 11:00:55.511 | INFO     | dd:disco:1545 - 🌱 Seed used: 2866669839\n2022-07-10 11:00:55.513 | INFO     | dd:disco:1571 - Frame 0 📝 Prompt: ['A beautiful painting of a singular lighthouse, shining its light across a tumultuous sea of blood by greg rutkowski and thomas kinkade, Trending on artstation.']\n\u001b[2K\n\u001b[2K\n\u001b[2K\nBatches:   0%|          | 0/1 [00:00<?, ?it/s]\nOutput()\n2022-07-10 11:00:55.578 | INFO     | dd:free_mem:71 - Clearing CUDA cache on cuda:0...\n\n\n  0%|          | 0/240 [00:00<?, ?it/s]\u001b[A\nBatch 0, step 0, output 0:\n\n\n\u001b[A\n\n\u001b[2K\n\u001b[2K\n<PIL.Image.Image image mode=RGB size=1280x768 at 0x7F4BB3D99280>\n  0%|          | 0/240 [00:03<?, ?it/s]\u001b[A\n\n  0%|          | 1/240 [00:04<16:41,  4.19s/it]\u001b[A\n\n  1%|          | 2/240 [00:08<15:58,  4.03s/it]\u001b[A\n\n  1%|▏         | 3/240 [00:12<15:45,  3.99s/it]\u001b[A\n\n  2%|▏         | 4/240 [00:16<15:42,  4.00s/it]\u001b[A\n\n  2%|▏         | 5/240 [00:20<15:41,  4.00s/it]\u001b[A\n\n  2%|▎         | 6/240 [00:24<15:39,  4.02s/it]\u001b[A\n\n  3%|▎         | 7/240 [00:28<15:39,  4.03s/it]\u001b[A\n\n  3%|▎         | 8/240 [00:32<15:35,  4.03s/it]\u001b[A\n\n  4%|▍         | 9/240 [00:36<15:31,  4.03s/it]\u001b[A\n\n  4%|▍         | 10/240 [00:40<15:24,  4.02s/it]\u001b[A\n\n  5%|▍         | 11/240 [00:44<15:16,  4.00s/it]\u001b[A\n\n  5%|▌         | 12/240 [00:48<15:07,  3.98s/it]\u001b[A\n\n  5%|▌         | 13/240 [00:52<15:00,  3.97s/it]\u001b[A\n\n  6%|▌         | 14/240 [00:56<14:55,  3.96s/it]\u001b[A\n\n  6%|▋         | 15/240 [00:59<14:48,  3.95s/it]\u001b[A\n\n  7%|▋         | 16/240 [01:03<14:42,  3.94s/it]\u001b[A\n\n  7%|▋         | 17/240 [01:07<14:35,  3.93s/it]\u001b[A\n\n  8%|▊         | 18/240 [01:11<14:31,  3.92s/it]\u001b[A\n\n  8%|▊         | 19/240 [01:15<14:26,  3.92s/it]\u001b[A\n\n  8%|▊         | 20/240 [01:19<14:23,  3.92s/it]\u001b[A\nBatch 0, step 20, output 0:\n\n\n\u001b[A\n\n\u001b[2K\n\u001b[2K\n<PIL.Image.Image image mode=RGB size=1280x768 at 0x7F4BB3D999D0>\n  8%|▊         | 20/240 [01:23<14:23,  3.92s/it]\u001b[A\n\n  9%|▉         | 21/240 [01:23<14:37,  4.01s/it]\u001b[A\n\n  9%|▉         | 22/240 [01:27<14:27,  3.98s/it]\u001b[A\n\n 10%|▉         | 23/240 [01:31<14:22,  3.97s/it]\u001b[A\n\n 10%|█         | 24/240 [01:35<14:17,  3.97s/it]\u001b[A\n\n 10%|█         | 25/240 [01:39<14:12,  3.97s/it]\u001b[A\n\n 11%|█         | 26/240 [01:43<14:08,  3.96s/it]\u001b[A\n\n 11%|█▏        | 27/240 [01:47<14:05,  3.97s/it]\u001b[A\n\n 12%|█▏        | 28/240 [01:51<14:02,  3.97s/it]\u001b[A\n\n 12%|█▏        | 29/240 [01:55<13:58,  3.97s/it]\u001b[A\n\n 12%|█▎        | 30/240 [01:59<13:54,  3.98s/it]\u001b[A\n\n 13%|█▎        | 31/240 [02:03<13:50,  3.97s/it]\u001b[A\n\n 13%|█▎        | 32/240 [02:07<13:45,  3.97s/it]\u001b[A\n\n 14%|█▍        | 33/240 [02:11<13:41,  3.97s/it]\u001b[A\n\n 14%|█▍        | 34/240 [02:15<13:36,  3.96s/it]\u001b[A\n\n 15%|█▍        | 35/240 [02:19<13:31,  3.96s/it]\u001b[A\n\n 15%|█▌        | 36/240 [02:23<13:26,  3.96s/it]\u001b[A\n\n 15%|█▌        | 37/240 [02:27<13:22,  3.95s/it]\u001b[A\n\n 16%|█▌        | 38/240 [02:31<13:17,  3.95s/it]\u001b[A\n\n 16%|█▋        | 39/240 [02:34<13:13,  3.95s/it]\u001b[A\n\n 17%|█▋        | 40/240 [02:38<13:08,  3.94s/it]\u001b[A\n\n\nBatch 0, step 40, output 0:\n\u001b[A\n\n\u001b[2K\n\u001b[2K\n<PIL.Image.Image image mode=RGB size=1280x768 at 0x7F4BB3D99700>\n 17%|█▋        | 40/240 [02:42<13:08,  3.94s/it]\u001b[A\n\n 17%|█▋        | 41/240 [02:43<13:22,  4.03s/it]\u001b[A\n\n 18%|█▊        | 42/240 [02:47<13:14,  4.01s/it]\u001b[A\n\n 18%|█▊        | 43/240 [02:51<13:06,  3.99s/it]\u001b[A\n\n 18%|█▊        | 44/240 [02:54<12:59,  3.98s/it]\u001b[A\n\n 19%|█▉        | 45/240 [02:58<12:55,  3.98s/it]\u001b[A\n\n 19%|█▉        | 46/240 [03:02<12:49,  3.97s/it]\u001b[A\n\n 20%|█▉        | 47/240 [03:06<12:45,  3.97s/it]\u001b[A\n\n 20%|██        | 48/240 [03:10<12:40,  3.96s/it]\u001b[A\n\n 20%|██        | 49/240 [03:14<12:36,  3.96s/it]\u001b[A\n\n 21%|██        | 50/240 [03:18<12:32,  3.96s/it]\u001b[A\n\n 21%|██▏       | 51/240 [03:22<12:29,  3.96s/it]\u001b[A\n\n 22%|██▏       | 52/240 [03:26<12:24,  3.96s/it]\u001b[A\n\n 22%|██▏       | 53/240 [03:30<12:20,  3.96s/it]\u001b[A\n\n 22%|██▎       | 54/240 [03:34<12:17,  3.96s/it]\u001b[A\n\n 23%|██▎       | 55/240 [03:38<12:12,  3.96s/it]\u001b[A\n\n 23%|██▎       | 56/240 [03:42<12:07,  3.96s/it]\u001b[A\n\n 24%|██▍       | 57/240 [03:46<12:04,  3.96s/it]\u001b[A\n\n 24%|██▍       | 58/240 [03:50<12:00,  3.96s/it]\u001b[A\n\n 25%|██▍       | 59/240 [03:54<11:55,  3.96s/it]\u001b[A\n\n 25%|██▌       | 60/240 [03:58<11:50,  3.95s/it]\u001b[A\n\n\nBatch 0, step 60, output 0:\n\u001b[A\n\n\u001b[2K\n\u001b[2K\n<PIL.Image.Image image mode=RGB size=1280x768 at 0x7F4BB3D992B0>\n 25%|██▌       | 60/240 [04:02<11:50,  3.95s/it]\u001b[A\n\n 25%|██▌       | 61/240 [04:02<12:26,  4.17s/it]\u001b[A\n\n 26%|██▌       | 62/240 [04:06<12:09,  4.10s/it]\u001b[A\n\n 26%|██▋       | 63/240 [04:10<11:57,  4.05s/it]\u001b[A\n\n 27%|██▋       | 64/240 [04:14<11:47,  4.02s/it]\u001b[A\n\n 27%|██▋       | 65/240 [04:18<11:40,  4.00s/it]\u001b[A\n\n 28%|██▊       | 66/240 [04:22<11:34,  3.99s/it]\u001b[A\n\n 28%|██▊       | 67/240 [04:26<11:27,  3.97s/it]\u001b[A\n\n 28%|██▊       | 68/240 [04:30<11:23,  3.98s/it]\u001b[A\n\n 29%|██▉       | 69/240 [04:34<11:18,  3.97s/it]\u001b[A\n\n 29%|██▉       | 70/240 [04:38<11:14,  3.97s/it]\u001b[A\n\n 30%|██▉       | 71/240 [04:42<11:08,  3.95s/it]\u001b[A\n\n 30%|███       | 72/240 [04:46<11:04,  3.95s/it]\u001b[A\n\n 30%|███       | 73/240 [04:50<10:59,  3.95s/it]\u001b[A\n\n 31%|███       | 74/240 [04:54<10:55,  3.95s/it]\u001b[A\n\n 31%|███▏      | 75/240 [04:58<10:51,  3.95s/it]\u001b[A\n\n 32%|███▏      | 76/240 [05:02<10:47,  3.95s/it]\u001b[A\n\n 32%|███▏      | 77/240 [05:06<10:43,  3.95s/it]\u001b[A\n\n 32%|███▎      | 78/240 [05:10<10:40,  3.95s/it]\u001b[A\n\n 33%|███▎      | 79/240 [05:14<10:35,  3.95s/it]\u001b[A\n\n 33%|███▎      | 80/240 [05:18<10:31,  3.95s/it]\u001b[A\n\n\nBatch 0, step 80, output 0:\n\u001b[A\n\n\u001b[2K\n\u001b[2K\n<PIL.Image.Image image mode=RGB size=1280x768 at 0x7F4BB3D99BE0>\n 33%|███▎      | 80/240 [05:21<10:31,  3.95s/it]\u001b[A\n\n 34%|███▍      | 81/240 [05:22<10:58,  4.14s/it]\u001b[A\n\n 34%|███▍      | 82/240 [05:26<10:45,  4.09s/it]\u001b[A\n\n 35%|███▍      | 83/240 [05:30<10:36,  4.05s/it]\u001b[A\n\n 35%|███▌      | 84/240 [05:34<10:27,  4.02s/it]\u001b[A\n\n 35%|███▌      | 85/240 [05:38<10:19,  4.00s/it]\u001b[A\n\n 36%|███▌      | 86/240 [05:42<10:14,  3.99s/it]\u001b[A\n\n 36%|███▋      | 87/240 [05:46<10:09,  3.98s/it]\u001b[A\n\n 37%|███▋      | 88/240 [05:50<10:02,  3.97s/it]\u001b[A\n\n 37%|███▋      | 89/240 [05:54<09:57,  3.96s/it]\u001b[A\n\n 38%|███▊      | 90/240 [05:58<09:54,  3.96s/it]\u001b[A\n\n 38%|███▊      | 91/240 [06:02<10:03,  4.05s/it]\u001b[A\n\n 38%|███▊      | 92/240 [06:06<10:07,  4.10s/it]\u001b[A\n\n 39%|███▉      | 93/240 [06:10<10:07,  4.13s/it]\u001b[A\n\n 39%|███▉      | 94/240 [06:15<10:07,  4.16s/it]\u001b[A\n\n 40%|███▉      | 95/240 [06:19<10:07,  4.19s/it]\u001b[A\n\n 40%|████      | 96/240 [06:23<10:05,  4.20s/it]\u001b[A\n\n 40%|████      | 97/240 [06:27<10:01,  4.21s/it]\u001b[A\n\n 41%|████      | 98/240 [06:32<09:57,  4.21s/it]\u001b[A\n\n 41%|████▏     | 99/240 [06:36<09:54,  4.22s/it]\u001b[A\n\n 42%|████▏     | 100/240 [06:40<09:51,  4.22s/it]\u001b[A\nBatch 0, step 100, output 0:\n\n\n\u001b[A\n\n\u001b[2K\n\u001b[2K\n<PIL.Image.Image image mode=RGB size=1280x768 at 0x7F4BB3D995B0>\n 42%|████▏     | 100/240 [06:44<09:51,  4.22s/it]\u001b[A\n\n 42%|████▏     | 101/240 [06:45<10:14,  4.42s/it]\u001b[A\n\n 42%|████▎     | 102/240 [06:49<10:01,  4.36s/it]\u001b[A\n\n 43%|████▎     | 103/240 [06:53<09:50,  4.31s/it]\u001b[A\n\n 43%|████▎     | 104/240 [06:58<09:42,  4.28s/it]\u001b[A\n\n 44%|████▍     | 105/240 [07:02<09:34,  4.26s/it]\u001b[A\n\n 44%|████▍     | 106/240 [07:06<09:28,  4.24s/it]\u001b[A\n\n 45%|████▍     | 107/240 [07:10<09:22,  4.23s/it]\u001b[A\n\n 45%|████▌     | 108/240 [07:14<09:17,  4.22s/it]\u001b[A\n\n 45%|████▌     | 109/240 [07:19<09:14,  4.23s/it]\u001b[A\n\n 46%|████▌     | 110/240 [07:23<09:08,  4.22s/it]\u001b[A\n\n 46%|████▋     | 111/240 [07:27<09:04,  4.22s/it]\u001b[A\n\n 47%|████▋     | 112/240 [07:31<08:59,  4.22s/it]\u001b[A\n\n 47%|████▋     | 113/240 [07:35<08:56,  4.22s/it]\u001b[A\n\n 48%|████▊     | 114/240 [07:40<08:51,  4.22s/it]\u001b[A\n\n 48%|████▊     | 115/240 [07:44<08:46,  4.21s/it]\u001b[A\n\n 48%|████▊     | 116/240 [07:48<08:41,  4.21s/it]\u001b[A\n\n 49%|████▉     | 117/240 [07:52<08:37,  4.21s/it]\u001b[A\n\n 49%|████▉     | 118/240 [07:56<08:32,  4.20s/it]\u001b[A\n\n 50%|████▉     | 119/240 [08:01<08:30,  4.22s/it]\u001b[A\n\n 50%|█████     | 120/240 [08:05<08:26,  4.22s/it]\u001b[A\n\n\nBatch 0, step 120, output 0:\n\u001b[A\n\n\u001b[2K\n\u001b[2K\n<PIL.Image.Image image mode=RGB size=1280x768 at 0x7F4BB3D99CA0>\n 50%|█████     | 120/240 [08:09<08:26,  4.22s/it]\u001b[A\n\n 50%|█████     | 121/240 [08:10<08:44,  4.41s/it]\u001b[A\n\n 51%|█████     | 122/240 [08:14<08:32,  4.35s/it]\u001b[A\n\n 51%|█████▏    | 123/240 [08:18<08:23,  4.31s/it]\u001b[A\n\n 52%|█████▏    | 124/240 [08:22<08:16,  4.28s/it]\u001b[A\n\n 52%|█████▏    | 125/240 [08:27<08:10,  4.26s/it]\u001b[A\n\n 52%|█████▎    | 126/240 [08:31<08:04,  4.25s/it]\u001b[A\n\n 53%|█████▎    | 127/240 [08:35<07:59,  4.24s/it]\u001b[A\n\n 53%|█████▎    | 128/240 [08:39<07:53,  4.23s/it]\u001b[A\n\n 54%|█████▍    | 129/240 [08:43<07:49,  4.23s/it]\u001b[A\n\n 54%|█████▍    | 130/240 [08:48<07:44,  4.22s/it]\u001b[A\n\n 55%|█████▍    | 131/240 [08:52<07:38,  4.21s/it]\u001b[A\n\n 55%|█████▌    | 132/240 [08:56<07:35,  4.21s/it]\u001b[A\n\n 55%|█████▌    | 133/240 [09:00<07:31,  4.22s/it]\u001b[A\n\n 56%|█████▌    | 134/240 [09:05<07:27,  4.22s/it]\u001b[A\n\n 56%|█████▋    | 135/240 [09:09<07:23,  4.22s/it]\u001b[A\n\n 57%|█████▋    | 136/240 [09:13<07:18,  4.21s/it]\u001b[A\n\n 57%|█████▋    | 137/240 [09:17<07:13,  4.21s/it]\u001b[A\n\n 57%|█████▊    | 138/240 [09:21<07:08,  4.20s/it]\u001b[A\n\n 58%|█████▊    | 139/240 [09:26<07:05,  4.21s/it]\u001b[A\n\n 58%|█████▊    | 140/240 [09:30<07:00,  4.21s/it]\u001b[A\n\n\nBatch 0, step 140, output 0:\n\u001b[A\n\n\u001b[2K\n\u001b[2K\n<PIL.Image.Image image mode=RGB size=1280x768 at 0x7F4BB3D99820>\n 58%|█████▊    | 140/240 [09:34<07:00,  4.21s/it]\u001b[A\n\n 59%|█████▉    | 141/240 [09:35<07:17,  4.42s/it]\u001b[A\n\n 59%|█████▉    | 142/240 [09:39<07:06,  4.35s/it]\u001b[A\n\n 60%|█████▉    | 143/240 [09:43<06:57,  4.31s/it]\u001b[A\n\n 60%|██████    | 144/240 [09:47<06:51,  4.28s/it]\u001b[A\n\n 60%|██████    | 145/240 [09:52<06:44,  4.26s/it]\u001b[A\n\n 61%|██████    | 146/240 [09:56<06:39,  4.25s/it]\u001b[A\n\n 61%|██████▏   | 147/240 [10:00<06:35,  4.25s/it]\u001b[A\n\n 62%|██████▏   | 148/240 [10:04<06:30,  4.24s/it]\u001b[A\n\n 62%|██████▏   | 149/240 [10:08<06:26,  4.24s/it]\u001b[A\n\n 62%|██████▎   | 150/240 [10:13<06:20,  4.23s/it]\u001b[A\n\n 63%|██████▎   | 151/240 [10:17<06:15,  4.22s/it]\u001b[A\n\n 63%|██████▎   | 152/240 [10:21<06:11,  4.22s/it]\u001b[A\n\n 64%|██████▍   | 153/240 [10:25<06:07,  4.22s/it]\u001b[A\n\n 64%|██████▍   | 154/240 [10:30<06:02,  4.22s/it]\u001b[A\n\n 65%|██████▍   | 155/240 [10:34<05:58,  4.22s/it]\u001b[A\n\n 65%|██████▌   | 156/240 [10:38<05:54,  4.21s/it]\u001b[A\n\n 65%|██████▌   | 157/240 [10:42<05:49,  4.21s/it]\u001b[A\n\n 66%|██████▌   | 158/240 [10:46<05:45,  4.22s/it]\u001b[A\n\n 66%|██████▋   | 159/240 [10:51<05:42,  4.23s/it]\u001b[A\n\n 67%|██████▋   | 160/240 [10:55<05:38,  4.23s/it]\u001b[A\n\n\nBatch 0, step 160, output 0:\n\u001b[A\n\n\u001b[2K\n\u001b[2K\n<PIL.Image.Image image mode=RGB size=1280x768 at 0x7F4BB3D99340>\n 67%|██████▋   | 160/240 [10:59<05:38,  4.23s/it]\u001b[A\n\n 67%|██████▋   | 161/240 [11:00<05:47,  4.40s/it]\u001b[A\n\n 68%|██████▊   | 162/240 [11:04<05:38,  4.35s/it]\u001b[A\n\n 68%|██████▊   | 163/240 [11:08<05:32,  4.31s/it]\u001b[A\n\n 68%|██████▊   | 164/240 [11:12<05:25,  4.28s/it]\u001b[A\n\n 69%|██████▉   | 165/240 [11:17<05:19,  4.25s/it]\u001b[A\n\n 69%|██████▉   | 166/240 [11:21<05:14,  4.24s/it]\u001b[A\n\n 70%|██████▉   | 167/240 [11:25<05:09,  4.24s/it]\u001b[A\n\n 70%|███████   | 168/240 [11:29<05:04,  4.23s/it]\u001b[A\n\n 70%|███████   | 169/240 [11:33<05:00,  4.23s/it]\u001b[A\n\n 71%|███████   | 170/240 [11:38<04:56,  4.23s/it]\u001b[A\n\n 71%|███████▏  | 171/240 [11:42<04:51,  4.22s/it]\u001b[A\n\n 72%|███████▏  | 172/240 [11:46<04:47,  4.22s/it]\u001b[A\n\n 72%|███████▏  | 173/240 [11:50<04:42,  4.22s/it]\u001b[A\n\n 72%|███████▎  | 174/240 [11:55<04:38,  4.22s/it]\u001b[A\n\n 73%|███████▎  | 175/240 [11:59<04:34,  4.22s/it]\u001b[A\n\n 73%|███████▎  | 176/240 [12:03<04:29,  4.22s/it]\u001b[A\n\n 74%|███████▍  | 177/240 [12:07<04:25,  4.21s/it]\u001b[A\n\n 74%|███████▍  | 178/240 [12:11<04:21,  4.22s/it]\u001b[A\n\n 75%|███████▍  | 179/240 [12:16<04:17,  4.22s/it]\u001b[A\n\n 75%|███████▌  | 180/240 [12:20<04:13,  4.22s/it]\u001b[A\nBatch 0, step 180, output 0:\n\n\n\u001b[A\n\n\u001b[2K\n\u001b[2K\n<PIL.Image.Image image mode=RGB size=1280x768 at 0x7F4BB3D99D90>\n 75%|███████▌  | 180/240 [12:24<04:13,  4.22s/it]\u001b[A\n\n 75%|███████▌  | 181/240 [12:25<04:18,  4.38s/it]\u001b[A\n\n 76%|███████▌  | 182/240 [12:29<04:10,  4.33s/it]\u001b[A\n\n 76%|███████▋  | 183/240 [12:33<04:04,  4.29s/it]\u001b[A\n\n 77%|███████▋  | 184/240 [12:37<03:59,  4.27s/it]\u001b[A\n\n 77%|███████▋  | 185/240 [12:41<03:53,  4.25s/it]\u001b[A\n\n 78%|███████▊  | 186/240 [12:46<03:48,  4.24s/it]\u001b[A\n\n 78%|███████▊  | 187/240 [12:50<03:44,  4.23s/it]\u001b[A\n\n 78%|███████▊  | 188/240 [12:54<03:39,  4.22s/it]\u001b[A\n\n 79%|███████▉  | 189/240 [12:58<03:35,  4.22s/it]\u001b[A\n\n 79%|███████▉  | 190/240 [13:02<03:30,  4.22s/it]\u001b[A\n\n 80%|███████▉  | 191/240 [13:07<03:26,  4.22s/it]\u001b[A\n\n 80%|████████  | 192/240 [13:11<03:22,  4.22s/it]\u001b[A\n\n 80%|████████  | 193/240 [13:15<03:18,  4.22s/it]\u001b[A\n\n 81%|████████  | 194/240 [13:19<03:14,  4.22s/it]\u001b[A\n\n 81%|████████▏ | 195/240 [13:24<03:10,  4.22s/it]\u001b[A\n\n 82%|████████▏ | 196/240 [13:28<03:06,  4.23s/it]\u001b[A\n\n 82%|████████▏ | 197/240 [13:32<03:01,  4.23s/it]\u001b[A\n\n 82%|████████▎ | 198/240 [13:36<02:57,  4.23s/it]\u001b[A\n\n 83%|████████▎ | 199/240 [13:41<02:54,  4.25s/it]\u001b[A\n\n 83%|████████▎ | 200/240 [13:45<02:49,  4.24s/it]\u001b[A\n\n\nBatch 0, step 200, output 0:\n\u001b[A\n\n\u001b[2K\n\u001b[2K\n<PIL.Image.Image image mode=RGB size=1280x768 at 0x7F4BB3D99B80>\n 83%|████████▎ | 200/240 [13:49<02:49,  4.24s/it]\u001b[A\n\n 84%|████████▍ | 201/240 [13:50<02:50,  4.38s/it]\u001b[A\n\n 84%|████████▍ | 202/240 [13:54<02:44,  4.33s/it]\u001b[A\n\n 85%|████████▍ | 203/240 [13:58<02:38,  4.29s/it]\u001b[A\n\n 85%|████████▌ | 204/240 [14:02<02:33,  4.26s/it]\u001b[A\n\n 85%|████████▌ | 205/240 [14:06<02:29,  4.26s/it]\u001b[A\n\n 86%|████████▌ | 206/240 [14:11<02:24,  4.25s/it]\u001b[A\n\n 86%|████████▋ | 207/240 [14:15<02:20,  4.25s/it]\u001b[A\n\n 87%|████████▋ | 208/240 [14:19<02:15,  4.24s/it]\u001b[A\n\n 87%|████████▋ | 209/240 [14:23<02:11,  4.24s/it]\u001b[A\n\n 88%|████████▊ | 210/240 [14:28<02:06,  4.23s/it]\u001b[A\n\n 88%|████████▊ | 211/240 [14:32<02:02,  4.21s/it]\u001b[A\n\n 88%|████████▊ | 212/240 [14:36<01:58,  4.22s/it]\u001b[A\n\n 89%|████████▉ | 213/240 [14:40<01:54,  4.22s/it]\u001b[A\n\n 89%|████████▉ | 214/240 [14:44<01:49,  4.22s/it]\u001b[A\n\n 90%|████████▉ | 215/240 [14:49<01:45,  4.22s/it]\u001b[A\n\n 90%|█████████ | 216/240 [14:53<01:41,  4.22s/it]\u001b[A\n\n 90%|█████████ | 217/240 [14:57<01:37,  4.22s/it]\u001b[A\n\n 91%|█████████ | 218/240 [15:01<01:32,  4.22s/it]\u001b[A\n\n 91%|█████████▏| 219/240 [15:05<01:28,  4.21s/it]\u001b[A\n\n 92%|█████████▏| 220/240 [15:10<01:24,  4.21s/it]\u001b[A\n\n\nBatch 0, step 220, output 0:\n\u001b[A\n\n\u001b[2K\n\u001b[2K\n<PIL.Image.Image image mode=RGB size=1280x768 at 0x7F4BB3D99C40>\n 92%|█████████▏| 220/240 [15:14<01:24,  4.21s/it]\u001b[A\n\n 92%|█████████▏| 221/240 [15:14<01:22,  4.36s/it]\u001b[A\n\n 92%|█████████▎| 222/240 [15:19<01:17,  4.32s/it]\u001b[A\n\n 93%|█████████▎| 223/240 [15:23<01:12,  4.28s/it]\u001b[A\n\n 93%|█████████▎| 224/240 [15:27<01:08,  4.26s/it]\u001b[A\n\n 94%|█████████▍| 225/240 [15:31<01:03,  4.24s/it]\u001b[A\n\n 94%|█████████▍| 226/240 [15:35<00:59,  4.23s/it]\u001b[A\n\n 95%|█████████▍| 227/240 [15:40<00:54,  4.23s/it]\u001b[A\n\n 95%|█████████▌| 228/240 [15:44<00:50,  4.23s/it]\u001b[A\n\n 95%|█████████▌| 229/240 [15:48<00:46,  4.23s/it]\u001b[A\n\n 96%|█████████▌| 230/240 [15:52<00:42,  4.22s/it]\u001b[A\n\n 96%|█████████▋| 231/240 [15:56<00:37,  4.22s/it]\u001b[A\n\n 97%|█████████▋| 232/240 [16:01<00:33,  4.22s/it]\u001b[A\n\n 97%|█████████▋| 233/240 [16:05<00:29,  4.22s/it]\u001b[A\n\n 98%|█████████▊| 234/240 [16:09<00:25,  4.24s/it]\u001b[A\n\n 98%|█████████▊| 235/240 [16:13<00:21,  4.23s/it]\u001b[A\n\n 98%|█████████▊| 236/240 [16:18<00:16,  4.24s/it]\u001b[A\n\n 99%|█████████▉| 237/240 [16:22<00:12,  4.24s/it]\u001b[A\n\n 99%|█████████▉| 238/240 [16:26<00:08,  4.24s/it]\u001b[A\n\n100%|█████████▉| 239/240 [16:30<00:04,  4.23s/it]\u001b[A\n\n\nBatch 0, step 239, output 0:\n\u001b[A\n\n\u001b[2K\n\u001b[2K\n<PIL.Image.Image image mode=RGB size=1280x768 at 0x7F4BB3D996A0>\n100%|█████████▉| 239/240 [16:35<00:04,  4.23s/it]\u001b[A2022-07-10 11:17:31.125 | INFO     | dd:disco:1820 - Image render completed.\n2022-07-10 11:17:31.557 | INFO     | dd:disco:1840 - Image saved to '/src/images_out/ba70ca3b-8ed1-4ac4-a09f-3cc046dd3dea/ba70ca3b-8ed1-4ac4-a09f-3cc046dd3dea(0)_0.png'\n\n\n100%|██████████| 240/240 [16:35<00:00,  4.50s/it]\u001b[A\n100%|██████████| 240/240 [16:35<00:00,  4.15s/it]\n2022-07-10 11:17:31.558 | INFO     | dd:free_mem:71 - Clearing CUDA cache on cuda:0...\n2022-07-10 11:17:31.558 | SUCCESS  | dd:start_run:2245 - ✅ Session 0ed00f4d-91e7-4ca9-acff-88072c74069e finished by user.\n2022-07-10 11:17:31.558 | DEBUG    | dd:sendSMS:2530 - Not sending SMS\n2022-07-10 11:17:31.558 | INFO     | dd:free_mem:71 - Clearing CUDA cache on cuda:0...",
      "metrics": {
        "predict_time": 1030.13119,
        "total_time": 1030.338695
      },
      "model": "nightmareai/disco-diffusion",
      "output": [
        "https://replicate.delivery/mgxm/d3e8443d-cb0e-45b4-b712-4b6a5f9c2a81/progress.png",
        "https://replicate.delivery/mgxm/79840fdf-a9f6-4a30-9b0a-7a5e084ca39b/progress.png",
        "https://replicate.delivery/mgxm/6c8d7bfb-d183-4b51-9278-979fd6231d78/progress.png",
        "https://replicate.delivery/mgxm/2fa3d15f-3ed5-422e-9ae4-04138f906a0a/progress.png",
        "https://replicate.delivery/mgxm/c416110b-f805-4f94-a74d-7978f84a94e3/progress.png",
        "https://replicate.delivery/mgxm/a8d6cf08-f57d-41b2-a8b7-45955f0097df/progress.png",
        "https://replicate.delivery/mgxm/8278c91e-ad9d-4eb6-8357-6ffd22266fa5/progress.png",
        "https://replicate.delivery/mgxm/4383264d-01e3-41d9-9c37-beae099c20c1/progress.png",
        "https://replicate.delivery/mgxm/b6341fb5-4546-46b4-b4c3-ae17f6aef37d/progress.png",
        "https://replicate.delivery/mgxm/d277784c-7819-4ac3-a9f4-8bf9bd756813/progress.png",
        "https://replicate.delivery/mgxm/d99647d9-f1c3-44e0-9b48-d2724c25044b/progress.png",
        "https://replicate.delivery/mgxm/e6217cfd-ff8b-44b6-b3af-d6ff767dad2b/progress.png",
        "https://replicate.delivery/mgxm/e9e07816-6147-4a86-8b27-10058e3b4620/progress.png",
        "https://replicate.delivery/mgxm/eb8dc56a-1e37-4e6a-8fd7-51ad12b399f5/ba70ca3b-8ed1-4ac4-a09f-3cc046dd3dea0_0.png"
      ],
      "started_at": "2022-07-10T11:00:26.688923Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/bzp5mhiyarcmvoinbxpubjhzou",
        "cancel": "https://api.replicate.com/v1/predictions/bzp5mhiyarcmvoinbxpubjhzou/cancel"
      },
      "version": "bc78822513db3dd6fc3be978d68472258b6f86a3a8ebf6aa8c5bc60b66bbae58",
      "webhook": null
    },
    "description": "Generate images using a variety of techniques - Powered by Discoart",
    "github_url": "https://github.com/jina-ai/discoart",
    "latest_version": {
      "id": "3c128f652e9f24e72896ac0b019e47facfd6bccf93104d50f09f1f2196325507",
      "created_at": "2022-07-29T15:16:12.976042Z",
      "cog_version": "v0.4.0+dev",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Response"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Request"
                    }
                  }
                }
              }
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "RN50": {
                  "type": "boolean",
                  "title": "Rn50",
                  "default": true,
                  "x-order": 10,
                  "description": "Use RN50 model"
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "maximum": 4294967295,
                  "minimum": 0,
                  "x-order": 42,
                  "description": "Seed (leave empty to use a random seed)"
                },
                "RN101": {
                  "type": "boolean",
                  "title": "Rn101",
                  "default": false,
                  "x-order": 15,
                  "description": "Use RN101 model"
                },
                "steps": {
                  "type": "integer",
                  "title": "Steps",
                  "default": 100,
                  "x-order": 0,
                  "description": "Number of steps, higher numbers will give more refined output but will take longer"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 1280,
                  "x-order": 2,
                  "description": "Width of the output image, higher numbers will take longer"
                },
                "RN50x4": {
                  "type": "boolean",
                  "title": "Rn50X4",
                  "default": false,
                  "x-order": 11,
                  "description": "Use RN50x4 model"
                },
                "ViTB16": {
                  "type": "boolean",
                  "title": "Vitb16",
                  "default": true,
                  "x-order": 7,
                  "description": "Use ViTB16 model"
                },
                "ViTB32": {
                  "type": "boolean",
                  "title": "Vitb32",
                  "default": true,
                  "x-order": 6,
                  "description": "Use ViTB32 model"
                },
                "ViTL14": {
                  "type": "boolean",
                  "title": "Vitl14",
                  "default": false,
                  "x-order": 8,
                  "description": "Use ViTB14 model"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 768,
                  "x-order": 3,
                  "description": "Height of the output image, higher numbers will take longer"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "A beautiful painting of a singular lighthouse, shining its light across a tumultuous sea of blood by greg rutkowski and thomas kinkade, Trending on artstation.",
                  "x-order": 1,
                  "description": "Text Prompt"
                },
                "RN50x16": {
                  "type": "boolean",
                  "title": "Rn50X16",
                  "default": false,
                  "x-order": 12,
                  "description": "Use RN50x16 model"
                },
                "RN50x64": {
                  "type": "boolean",
                  "title": "Rn50X64",
                  "default": false,
                  "x-order": 13,
                  "description": "Use RN50x64 model"
                },
                "RN50x101": {
                  "type": "boolean",
                  "title": "Rn50X101",
                  "default": false,
                  "x-order": 14,
                  "description": "Use RN50x101 model"
                },
                "tv_scale": {
                  "type": "integer",
                  "title": "Tv Scale",
                  "default": 0,
                  "x-order": 31,
                  "description": "TV Scale"
                },
                "sat_scale": {
                  "type": "integer",
                  "title": "Sat Scale",
                  "default": 0,
                  "x-order": 33,
                  "description": "Saturation Scale"
                },
                "skip_augs": {
                  "type": "boolean",
                  "title": "Skip Augs",
                  "default": false,
                  "x-order": 35,
                  "description": "Skip Augmentations"
                },
                "RN50_cc12m": {
                  "type": "boolean",
                  "title": "Rn50 Cc12M",
                  "default": false,
                  "x-order": 24,
                  "description": "Use RN50_cc12m model"
                },
                "ViTL14_336": {
                  "type": "boolean",
                  "title": "Vitl14 336",
                  "default": false,
                  "x-order": 9,
                  "description": "Use ViTL14_336 model"
                },
                "init_image": {
                  "type": "string",
                  "title": "Init Image",
                  "format": "uri",
                  "x-order": 36,
                  "description": "Initial image to start generation from"
                },
                "init_scale": {
                  "type": "integer",
                  "title": "Init Scale",
                  "default": 1000,
                  "x-order": 38,
                  "description": "Initial Scale"
                },
                "skip_steps": {
                  "type": "integer",
                  "title": "Skip Steps",
                  "default": 10,
                  "x-order": 40,
                  "description": "Skip Steps"
                },
                "range_scale": {
                  "type": "integer",
                  "title": "Range Scale",
                  "default": 150,
                  "x-order": 32,
                  "description": "Range Scale"
                },
                "cutn_batches": {
                  "type": "integer",
                  "title": "Cutn Batches",
                  "default": 4,
                  "x-order": 34,
                  "description": "Cut Batches"
                },
                "display_rate": {
                  "type": "integer",
                  "title": "Display Rate",
                  "default": 20,
                  "x-order": 41,
                  "description": "Steps between outputs, lower numbers may slow down generation."
                },
                "target_image": {
                  "type": "string",
                  "title": "Target Image",
                  "format": "uri",
                  "x-order": 37,
                  "description": "Target image to generate towards, similarly to the text prompt"
                },
                "target_scale": {
                  "type": "integer",
                  "title": "Target Scale",
                  "default": 20000,
                  "x-order": 39,
                  "description": "Target Scale"
                },
                "RN101_yfcc15m": {
                  "type": "boolean",
                  "title": "Rn101 Yfcc15M",
                  "default": false,
                  "x-order": 27,
                  "description": "Use RN101_yfcc15m model"
                },
                "RN50_yffcc15m": {
                  "type": "boolean",
                  "title": "Rn50 Yffcc15M",
                  "default": false,
                  "x-order": 23,
                  "description": "Use RN50_yffcc15m model"
                },
                "diffusion_model": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/diffusion_model"
                    }
                  ],
                  "default": "512x512_diffusion_uncond_finetune_008100",
                  "x-order": 4,
                  "description": "Diffusion Model"
                },
                "ViTB32_laion2b_e16": {
                  "type": "boolean",
                  "title": "Vitb32 Laion2B E16",
                  "default": false,
                  "x-order": 16,
                  "description": "Use ViTB32_laion2b_e16 model"
                },
                "clip_guidance_scale": {
                  "type": "integer",
                  "title": "Clip Guidance Scale",
                  "default": 5000,
                  "x-order": 30,
                  "description": "CLIP Guidance Scale"
                },
                "use_secondary_model": {
                  "type": "boolean",
                  "title": "Use Secondary Model",
                  "default": true,
                  "x-order": 29,
                  "description": "Use secondary model"
                },
                "RN50_quickgelu_cc12m": {
                  "type": "boolean",
                  "title": "Rn50 Quickgelu Cc12M",
                  "default": false,
                  "x-order": 26,
                  "description": "Use RN50_quickgelu_cc12m model"
                },
                "ViTB16_laion400m_e31": {
                  "type": "boolean",
                  "title": "Vitb16 Laion400M E31",
                  "default": false,
                  "x-order": 21,
                  "description": "Use ViTB16_laion400m_e31 model"
                },
                "ViTB16_laion400m_e32": {
                  "type": "boolean",
                  "title": "Vitb16 Laion400M E32",
                  "default": false,
                  "x-order": 22,
                  "description": "Use ViTB16_laion400m_e32 model"
                },
                "ViTB32_laion400m_e31": {
                  "type": "boolean",
                  "title": "Vitb32 Laion400M E31",
                  "default": false,
                  "x-order": 17,
                  "description": "Use ViTB32_laion400m_e31 model"
                },
                "ViTB32_laion400m_e32": {
                  "type": "boolean",
                  "title": "Vitb32 Laion400M E32",
                  "default": false,
                  "x-order": 18,
                  "description": "Use ViTB32_laion400m_e32 model"
                },
                "RN50_quickgelu_yfcc15m": {
                  "type": "boolean",
                  "title": "Rn50 Quickgelu Yfcc15M",
                  "default": false,
                  "x-order": 25,
                  "description": "Use RN50_quickgelu_yfcc15m model"
                },
                "RN101_quickgelu_yfcc15m": {
                  "type": "boolean",
                  "title": "Rn101 Quickgelu Yfcc15M",
                  "default": false,
                  "x-order": 28,
                  "description": "Use RN101_quickgelu_yfcc15m model"
                },
                "diffusion_sampling_mode": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/diffusion_sampling_mode"
                    }
                  ],
                  "default": "ddim",
                  "x-order": 5,
                  "description": "Diffusion Sampling Mode"
                },
                "ViTB32quickgelu_laion400m_e31": {
                  "type": "boolean",
                  "title": "Vitb32Quickgelu Laion400M E31",
                  "default": false,
                  "x-order": 19,
                  "description": "Use ViTB32quickgelu_laion400m_e31 model"
                },
                "ViTB32quickgelu_laion400m_e32": {
                  "type": "boolean",
                  "title": "Vitb32Quickgelu Laion400M E32",
                  "default": false,
                  "x-order": 20,
                  "description": "Use ViTB32quickgelu_laion400m_e32 model"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output",
              "x-cog-array-type": "iterator"
            },
            "Status": {
              "enum": [
                "processing",
                "succeeded",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "Request": {
              "type": "object",
              "title": "Request",
              "properties": {
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                }
              },
              "description": "The request body for a prediction"
            },
            "Response": {
              "type": "object",
              "title": "Response",
              "required": [
                "status"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                }
              },
              "description": "The response body for a prediction"
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "diffusion_model": {
              "enum": [
                "256x256_diffusion_uncond",
                "512x512_diffusion_uncond_finetune_008100",
                "PulpSciFiDiffusion",
                "pixel_art_diffusion_hard_256",
                "pixel_art_diffusion_soft_256",
                "pixelartdiffusion4k",
                "PADexpanded",
                "watercolordiffusion",
                "watercolordiffusion_2",
                "256x256_openai_comics_faces_v2.by_alex_spirin_114k",
                "portrait_generator_v001_ema_0.9999_1MM",
                "FeiArt_Handpainted_CG_Diffusion",
                "Ukiyo-e_Diffusion_All_V1.by_thegenerativegeneration",
                "IsometricDiffusionRevrart512px",
                "LiminalDiffusion",
                "FloralDiffusion"
              ],
              "type": "string",
              "title": "diffusion_model",
              "description": "An enumeration."
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            },
            "diffusion_sampling_mode": {
              "enum": [
                "plms",
                "ddim"
              ],
              "type": "string",
              "title": "diffusion_sampling_mode",
              "description": "An enumeration."
            }
          }
        }
      }
    },
    "license_url": "https://github.com/jina-ai/discoart/blob/main/LICENSE",
    "name": "disco-diffusion",
    "owner": "nightmareai",
    "paper_url": null,
    "run_count": 64365,
    "url": "https://replicate.com/nightmareai/disco-diffusion",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/nSBVHLqeoD1KECVJ5OJSm90ihtI0zm4qeBvQ9ACZNMQUfg9jA/out-0.png",
    "created_at": "2023-12-04T03:07:24.832379Z",
    "default_example": {
      "completed_at": "2023-12-04T04:30:13.212351Z",
      "created_at": "2023-12-04T04:27:50.578331Z",
      "data_removed": false,
      "error": null,
      "id": "o23ccgdbvi46p2uvxuqrhoccry",
      "input": {
        "style": "None",
        "width": 1024,
        "height": 1024,
        "prompt": "an astronaut sitting in a diner, eating fries, cinematic, analog film",
        "scheduler": "DPMSolverMultistep",
        "num_outputs": 1,
        "guidance_scale": 4.5,
        "num_inference_steps": 14
      },
      "logs": "Using seed: 255397398\nPrompt: an astronaut sitting in a diner, eating fries, cinematic, analog film  Negative Prompt: None\n  0%|          | 0/14 [00:00<?, ?it/s]\n  7%|▋         | 1/14 [00:00<00:04,  2.86it/s]\n 14%|█▍        | 2/14 [00:00<00:03,  3.16it/s]\n 21%|██▏       | 3/14 [00:00<00:03,  3.26it/s]\n 29%|██▊       | 4/14 [00:01<00:03,  3.29it/s]\n 36%|███▌      | 5/14 [00:01<00:02,  3.32it/s]\n 43%|████▎     | 6/14 [00:01<00:02,  3.34it/s]\n 50%|█████     | 7/14 [00:02<00:02,  3.35it/s]\n 57%|█████▋    | 8/14 [00:02<00:01,  3.36it/s]\n 64%|██████▍   | 9/14 [00:02<00:01,  3.36it/s]\n 71%|███████▏  | 10/14 [00:03<00:01,  3.36it/s]\n 79%|███████▊  | 11/14 [00:03<00:00,  3.36it/s]\n 86%|████████▌ | 12/14 [00:03<00:00,  3.36it/s]\n 93%|█████████▎| 13/14 [00:03<00:00,  3.36it/s]\n100%|██████████| 14/14 [00:04<00:00,  3.36it/s]\n100%|██████████| 14/14 [00:04<00:00,  3.33it/s]",
      "metrics": {
        "predict_time": 6.041227,
        "total_time": 142.63402
      },
      "model": "lucataco/pixart-xl-2",
      "output": [
        "https://replicate.delivery/pbxt/nSBVHLqeoD1KECVJ5OJSm90ihtI0zm4qeBvQ9ACZNMQUfg9jA/out-0.png"
      ],
      "started_at": "2023-12-04T04:30:07.171124Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/o23ccgdbvi46p2uvxuqrhoccry",
        "cancel": "https://api.replicate.com/v1/predictions/o23ccgdbvi46p2uvxuqrhoccry/cancel"
      },
      "version": "816c99673841b9448bc2539834c16d40e0315bbf92fef0317b57a226727409bb",
      "webhook": null
    },
    "description": "PixArt-Alpha 1024px is a transformer-based text-to-image diffusion system trained on text embeddings from T5",
    "github_url": "https://github.com/lucataco/cog-pixart-xl-2",
    "latest_version": {
      "id": "816c99673841b9448bc2539834c16d40e0315bbf92fef0317b57a226727409bb",
      "created_at": "2023-12-04T04:27:28.975829Z",
      "cog_version": "0.8.6",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 9,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "style": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/style"
                    }
                  ],
                  "default": "None",
                  "x-order": 2,
                  "description": "Image style"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 1024,
                  "x-order": 3,
                  "description": "Width of output image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 1024,
                  "x-order": 4,
                  "description": "Height of output image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "A small cactus with a happy face in the Sahara desert",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "DPMSolverMultistep",
                  "x-order": 6,
                  "description": "scheduler"
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 5,
                  "description": "Number of images to output."
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 4.5,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Scale for classifier-free guidance"
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "x-order": 1,
                  "description": "Negative prompt"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 14,
                  "maximum": 100,
                  "minimum": 1,
                  "x-order": 7,
                  "description": "Number of denoising steps"
                }
              }
            },
            "style": {
              "enum": [
                "None",
                "Cinematic",
                "Photographic",
                "Anime",
                "Manga",
                "Digital Art",
                "Pixel Art",
                "Fantasy Art",
                "Neonpunk",
                "3D Model"
              ],
              "type": "string",
              "title": "style",
              "description": "An enumeration."
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/stabilityai/stable-diffusion-xl-base-1.0/blob/main/LICENSE.md",
    "name": "pixart-xl-2",
    "owner": "lucataco",
    "paper_url": "https://huggingface.co/papers/2310.00426",
    "run_count": 51748,
    "url": "https://replicate.com/lucataco/pixart-xl-2",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/koQLfGV4o8yWGi4reeIvJQwCxmxrD3S7iQFGre8IfISrpnCTC/out-0.png",
    "created_at": "2024-02-18T20:17:39.723265Z",
    "default_example": {
      "completed_at": "2024-02-19T18:26:22.097022Z",
      "created_at": "2024-02-19T18:24:18.857758Z",
      "data_removed": false,
      "error": null,
      "id": "yxmbqytb4xffdooljevvsr2ulu",
      "input": {
        "width": 768,
        "height": 768,
        "prompt": "An astronaut riding a rainbow unicorn",
        "refine": "no_refiner",
        "scheduler": "DPM++_SDE_Karras",
        "num_outputs": 1,
        "guidance_scale": 4,
        "apply_watermark": false,
        "high_noise_frac": 0.8,
        "negative_prompt": "(worst quality, low quality, illustration, 3d, 2d, painting, cartoons, sketch), open mouth",
        "prompt_strength": 0.8,
        "num_inference_steps": 25
      },
      "logs": "Using seed: 57128\nPrompt: An astronaut riding a rainbow unicorn\ntxt2img mode\n  0%|          | 0/25 [00:00<?, ?it/s]\n  4%|▍         | 1/25 [00:00<00:18,  1.28it/s]\n  8%|▊         | 2/25 [00:00<00:09,  2.55it/s]\n 12%|█▏        | 3/25 [00:01<00:05,  3.74it/s]\n 16%|█▌        | 4/25 [00:01<00:04,  4.79it/s]\n 20%|██        | 5/25 [00:01<00:03,  5.66it/s]\n 24%|██▍       | 6/25 [00:01<00:02,  6.36it/s]\n 28%|██▊       | 7/25 [00:01<00:02,  6.90it/s]\n 32%|███▏      | 8/25 [00:01<00:02,  7.30it/s]\n 36%|███▌      | 9/25 [00:01<00:02,  7.59it/s]\n 40%|████      | 10/25 [00:01<00:01,  7.80it/s]\n 44%|████▍     | 11/25 [00:01<00:01,  7.96it/s]\n 48%|████▊     | 12/25 [00:02<00:01,  8.07it/s]\n 52%|█████▏    | 13/25 [00:02<00:01,  8.15it/s]\n 56%|█████▌    | 14/25 [00:02<00:01,  8.20it/s]\n 60%|██████    | 15/25 [00:02<00:01,  8.24it/s]\n 64%|██████▍   | 16/25 [00:02<00:01,  8.27it/s]\n 68%|██████▊   | 17/25 [00:02<00:00,  8.29it/s]\n 72%|███████▏  | 18/25 [00:02<00:00,  8.30it/s]\n 76%|███████▌  | 19/25 [00:02<00:00,  8.31it/s]\n 80%|████████  | 20/25 [00:03<00:00,  8.31it/s]\n 84%|████████▍ | 21/25 [00:03<00:00,  8.32it/s]\n 88%|████████▊ | 22/25 [00:03<00:00,  8.32it/s]\n 92%|█████████▏| 23/25 [00:03<00:00,  8.33it/s]\n 96%|█████████▌| 24/25 [00:03<00:00,  8.32it/s]\n100%|██████████| 25/25 [00:03<00:00,  8.33it/s]\n100%|██████████| 25/25 [00:03<00:00,  6.83it/s]",
      "metrics": {
        "predict_time": 5.174835,
        "total_time": 123.239264
      },
      "model": "adirik/realvisxl-v4.0",
      "output": [
        "https://replicate.delivery/pbxt/koQLfGV4o8yWGi4reeIvJQwCxmxrD3S7iQFGre8IfISrpnCTC/out-0.png"
      ],
      "started_at": "2024-02-19T18:26:16.922187Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/yxmbqytb4xffdooljevvsr2ulu",
        "cancel": "https://api.replicate.com/v1/predictions/yxmbqytb4xffdooljevvsr2ulu/cancel"
      },
      "version": "85a58cc71587cc27539b7c83eb1ce4aea02feedfb9a9fae0598cebc110a3d695",
      "webhook": null
    },
    "description": "Photorealism with RealVisXL V4.0",
    "github_url": "https://github.com/alaradirik/cog-RealVisXL",
    "latest_version": {
      "id": "85a58cc71587cc27539b7c83eb1ce4aea02feedfb9a9fae0598cebc110a3d695",
      "created_at": "2024-02-19T18:23:21.409354Z",
      "cog_version": "0.8.3",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "mask": {
                  "type": "string",
                  "title": "Mask",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 11,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 2,
                  "description": "Input image for img2img or inpaint mode"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 768,
                  "x-order": 4,
                  "description": "Width of output image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 768,
                  "x-order": 5,
                  "description": "Height of output image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "An astronaut riding a rainbow unicorn",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "refine": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/refine"
                    }
                  ],
                  "default": "no_refiner",
                  "x-order": 12,
                  "description": "Which refine style to use"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "DPM++_SDE_Karras",
                  "x-order": 7,
                  "description": "Scheduler to use, DPM++ SDE Karras is recommended"
                },
                "num_outputs": {
                  "type": "integer",
                  "title": "Num Outputs",
                  "default": 1,
                  "maximum": 4,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Number of images to output."
                },
                "refine_steps": {
                  "type": "integer",
                  "title": "Refine Steps",
                  "x-order": 14,
                  "description": "For base_image_refiner, the number of steps to refine, defaults to num_inference_steps"
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 4,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 9,
                  "description": "Scale for classifier-free guidance"
                },
                "apply_watermark": {
                  "type": "boolean",
                  "title": "Apply Watermark",
                  "default": false,
                  "x-order": 15,
                  "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
                },
                "high_noise_frac": {
                  "type": "number",
                  "title": "High Noise Frac",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 13,
                  "description": "For expert_ensemble_refiner, the fraction of noise to use"
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "(worst quality, low quality, illustration, 3d, 2d, painting, cartoons, sketch), open mouth",
                  "x-order": 1,
                  "description": "Input Negative Prompt"
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.8,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 10,
                  "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 25,
                  "maximum": 500,
                  "minimum": 1,
                  "x-order": 8,
                  "description": "Number of denoising steps"
                },
                "disable_safety_checker": {
                  "type": "boolean",
                  "title": "Disable Safety Checker",
                  "default": false,
                  "x-order": 16,
                  "description": "Disable safety checker for generated images. This feature is only available through the API. See [https://replicate.com/docs/how-does-replicate-work#safety](https://replicate.com/docs/how-does-replicate-work#safety)"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "refine": {
              "enum": [
                "no_refiner",
                "expert_ensemble_refiner",
                "base_image_refiner"
              ],
              "type": "string",
              "title": "refine",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "DDIM",
                "DPMSolverMultistep",
                "HeunDiscrete",
                "KarrasDPM",
                "K_EULER_ANCESTRAL",
                "K_EULER",
                "PNDM",
                "DPM++_SDE_Karras"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "logs",
                    "start",
                    "output",
                    "completed"
                  ],
                  "uniqueItems": true
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/models?license=license%3Aopenrail%2B%2B",
    "name": "realvisxl-v4.0",
    "owner": "adirik",
    "paper_url": null,
    "run_count": 43870,
    "url": "https://replicate.com/adirik/realvisxl-v4.0",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/223c73a9-0347-4daa-9710-3878f95479e3/svg-cover.webp",
    "created_at": "2024-10-30T13:59:33.006694Z",
    "default_example": {
      "completed_at": "2024-10-30T20:55:58.718496Z",
      "created_at": "2024-10-30T20:55:40.853000Z",
      "data_removed": false,
      "error": null,
      "id": "xstztb3m6nrge0cjvwvatdkhgm",
      "input": {
        "size": "1024x1024",
        "style": "any",
        "prompt": "a portrait of a cute red panda using a laptop, the poster has the title \"Red panda is Recraft v3\", against a red background"
      },
      "logs": "Running prediction... \nStarting image generation...\nGenerated image in 17.63sec",
      "metrics": {
        "image_count": 1,
        "predict_time": 17.856211823,
        "total_time": 17.865496
      },
      "model": "recraft-ai/recraft-v3-svg",
      "output": "https://replicate.delivery/czjl/eo0lNdtlDq0DLayETXSyBEwxMRKxoBPfaKKEW0sLvKhe6JYnA/output.svg",
      "started_at": "2024-10-30T20:55:40.862284Z",
      "status": "succeeded",
      "urls": {
        "stream": "https://stream.replicate.com/v1/files/fddq-6nwhzgkxxydmvzfjvyaivqaat45n35phzrs3rrtzcsj4rw3c5nxa",
        "get": "https://api.replicate.com/v1/predictions/xstztb3m6nrge0cjvwvatdkhgm",
        "cancel": "https://api.replicate.com/v1/predictions/xstztb3m6nrge0cjvwvatdkhgm/cancel"
      },
      "version": "87e3b472f07bceca1192c16715c2f4081bb365f063b4f0a412c7430523e01251",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/official-model-prediction"
    },
    "description": "Recraft V3 SVG (code-named red_panda) is a text-to-image model with the ability to generate high quality SVG images including logotypes, and icons. The model supports a wide list of styles.",
    "github_url": null,
    "latest_version": {
      "id": "16f118e8ee05d9a03a2845fe533f0d45cbc6a7774f126bfb3dfbe857a4feec6b",
      "created_at": "2024-11-04T13:45:57.407485Z",
      "cog_version": "0.10.0-alpha25",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/ready": {
            "get": {
              "summary": "Ready",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Ready Ready Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "ready_ready_get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "size": {
              "enum": [
                "1024x1024",
                "1365x1024",
                "1024x1365",
                "1536x1024",
                "1024x1536",
                "1820x1024",
                "1024x1820",
                "1024x2048",
                "2048x1024",
                "1434x1024",
                "1024x1434",
                "1024x1280",
                "1280x1024",
                "1024x1707",
                "1707x1024"
              ],
              "type": "string",
              "title": "size",
              "description": "An enumeration."
            },
            "Input": {
              "type": "object",
              "title": "Input",
              "required": [
                "prompt"
              ],
              "properties": {
                "size": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/size"
                    }
                  ],
                  "default": "1024x1024",
                  "x-order": 1,
                  "description": "Width and height of the generated image"
                },
                "style": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/style"
                    }
                  ],
                  "default": "any",
                  "x-order": 2,
                  "description": "Style of the generated image."
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "x-order": 0,
                  "description": "Text prompt for image generation"
                }
              }
            },
            "style": {
              "enum": [
                "any",
                "engraving",
                "line_art",
                "line_circuit",
                "linocut"
              ],
              "type": "string",
              "title": "style",
              "description": "An enumeration."
            },
            "Output": {
              "type": "string",
              "title": "Output",
              "format": "uri"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://recraft.ai/terms",
    "name": "recraft-v3-svg",
    "owner": "recraft-ai",
    "paper_url": "https://recraft.ai",
    "run_count": 28948,
    "url": "https://replicate.com/recraft-ai/recraft-v3-svg",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/1fa674fa-a368-4c79-bb00-6cd39e6faac4/output.png",
    "created_at": "2023-08-18T01:54:49.412659Z",
    "default_example": {
      "completed_at": "2023-08-18T02:01:48.413697Z",
      "created_at": "2023-08-18T02:01:43.917126Z",
      "data_removed": false,
      "error": null,
      "id": "7y7jvktbl3pwztrtdpg3is5eom",
      "input": {
        "seed": 1335,
        "steps": 20,
        "width": 512,
        "height": 728,
        "prompt": "RAW photo, a portrait photo of a latina woman in casual clothes, natural skin, 8k uhd, high quality, film grain, Fujifilm XT3",
        "guidance": 5,
        "scheduler": "EulerA",
        "negative_prompt": "(deformed iris, deformed pupils, semi-realistic, cgi, 3d, render, sketch, cartoon, drawing, anime:1.4), text, close up, cropped, out of frame, worst quality, low quality, jpeg artifacts, ugly, duplicate, morbid, mutilated, extra fingers, mutated hands, poorly drawn hands, poorly drawn face, mutation, deformed, blurry, dehydrated, bad anatomy, bad proportions, extra limbs, cloned face, disfigured, gross proportions, malformed limbs, missing arms, missing legs, extra arms, extra legs, fused fingers, too many fingers, long neck"
      },
      "logs": "0%|          | 0/20 [00:00<?, ?it/s]\n  5%|▌         | 1/20 [00:00<00:02,  6.46it/s]\n 10%|█         | 2/20 [00:00<00:02,  6.43it/s]\n 15%|█▌        | 3/20 [00:00<00:02,  6.41it/s]\n 20%|██        | 4/20 [00:00<00:02,  6.40it/s]\n 25%|██▌       | 5/20 [00:00<00:02,  6.40it/s]\n 30%|███       | 6/20 [00:00<00:02,  6.39it/s]\n 35%|███▌      | 7/20 [00:01<00:02,  6.38it/s]\n 40%|████      | 8/20 [00:01<00:01,  6.36it/s]\n 45%|████▌     | 9/20 [00:01<00:01,  6.34it/s]\n 50%|█████     | 10/20 [00:01<00:01,  6.35it/s]\n 55%|█████▌    | 11/20 [00:01<00:01,  6.35it/s]\n 60%|██████    | 12/20 [00:01<00:01,  6.35it/s]\n 65%|██████▌   | 13/20 [00:02<00:01,  6.35it/s]\n 70%|███████   | 14/20 [00:02<00:00,  6.35it/s]\n 75%|███████▌  | 15/20 [00:02<00:00,  6.34it/s]\n 80%|████████  | 16/20 [00:02<00:00,  6.34it/s]\n 85%|████████▌ | 17/20 [00:02<00:00,  6.35it/s]\n 90%|█████████ | 18/20 [00:02<00:00,  6.35it/s]\n 95%|█████████▌| 19/20 [00:02<00:00,  6.35it/s]\n100%|██████████| 20/20 [00:03<00:00,  6.35it/s]\n100%|██████████| 20/20 [00:03<00:00,  6.36it/s]",
      "metrics": {
        "predict_time": 4.494482,
        "total_time": 4.496571
      },
      "model": "lucataco/realistic-vision-v5",
      "output": "https://replicate.delivery/pbxt/eVMzXJerAzpqnErNJ9P4ncWmd2d3OkGA31DKhG3ElQhLMIbRA/output.png",
      "started_at": "2023-08-18T02:01:43.919215Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/7y7jvktbl3pwztrtdpg3is5eom",
        "cancel": "https://api.replicate.com/v1/predictions/7y7jvktbl3pwztrtdpg3is5eom/cancel"
      },
      "version": "8aeee50b868f06a1893e3b95a8bb639a8342e846836f3e0211d6a13c158505b1",
      "webhook": null
    },
    "description": "Realistic Vision v5.0 with VAE",
    "github_url": "https://github.com/lucataco/cog-realistic-vision-v5.1",
    "latest_version": {
      "id": "8aeee50b868f06a1893e3b95a8bb639a8342e846836f3e0211d6a13c158505b1",
      "created_at": "2023-08-18T01:59:16.015116Z",
      "cog_version": "0.8.6",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "default": 0,
                  "x-order": 7,
                  "description": "Seed (0 = random, maximum: 2147483647)"
                },
                "steps": {
                  "type": "integer",
                  "title": "Steps",
                  "default": 20,
                  "maximum": 100,
                  "minimum": 0,
                  "x-order": 2,
                  "description": " num_inference_steps"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 512,
                  "maximum": 1920,
                  "minimum": 0,
                  "x-order": 5,
                  "description": "Width"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 728,
                  "maximum": 1920,
                  "minimum": 0,
                  "x-order": 6,
                  "description": "Height"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "RAW photo, a portrait photo of a latina woman in casual clothes, natural skin, 8k uhd, high quality, film grain, Fujifilm XT3",
                  "x-order": 0
                },
                "guidance": {
                  "type": "number",
                  "title": "Guidance",
                  "default": 5,
                  "x-order": 3,
                  "description": "Guidance scale (3.5 - 7)"
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "EulerA",
                  "x-order": 4,
                  "description": "Choose a scheduler"
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "(deformed iris, deformed pupils, semi-realistic, cgi, 3d, render, sketch, cartoon, drawing, anime:1.4), text, close up, cropped, out of frame, worst quality, low quality, jpeg artifacts, ugly, duplicate, morbid, mutilated, extra fingers, mutated hands, poorly drawn hands, poorly drawn face, mutation, deformed, blurry, dehydrated, bad anatomy, bad proportions, extra limbs, cloned face, disfigured, gross proportions, malformed limbs, missing arms, missing legs, extra arms, extra legs, fused fingers, too many fingers, long neck",
                  "x-order": 1
                }
              }
            },
            "Output": {
              "type": "string",
              "title": "Output",
              "format": "uri"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "EulerA",
                "MultistepDPM-Solver"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": null,
    "name": "realistic-vision-v5",
    "owner": "lucataco",
    "paper_url": null,
    "run_count": 27130,
    "url": "https://replicate.com/lucataco/realistic-vision-v5",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/86d3c3b1-8511-4140-bcc5-c963be69d46d/replicate-prediction-z_5oM3pfE.png",
    "created_at": "2024-11-22T00:18:50.495972Z",
    "default_example": {
      "completed_at": "2024-11-24T01:20:08.636722Z",
      "created_at": "2024-11-24T01:20:07.431000Z",
      "data_removed": false,
      "error": null,
      "id": "zj27sz9f0xrma0ckbf0v455ypm",
      "input": {
        "width": 1024,
        "height": 1024,
        "prompt": "a cyberpunk cat with a neon sign that says \"Sana\"",
        "guidance_scale": 5,
        "negative_prompt": "",
        "pag_guidance_scale": 2,
        "num_inference_steps": 18
      },
      "logs": "Using seed: 49609\n  0%|          | 0/17 [00:00<?, ?it/s]\n 18%|█▊        | 3/17 [00:00<00:00, 22.20it/s]\n 35%|███▌      | 6/17 [00:00<00:00, 22.18it/s]\n 53%|█████▎    | 9/17 [00:00<00:00, 22.17it/s]\n 71%|███████   | 12/17 [00:00<00:00, 22.17it/s]\n 88%|████████▊ | 15/17 [00:00<00:00, 22.17it/s]\n100%|██████████| 17/17 [00:00<00:00, 23.56it/s]",
      "metrics": {
        "predict_time": 1.198414056,
        "total_time": 1.205722
      },
      "model": "nvidia/sana",
      "output": "https://replicate.delivery/xezq/SRGSBB0ygzb3JVkLCW2A0Kofze4aD1KqHa2KOoW9oeejUMQPB/output.png",
      "started_at": "2024-11-24T01:20:07.438308Z",
      "status": "succeeded",
      "urls": {
        "stream": "https://stream.replicate.com/v1/files/bcwr-vdagiyuf62kw5uzmjpckui5yvzja7tso6ttlqcec7mb6qhghxpfa",
        "get": "https://api.replicate.com/v1/predictions/zj27sz9f0xrma0ckbf0v455ypm",
        "cancel": "https://api.replicate.com/v1/predictions/zj27sz9f0xrma0ckbf0v455ypm/cancel"
      },
      "version": "88312dcb9eaa543d7f8721e092053e8bb901a45a5d3c63c84e0a5aa7c247df33",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/version-prediction"
    },
    "description": "A fast image model with wide artistic range and resolutions up to 4096x4096",
    "github_url": "https://github.com/chenxwh/Sana",
    "latest_version": {
      "id": "c6b5d2b7459910fec94432e9e1203c3cdce92d6db20f714f1355747990b52fa6",
      "created_at": "2024-12-06T16:47:43.557740Z",
      "cog_version": "0.13.3",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 8,
                  "description": "Random seed. Leave blank to randomize the seed"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 1024,
                  "x-order": 3,
                  "description": "Width of output image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 1024,
                  "x-order": 4,
                  "description": "Height of output image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "a cyberpunk cat with a neon sign that says \"Sana\"",
                  "x-order": 0,
                  "description": "Input prompt"
                },
                "model_variant": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/model_variant"
                    }
                  ],
                  "default": "1600M-1024px",
                  "x-order": 2,
                  "description": "Model variant. 1600M variants are slower but produce higher quality than 600M, 1024px variants are optimized for 1024x1024px images, 512px variants are optimized for 512x512px images, 'multilang' variants can be prompted in both English and Chinese"
                },
                "guidance_scale": {
                  "type": "number",
                  "title": "Guidance Scale",
                  "default": 5,
                  "maximum": 20,
                  "minimum": 1,
                  "x-order": 6,
                  "description": "Classifier-free guidance scale"
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "",
                  "x-order": 1,
                  "description": "Specify things to not see in the output"
                },
                "pag_guidance_scale": {
                  "type": "number",
                  "title": "Pag Guidance Scale",
                  "default": 2,
                  "maximum": 20,
                  "minimum": 1,
                  "x-order": 7,
                  "description": "PAG Guidance scale"
                },
                "num_inference_steps": {
                  "type": "integer",
                  "title": "Num Inference Steps",
                  "default": 18,
                  "minimum": 1,
                  "x-order": 5,
                  "description": "Number of denoising steps"
                }
              }
            },
            "Output": {
              "type": "string",
              "title": "Output",
              "format": "uri"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "model_variant": {
              "enum": [
                "1600M-1024px",
                "1600M-1024px-multilang",
                "1600M-512px",
                "600M-1024px-multilang",
                "600M-512px-multilang"
              ],
              "type": "string",
              "title": "model_variant",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://github.com/chenxwh/Sana/blob/main/LICENSE",
    "name": "sana",
    "owner": "nvidia",
    "paper_url": "https://arxiv.org/abs/2410.10629",
    "run_count": 22611,
    "url": "https://replicate.com/nvidia/sana",
    "visibility": "public",
    "weights_url": "https://huggingface.co/Efficient-Large-Model/Sana_1600M_1024px"
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/9e1b4258-22bd-4a59-ba4a-ecac220a8a9b/replicate-prediction-_WU4XtaV.webp",
    "created_at": "2024-10-22T12:09:38.705615Z",
    "default_example": {
      "completed_at": "2024-10-22T15:19:55.367012Z",
      "created_at": "2024-10-22T15:19:54.434000Z",
      "data_removed": false,
      "error": null,
      "id": "gmkzb6hb89rm00cjpk8a0jcpz0",
      "input": {
        "cfg": 1,
        "steps": 4,
        "prompt": "An impasto unicorn",
        "aspect_ratio": "3:2",
        "output_format": "webp",
        "output_quality": 90,
        "prompt_strength": 0.85
      },
      "logs": "Seed set to: 3293944150\nRunning workflow\ngot prompt\nExecuting node 294, title: KSampler, class type: KSampler\n0%|          | 0/4 [00:00<?, ?it/s]\n50%|█████     | 2/4 [00:00<00:00,  8.91it/s]\n75%|███████▌  | 3/4 [00:00<00:00,  8.90it/s]\n100%|██████████| 4/4 [00:00<00:00,  8.89it/s]\n100%|██████████| 4/4 [00:00<00:00,  8.90it/s]\nExecuting node 8, title: VAE Decode, class type: VAEDecode\nExecuting node 309, title: Save Image, class type: SaveImage\nPrompt executed in 0.75 seconds\noutputs:  {'309': {'images': [{'filename': 'R8_sd3.5L_00001_.png', 'subfolder': '', 'type': 'output'}]}}\n====================================\nR8_sd3.5L_00001_.png",
      "metrics": {
        "image_count": 1,
        "predict_time": 0.927865711,
        "total_time": 0.933012
      },
      "model": "stability-ai/stable-diffusion-3.5-large-turbo",
      "output": [
        "https://replicate.delivery/yhqm/qPajhUQ3G3qLAtsMA1MMH7z7Z7kwLKy7WsIOgf0ijcjNpr0JA/R8_sd3.5L_00001_.webp"
      ],
      "started_at": "2024-10-22T15:19:54.439146Z",
      "status": "succeeded",
      "urls": {
        "stream": "https://stream.replicate.com/v1/files/wcdb-pb33rjfzwhdturfuqxfutabojb7rbhrcibdiz2yt3p6nrg2eynja",
        "get": "https://api.replicate.com/v1/predictions/gmkzb6hb89rm00cjpk8a0jcpz0",
        "cancel": "https://api.replicate.com/v1/predictions/gmkzb6hb89rm00cjpk8a0jcpz0/cancel"
      },
      "version": "285033a2621d9756e61a5759062103c34836582dce096dfea393d2488806ac17",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/official-model-prediction"
    },
    "description": "A text-to-image model that generates high-resolution images with fine details. It supports various artistic styles and produces diverse outputs from the same prompt, with a focus on fewer inference steps",
    "github_url": null,
    "latest_version": {
      "id": "a0963ecbded701e4bef0c9a065296195805a18a598b3981cd4217be168b7b259",
      "created_at": "2024-10-22T15:20:47.854549Z",
      "cog_version": "0.11.3",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "cfg": {
                  "type": "number",
                  "title": "Cfg",
                  "default": 1,
                  "maximum": 20,
                  "minimum": 0,
                  "x-order": 2,
                  "description": "The guidance scale tells the model how similar the output should be to the prompt."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 6,
                  "description": "Set a seed for reproducibility. Random by default."
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input image for image to image mode. The aspect ratio of your output will match this image."
                },
                "steps": {
                  "type": "integer",
                  "title": "Steps",
                  "default": 4,
                  "maximum": 10,
                  "minimum": 1,
                  "x-order": 5,
                  "description": "Number of steps to run the sampler for."
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "",
                  "x-order": 0,
                  "description": "Text prompt for image generation"
                },
                "aspect_ratio": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/aspect_ratio"
                    }
                  ],
                  "default": "1:1",
                  "x-order": 1,
                  "description": "The aspect ratio of your output image. This value is ignored if you are using an input image."
                },
                "output_format": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/output_format"
                    }
                  ],
                  "default": "webp",
                  "x-order": 7,
                  "description": "Format of the output images"
                },
                "output_quality": {
                  "type": "integer",
                  "title": "Output Quality",
                  "default": 90,
                  "maximum": 100,
                  "minimum": 0,
                  "x-order": 8,
                  "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality."
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.85,
                  "x-order": 4,
                  "description": "Prompt strength (or denoising strength) when using image to image. 1.0 corresponds to full destruction of information in image."
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "aspect_ratio": {
              "enum": [
                "1:1",
                "16:9",
                "21:9",
                "3:2",
                "2:3",
                "4:5",
                "5:4",
                "3:4",
                "4:3",
                "9:16",
                "9:21"
              ],
              "type": "string",
              "title": "aspect_ratio",
              "description": "An enumeration."
            },
            "output_format": {
              "enum": [
                "webp",
                "jpg",
                "png"
              ],
              "type": "string",
              "title": "output_format",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/stabilityai/stable-diffusion-3.5-large-turbo/blob/main/LICENSE.md",
    "name": "stable-diffusion-3.5-large-turbo",
    "owner": "stability-ai",
    "paper_url": "https://arxiv.org/abs/2403.03206",
    "run_count": 20346,
    "url": "https://replicate.com/stability-ai/stable-diffusion-3.5-large-turbo",
    "visibility": "public",
    "weights_url": "https://huggingface.co/stabilityai/stable-diffusion-3.5-large-turbo"
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/d65fc397-135b-4976-a84d-12980ab2c0bc/replicate-prediction-_4kWPYZu.webp",
    "created_at": "2024-10-29T12:55:45.899504Z",
    "default_example": {
      "completed_at": "2024-10-29T13:35:07.173715Z",
      "created_at": "2024-10-29T13:35:02.778000Z",
      "data_removed": false,
      "error": null,
      "id": "0wx084def9rm20cjv1yb27bb6g",
      "input": {
        "cfg": 5,
        "steps": 40,
        "prompt": "a captivating anime-style illustration of a woman in a white astronaut suit. She has long, dark wavy hair. Surrounding the astronaut are vibrant orange flowers with yellow centers. The background itself is a mesmerizing night sky filled with countless stars",
        "aspect_ratio": "1:1",
        "output_format": "webp",
        "output_quality": 90,
        "prompt_strength": 0.85
      },
      "logs": "Seed set to: 3551813581\nRunning workflow\ngot prompt\nExecuting node 294, title: KSampler, class type: KSampler\n0%|          | 0/40 [00:00<?, ?it/s]\n5%|▌         | 2/40 [00:00<00:03, 10.76it/s]\n10%|█         | 4/40 [00:00<00:03, 10.78it/s]\n15%|█▌        | 6/40 [00:00<00:03, 10.76it/s]\n20%|██        | 8/40 [00:00<00:02, 10.77it/s]\n25%|██▌       | 10/40 [00:00<00:02, 10.78it/s]\n30%|███       | 12/40 [00:01<00:02, 10.78it/s]\n35%|███▌      | 14/40 [00:01<00:02, 10.78it/s]\n40%|████      | 16/40 [00:01<00:02, 10.78it/s]\n45%|████▌     | 18/40 [00:01<00:02, 10.78it/s]\n50%|█████     | 20/40 [00:01<00:01, 10.79it/s]\n55%|█████▌    | 22/40 [00:02<00:01, 10.77it/s]\n60%|██████    | 24/40 [00:02<00:01, 10.76it/s]\n65%|██████▌   | 26/40 [00:02<00:01, 10.77it/s]\n70%|███████   | 28/40 [00:02<00:01, 10.76it/s]\n75%|███████▌  | 30/40 [00:02<00:00, 10.77it/s]\n80%|████████  | 32/40 [00:02<00:00, 10.76it/s]\n85%|████████▌ | 34/40 [00:03<00:00, 10.76it/s]\n90%|█████████ | 36/40 [00:03<00:00, 10.77it/s]\n95%|█████████▌| 38/40 [00:03<00:00, 10.78it/s]\n100%|██████████| 40/40 [00:03<00:00, 10.79it/s]\n100%|██████████| 40/40 [00:03<00:00, 10.77it/s]\nExecuting node 8, title: VAE Decode, class type: VAEDecode\nExecuting node 309, title: Save Image, class type: SaveImage\nPrompt executed in 4.03 seconds\noutputs:  {'309': {'images': [{'filename': 'R8_sd3.5L_00001_.png', 'subfolder': '', 'type': 'output'}]}}\n====================================\nR8_sd3.5L_00001_.png",
      "metrics": {
        "image_count": 1,
        "predict_time": 4.389376381,
        "total_time": 4.395715
      },
      "model": "stability-ai/stable-diffusion-3.5-medium",
      "output": [
        "https://replicate.delivery/yhqm/b8ZWW3KneUSuca1q7wzUrSpRsElbIdLtFqXEMaZetgrLaprTA/R8_sd3.5L_00001_.webp"
      ],
      "started_at": "2024-10-29T13:35:02.784339Z",
      "status": "succeeded",
      "urls": {
        "stream": "https://stream.replicate.com/v1/files/wcdb-meh23tz2vbo4lup5tdivjpnvcfwtwvyoupyqu4bhcwmgan7kzytq",
        "get": "https://api.replicate.com/v1/predictions/0wx084def9rm20cjv1yb27bb6g",
        "cancel": "https://api.replicate.com/v1/predictions/0wx084def9rm20cjv1yb27bb6g/cancel"
      },
      "version": "3db708414a3e124c13588828dc8675aa4cdda70644e538be19141c31c2591384",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/official-model-prediction"
    },
    "description": "2.5 billion parameter image model with improved MMDiT-X architecture",
    "github_url": null,
    "latest_version": {
      "id": "382c03890d801cb8950e2223983ab2f05383800473c1765a9211af752206d2ae",
      "created_at": "2024-10-29T12:56:10.915146Z",
      "cog_version": "0.9.21",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "cfg": {
                  "type": "number",
                  "title": "Cfg",
                  "default": 5,
                  "maximum": 20,
                  "minimum": 0,
                  "x-order": 2,
                  "description": "The guidance scale tells the model how similar the output should be to the prompt."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 6,
                  "description": "Set a seed for reproducibility. Random by default."
                },
                "image": {
                  "type": "string",
                  "title": "Image",
                  "format": "uri",
                  "x-order": 3,
                  "description": "Input image for image to image mode. The aspect ratio of your output will match this image."
                },
                "steps": {
                  "type": "integer",
                  "title": "Steps",
                  "default": 40,
                  "maximum": 50,
                  "minimum": 1,
                  "x-order": 5,
                  "description": "Number of steps to run the sampler for."
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "",
                  "x-order": 0,
                  "description": "Text prompt for image generation"
                },
                "aspect_ratio": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/aspect_ratio"
                    }
                  ],
                  "default": "1:1",
                  "x-order": 1,
                  "description": "The aspect ratio of your output image. This value is ignored if you are using an input image."
                },
                "output_format": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/output_format"
                    }
                  ],
                  "default": "webp",
                  "x-order": 7,
                  "description": "Format of the output images"
                },
                "output_quality": {
                  "type": "integer",
                  "title": "Output Quality",
                  "default": 90,
                  "maximum": 100,
                  "minimum": 0,
                  "x-order": 8,
                  "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality."
                },
                "prompt_strength": {
                  "type": "number",
                  "title": "Prompt Strength",
                  "default": 0.85,
                  "x-order": 4,
                  "description": "Prompt strength (or denoising strength) when using image to image. 1.0 corresponds to full destruction of information in image."
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "aspect_ratio": {
              "enum": [
                "1:1",
                "16:9",
                "21:9",
                "3:2",
                "2:3",
                "4:5",
                "5:4",
                "3:4",
                "4:3",
                "9:16",
                "9:21"
              ],
              "type": "string",
              "title": "aspect_ratio",
              "description": "An enumeration."
            },
            "output_format": {
              "enum": [
                "webp",
                "jpg",
                "png"
              ],
              "type": "string",
              "title": "output_format",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/stabilityai/stable-diffusion-3.5-medium/blob/main/LICENSE.md",
    "name": "stable-diffusion-3.5-medium",
    "owner": "stability-ai",
    "paper_url": "https://arxiv.org/abs/2403.03206",
    "run_count": 8473,
    "url": "https://replicate.com/stability-ai/stable-diffusion-3.5-medium",
    "visibility": "public",
    "weights_url": "https://huggingface.co/stabilityai/stable-diffusion-3.5-medium"
  },
  {
    "cover_image_url": "https://replicate.delivery/pbxt/FB6BVEL8rUaaKpR6oCfd2wepBKgXyb3ay93qo7WuCequPVPmA/ComfyUI_00001_.webp",
    "created_at": "2024-07-12T09:11:55.243400Z",
    "default_example": {
      "completed_at": "2024-07-12T09:31:35.354499Z",
      "created_at": "2024-07-12T09:31:10.252000Z",
      "data_removed": false,
      "error": null,
      "id": "tf0mz49w5hrgm0cgms4byp74gr",
      "input": {
        "cfg": 3.5,
        "shift": 1.73,
        "steps": 25,
        "width": 1024,
        "height": 1024,
        "prompt": "a stylized cartoon image, yellow background, a smiling turtle holding a pizza, the turtle is wearing a white and brown cap, large eyes and a friendly expression, the turtle is standing on its hind legs, the pizza is held in both of its front legs, small clouds and trees on either side of the turtle, the text \"Turtle Pizza\" is in large brown letters at the top, the text \"No More Hungry\" at the bottom in brown, the overall style is retro with halftone shading",
        "sampler": "uni_pc",
        "scheduler": "normal",
        "output_format": "webp",
        "output_quality": 80,
        "negative_prompt": "ugly, broken",
        "number_of_images": 1
      },
      "logs": "Random seed set to: 4198727867\nRunning workflow\ngot prompt\nExecuting node 3, title: KSampler, class type: KSampler\n  0%|          | 0/25 [00:00<?, ?it/s]\n  4%|▍         | 1/25 [00:00<00:04,  5.30it/s]\n  8%|▊         | 2/25 [00:01<00:14,  1.56it/s]\n 12%|█▏        | 3/25 [00:02<00:17,  1.27it/s]\n 16%|█▌        | 4/25 [00:03<00:17,  1.17it/s]\n 20%|██        | 5/25 [00:04<00:17,  1.12it/s]\n 24%|██▍       | 6/25 [00:04<00:17,  1.09it/s]\n 28%|██▊       | 7/25 [00:05<00:16,  1.07it/s]\n 32%|███▏      | 8/25 [00:06<00:15,  1.06it/s]\n 36%|███▌      | 9/25 [00:07<00:15,  1.06it/s]\n 40%|████      | 10/25 [00:08<00:14,  1.05it/s]\n 44%|████▍     | 11/25 [00:09<00:13,  1.05it/s]\n 48%|████▊     | 12/25 [00:10<00:12,  1.05it/s]\n 52%|█████▏    | 13/25 [00:11<00:11,  1.05it/s]\n 56%|█████▌    | 14/25 [00:12<00:10,  1.04it/s]\n 60%|██████    | 15/25 [00:13<00:09,  1.04it/s]\n 64%|██████▍   | 16/25 [00:14<00:08,  1.04it/s]\n 68%|██████▊   | 17/25 [00:15<00:07,  1.04it/s]\n 72%|███████▏  | 18/25 [00:16<00:06,  1.04it/s]\n 76%|███████▌  | 19/25 [00:17<00:05,  1.04it/s]\n 80%|████████  | 20/25 [00:18<00:04,  1.04it/s]\n 84%|████████▍ | 21/25 [00:19<00:03,  1.04it/s]\n 88%|████████▊ | 22/25 [00:20<00:02,  1.04it/s]\n 92%|█████████▏| 23/25 [00:21<00:01,  1.04it/s]\n 96%|█████████▌| 24/25 [00:22<00:00,  1.04it/s]\n100%|██████████| 25/25 [00:24<00:00,  1.19s/it]\n100%|██████████| 25/25 [00:24<00:00,  1.04it/s]\nExecuting node 8, title: VAE Decode, class type: VAEDecode\nExecuting node 9, title: Save Image, class type: SaveImage\nPrompt executed in 24.38 seconds\noutputs:  {'9': {'images': [{'filename': 'ComfyUI_00001_.png', 'subfolder': '', 'type': 'output'}]}}\n====================================\nComfyUI_00001_.png",
      "metrics": {
        "predict_time": 25.089343742,
        "total_time": 25.102499
      },
      "model": "fofr/aura-flow",
      "output": [
        "https://replicate.delivery/pbxt/FB6BVEL8rUaaKpR6oCfd2wepBKgXyb3ay93qo7WuCequPVPmA/ComfyUI_00001_.webp"
      ],
      "started_at": "2024-07-12T09:31:10.265155Z",
      "status": "succeeded",
      "urls": {
        "get": "https://api.replicate.com/v1/predictions/tf0mz49w5hrgm0cgms4byp74gr",
        "cancel": "https://api.replicate.com/v1/predictions/tf0mz49w5hrgm0cgms4byp74gr/cancel"
      },
      "version": "2f38ca7d2e0e84f05bef7980cf8c7c1c36ba2b9416eee3d57e73b67c338eaff0",
      "webhook": "https://api.svc.internal.us.c.replicate.net/_internal/webhook/version-prediction"
    },
    "description": "Largest completely open sourced flow-based generation model that is capable of text-to-image generation",
    "github_url": "https://github.com/fofr/cog-aura-flow",
    "latest_version": {
      "id": "ae5ab66a7d1ca7ee44cf8c50265d3bafdef23734d03d66063d1c8fcf82f0c17b",
      "created_at": "2024-07-18T13:21:46.448261Z",
      "cog_version": "0.9.13",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "properties": {
                "cfg": {
                  "type": "number",
                  "title": "Cfg",
                  "default": 3.5,
                  "maximum": 20,
                  "minimum": 0,
                  "x-order": 6,
                  "description": "The guidance scale tells the model how similar the output should be to the prompt."
                },
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 12,
                  "description": "Set a seed for reproducibility. Random by default."
                },
                "shift": {
                  "type": "number",
                  "title": "Shift",
                  "default": 1.73,
                  "maximum": 10,
                  "minimum": 0,
                  "x-order": 9,
                  "description": "The timestep scheduling shift; shift values higher than 1.0 are better at managing noise in higher resolutions."
                },
                "steps": {
                  "type": "integer",
                  "title": "Steps",
                  "default": 25,
                  "maximum": 100,
                  "minimum": 1,
                  "x-order": 5,
                  "description": "The number of steps to run the model for (more steps = better image but slower generation. Best results for this model are around 25 steps.)"
                },
                "width": {
                  "type": "integer",
                  "title": "Width",
                  "default": 1024,
                  "maximum": 2048,
                  "minimum": 512,
                  "x-order": 2,
                  "description": "The width of the image"
                },
                "height": {
                  "type": "integer",
                  "title": "Height",
                  "default": 1024,
                  "maximum": 2048,
                  "minimum": 512,
                  "x-order": 3,
                  "description": "The height of the image"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "default": "",
                  "x-order": 0
                },
                "sampler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/sampler"
                    }
                  ],
                  "default": "uni_pc",
                  "x-order": 7
                },
                "scheduler": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/scheduler"
                    }
                  ],
                  "default": "normal",
                  "x-order": 8
                },
                "output_format": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/output_format"
                    }
                  ],
                  "default": "webp",
                  "x-order": 10,
                  "description": "Format of the output images"
                },
                "output_quality": {
                  "type": "integer",
                  "title": "Output Quality",
                  "default": 80,
                  "maximum": 100,
                  "minimum": 0,
                  "x-order": 11,
                  "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality."
                },
                "negative_prompt": {
                  "type": "string",
                  "title": "Negative Prompt",
                  "default": "",
                  "x-order": 1,
                  "description": "Things you do not want to see in your image"
                },
                "number_of_images": {
                  "type": "integer",
                  "title": "Number Of Images",
                  "default": 1,
                  "maximum": 10,
                  "minimum": 1,
                  "x-order": 4,
                  "description": "The number of images to generate"
                }
              }
            },
            "Output": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "title": "Output"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "sampler": {
              "enum": [
                "euler",
                "euler_cfg_pp",
                "euler_ancestral",
                "euler_ancestral_cfg_pp",
                "heun",
                "heunpp2",
                "dpm_2",
                "dpm_2_ancestral",
                "lms",
                "dpm_fast",
                "dpm_adaptive",
                "dpmpp_2s_ancestral",
                "dpmpp_sde",
                "dpmpp_sde_gpu",
                "dpmpp_2m",
                "dpmpp_2m_sde",
                "dpmpp_2m_sde_gpu",
                "dpmpp_3m_sde",
                "dpmpp_3m_sde_gpu",
                "ddpm",
                "lcm",
                "ddim",
                "uni_pc",
                "uni_pc_bh2",
                "ipndm",
                "ipndm_v",
                "deis"
              ],
              "type": "string",
              "title": "sampler",
              "description": "An enumeration."
            },
            "scheduler": {
              "enum": [
                "normal",
                "karras",
                "exponential",
                "sgm_uniform",
                "simple",
                "ddim_uniform"
              ],
              "type": "string",
              "title": "scheduler",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "output_format": {
              "enum": [
                "webp",
                "jpg",
                "png"
              ],
              "type": "string",
              "title": "output_format",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://huggingface.co/fal/AuraFlow",
    "name": "aura-flow",
    "owner": "fofr",
    "paper_url": "https://blog.fal.ai/auraflow/",
    "run_count": 5972,
    "url": "https://replicate.com/fofr/aura-flow",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/da35acb5-0285-4e06-8bab-504759bb7a92/tmpjbj2iy5z.webp",
    "created_at": "2024-12-05T15:17:52.527323Z",
    "default_example": {
      "completed_at": "2024-12-05T17:18:57.675797Z",
      "created_at": "2024-12-05T17:18:51.044000Z",
      "data_removed": false,
      "error": null,
      "id": "0zyagzf0mhrgc0ckjzaaext8r0",
      "input": {
        "prompt": "chrome sports car by the sea",
        "aspect_ratio": "16:9",
        "image_reference_weight": 0.85,
        "style_reference_weight": 0.85
      },
      "logs": "Using seed: 37743\nRunning prediction... \nGenerating...\nGenerated image in 6.2sec\nDownloading 1361405 bytes\nDownloaded 1.30MB in 0.43sec",
      "metrics": {
        "image_count": 1,
        "predict_time": 6.623360369,
        "total_time": 6.631797
      },
      "model": "luma/photon",
      "output": "https://replicate.delivery/czjl/ZtBmm4Yw98KoJBz3Z7PnpFmgga42Skq8pL3ILGjnmDfAl87JA/tmpjbj2iy5z.jpg",
      "started_at": "2024-12-05T17:18:51.052437Z",
      "status": "succeeded",
      "urls": {
        "stream": "https://stream.replicate.com/v1/files/fddq-vruznxbhfgz7ndeev5l3oiidixdkiimlvmgt7iv6beqreaznv5ba",
        "get": "https://api.replicate.com/v1/predictions/0zyagzf0mhrgc0ckjzaaext8r0",
        "cancel": "https://api.replicate.com/v1/predictions/0zyagzf0mhrgc0ckjzaaext8r0/cancel"
      },
      "version": "e3d39482ecdaee4d23483afa1444024b4c689cdbf9a27b1a07dc859ef78af078",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/official-model-prediction"
    },
    "description": "High-quality image generation model optimized for creative professional workflows and ultra-high fidelity outputs",
    "github_url": null,
    "latest_version": {
      "id": "fe142c037cf359764f2058c3a42ef0dc750d908311d02868cbc7769fe800b648",
      "created_at": "2024-12-05T16:53:21.259316Z",
      "cog_version": "0.10.0-alpha27",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/ready": {
            "get": {
              "summary": "Ready",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Ready Ready Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "ready_ready_get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "required": [
                "prompt"
              ],
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 7,
                  "description": "Random seed. Set for reproducible generation"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "x-order": 0,
                  "description": "Text prompt for image generation"
                },
                "aspect_ratio": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/aspect_ratio"
                    }
                  ],
                  "default": "16:9",
                  "x-order": 1,
                  "description": "Aspect ratio of the generated image"
                },
                "image_reference_url": {
                  "type": "string",
                  "title": "Image Reference Url",
                  "x-order": 2,
                  "description": "URL of a reference image to guide generation"
                },
                "style_reference_url": {
                  "type": "string",
                  "title": "Style Reference Url",
                  "x-order": 4,
                  "description": "URL of a style reference image"
                },
                "image_reference_weight": {
                  "type": "number",
                  "title": "Image Reference Weight",
                  "default": 0.85,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 3,
                  "description": "Weight of the reference image. Larger values will make the reference image have a stronger influence on the generated image."
                },
                "style_reference_weight": {
                  "type": "number",
                  "title": "Style Reference Weight",
                  "default": 0.85,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 5,
                  "description": "Weight of the style reference image"
                },
                "character_reference_url": {
                  "type": "string",
                  "title": "Character Reference Url",
                  "x-order": 6,
                  "description": "URL of a character reference image"
                }
              }
            },
            "Output": {
              "type": "string",
              "title": "Output",
              "format": "uri"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "aspect_ratio": {
              "enum": [
                "1:1",
                "3:4",
                "4:3",
                "9:16",
                "16:9",
                "9:21",
                "21:9"
              ],
              "type": "string",
              "title": "aspect_ratio",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": "https://lumalabs.ai/dream-machine/api/terms",
    "name": "photon",
    "owner": "luma",
    "paper_url": null,
    "run_count": 3607,
    "url": "https://replicate.com/luma/photon",
    "visibility": "public",
    "weights_url": null
  },
  {
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/8459f7e9-7445-4046-82aa-917a0f561b80/tmpyf9dx02r.webp",
    "created_at": "2024-12-05T15:18:04.364421Z",
    "default_example": {
      "completed_at": "2024-12-05T17:31:08.851099Z",
      "created_at": "2024-12-05T17:31:01.819000Z",
      "data_removed": false,
      "error": null,
      "id": "356ctt877drgc0ckjzgazxegtw",
      "input": {
        "prompt": "A train car is engulfed in a massive explosion, with flames and smoke billowing into the sky as debris flies in all directions, cinematic photograph, explosive action, high contrast, dynamic lighting.",
        "aspect_ratio": "16:9",
        "image_reference_weight": 0.85,
        "style_reference_weight": 0.85
      },
      "logs": "Using seed: 16612\nRunning prediction... \nGenerating...\nGenerated image in 6.6sec\nDownloading 1281581 bytes\nDownloaded 1.22MB in 0.33sec",
      "metrics": {
        "image_count": 1,
        "predict_time": 7.02267228,
        "total_time": 7.032099
      },
      "model": "luma/photon-flash",
      "output": "https://replicate.delivery/czjl/6iZ89qakg74mCVjFYeDk0GljoYQReoV0k7WwSjxXmCLcV53TA/tmpyf9dx02r.jpg",
      "started_at": "2024-12-05T17:31:01.828427Z",
      "status": "succeeded",
      "urls": {
        "stream": "https://stream.replicate.com/v1/files/fddq-meqo6r3jznulzojhwpk2axmslpkdq23dkhaf2vombsbpcwvhhova",
        "get": "https://api.replicate.com/v1/predictions/356ctt877drgc0ckjzgazxegtw",
        "cancel": "https://api.replicate.com/v1/predictions/356ctt877drgc0ckjzgazxegtw/cancel"
      },
      "version": "3a9331b65de6be4b288311f5e662c9a389f2d3572b8a245fa02d01f329364293",
      "webhook": "https://api.services.svc.cluster.local/_internal/webhook/official-model-prediction"
    },
    "description": "Accelerated variant of Photon prioritizing speed while maintaining quality",
    "github_url": null,
    "latest_version": {
      "id": "81b0e3ad4acf49cb47143ea63cce47f94cb0bdbecc13d31910654b6282e29ea1",
      "created_at": "2024-12-05T16:54:05.091363Z",
      "cog_version": "0.10.0-alpha27",
      "openapi_schema": {
        "info": {
          "title": "Cog",
          "version": "0.1.0"
        },
        "paths": {
          "/": {
            "get": {
              "summary": "Root",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Root  Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "root__get"
            }
          },
          "/ready": {
            "get": {
              "summary": "Ready",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Ready Ready Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "ready_ready_get"
            }
          },
          "/shutdown": {
            "post": {
              "summary": "Start Shutdown",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Start Shutdown Shutdown Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "start_shutdown_shutdown_post"
            }
          },
          "/predictions": {
            "post": {
              "summary": "Predict",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model",
              "operationId": "predict_predictions_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionRequest"
                    }
                  }
                }
              }
            }
          },
          "/health-check": {
            "get": {
              "summary": "Healthcheck",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Healthcheck Health Check Get"
                      }
                    }
                  },
                  "description": "Successful Response"
                }
              },
              "operationId": "healthcheck_health_check_get"
            }
          },
          "/predictions/{prediction_id}": {
            "put": {
              "summary": "Predict Idempotent",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PredictionResponse"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                },
                {
                  "in": "header",
                  "name": "prefer",
                  "schema": {
                    "type": "string",
                    "title": "Prefer"
                  },
                  "required": false
                }
              ],
              "description": "Run a single prediction on the model (idempotent creation).",
              "operationId": "predict_idempotent_predictions__prediction_id__put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/PredictionRequest"
                        }
                      ],
                      "title": "Prediction Request"
                    }
                  }
                },
                "required": true
              }
            }
          },
          "/predictions/{prediction_id}/cancel": {
            "post": {
              "summary": "Cancel",
              "responses": {
                "200": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                      }
                    }
                  },
                  "description": "Successful Response"
                },
                "422": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  },
                  "description": "Validation Error"
                }
              },
              "parameters": [
                {
                  "in": "path",
                  "name": "prediction_id",
                  "schema": {
                    "type": "string",
                    "title": "Prediction ID"
                  },
                  "required": true
                }
              ],
              "description": "Cancel a running prediction",
              "operationId": "cancel_predictions__prediction_id__cancel_post"
            }
          }
        },
        "openapi": "3.0.2",
        "components": {
          "schemas": {
            "Input": {
              "type": "object",
              "title": "Input",
              "required": [
                "prompt"
              ],
              "properties": {
                "seed": {
                  "type": "integer",
                  "title": "Seed",
                  "x-order": 7,
                  "description": "Random seed. Set for reproducible generation"
                },
                "prompt": {
                  "type": "string",
                  "title": "Prompt",
                  "x-order": 0,
                  "description": "Text prompt for image generation"
                },
                "aspect_ratio": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/aspect_ratio"
                    }
                  ],
                  "default": "16:9",
                  "x-order": 1,
                  "description": "Aspect ratio of the generated image"
                },
                "image_reference_url": {
                  "type": "string",
                  "title": "Image Reference Url",
                  "x-order": 2,
                  "description": "URL of a reference image to guide generation"
                },
                "style_reference_url": {
                  "type": "string",
                  "title": "Style Reference Url",
                  "x-order": 4,
                  "description": "URL of a style reference image"
                },
                "image_reference_weight": {
                  "type": "number",
                  "title": "Image Reference Weight",
                  "default": 0.85,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 3,
                  "description": "Weight of the reference image. Larger values will make the reference image have a stronger influence on the generated image."
                },
                "style_reference_weight": {
                  "type": "number",
                  "title": "Style Reference Weight",
                  "default": 0.85,
                  "maximum": 1,
                  "minimum": 0,
                  "x-order": 5,
                  "description": "Weight of the style reference image"
                },
                "character_reference_url": {
                  "type": "string",
                  "title": "Character Reference Url",
                  "x-order": 6,
                  "description": "URL of a character reference image"
                }
              }
            },
            "Output": {
              "type": "string",
              "title": "Output",
              "format": "uri"
            },
            "Status": {
              "enum": [
                "starting",
                "processing",
                "succeeded",
                "canceled",
                "failed"
              ],
              "type": "string",
              "title": "Status",
              "description": "An enumeration."
            },
            "WebhookEvent": {
              "enum": [
                "start",
                "output",
                "logs",
                "completed"
              ],
              "type": "string",
              "title": "WebhookEvent",
              "description": "An enumeration."
            },
            "aspect_ratio": {
              "enum": [
                "1:1",
                "3:4",
                "4:3",
                "9:16",
                "16:9",
                "9:21",
                "21:9"
              ],
              "type": "string",
              "title": "aspect_ratio",
              "description": "An enumeration."
            },
            "ValidationError": {
              "type": "object",
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              }
            },
            "PredictionRequest": {
              "type": "object",
              "title": "PredictionRequest",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "webhook": {
                  "type": "string",
                  "title": "Webhook",
                  "format": "uri",
                  "maxLength": 65536,
                  "minLength": 1
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "output_file_prefix": {
                  "type": "string",
                  "title": "Output File Prefix"
                },
                "webhook_events_filter": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEvent"
                  },
                  "default": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                  ]
                }
              }
            },
            "PredictionResponse": {
              "type": "object",
              "title": "PredictionResponse",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "logs": {
                  "type": "string",
                  "title": "Logs",
                  "default": ""
                },
                "error": {
                  "type": "string",
                  "title": "Error"
                },
                "input": {
                  "$ref": "#/components/schemas/Input"
                },
                "output": {
                  "$ref": "#/components/schemas/Output"
                },
                "status": {
                  "$ref": "#/components/schemas/Status"
                },
                "metrics": {
                  "type": "object",
                  "title": "Metrics"
                },
                "version": {
                  "type": "string",
                  "title": "Version"
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "format": "date-time"
                },
                "started_at": {
                  "type": "string",
                  "title": "Started At",
                  "format": "date-time"
                },
                "completed_at": {
                  "type": "string",
                  "title": "Completed At",
                  "format": "date-time"
                }
              }
            },
            "HTTPValidationError": {
              "type": "object",
              "title": "HTTPValidationError",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "title": "Detail"
                }
              }
            }
          }
        }
      }
    },
    "license_url": null,
    "name": "photon-flash",
    "owner": "luma",
    "paper_url": null,
    "run_count": 1993,
    "url": "https://replicate.com/luma/photon-flash",
    "visibility": "public",
    "weights_url": null
  }
]